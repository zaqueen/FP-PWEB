"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "serveAdmin", {
    enumerable: true,
    get: function() {
        return serveAdmin;
    }
});
const _compression = /*#__PURE__*/ _interop_require_default(require("compression"));
const _connecthistoryapifallback = /*#__PURE__*/ _interop_require_default(require("connect-history-api-fallback"));
const _express = /*#__PURE__*/ _interop_require_default(require("express"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const router = _express.default.Router();
const serveAdmin = async ({ payload })=>{
    router.use((0, _connecthistoryapifallback.default)());
    router.get('*', (req, res, next)=>{
        if (req.path.substr(-1) === '/' && req.path.length > 1) {
            const query = req.url.slice(req.path.length);
            res.redirect(301, req.path.slice(0, -1) + query);
        } else {
            next();
        }
    });
    router.use((0, _compression.default)(payload.config.express.compression));
    router.use(_express.default.static(payload.config.admin.buildPath, {
        redirect: false,
        setHeaders: (res, path)=>{
            const staticFilesRegex = new RegExp('.(svg|css|js|jp(e)?g|png|avif|webp|webm|gif|ico|woff|woff2|ttf|otf)$', 'i');
            if (path.match(staticFilesRegex)) {
                res.set('Cache-Control', `public, max-age=${60 * 60 * 24 * 365}, immutable`);
            }
        }
    }));
    return router;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JpcHRzL3NlcnZlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUGF5bG9hZCB9IGZyb20gJ3BheWxvYWQnXG5pbXBvcnQgdHlwZSB7IFBheWxvYWRIYW5kbGVyIH0gZnJvbSAncGF5bG9hZC9jb25maWcnXG5cbmltcG9ydCBjb21wcmVzc2lvbiBmcm9tICdjb21wcmVzc2lvbidcbmltcG9ydCBoaXN0b3J5IGZyb20gJ2Nvbm5lY3QtaGlzdG9yeS1hcGktZmFsbGJhY2snXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbnR5cGUgU2VydmVBZG1pblR5cGUgPSAob3B0aW9uczogeyBwYXlsb2FkOiBQYXlsb2FkIH0pID0+IFByb21pc2U8UGF5bG9hZEhhbmRsZXI+XG5cbmV4cG9ydCBjb25zdCBzZXJ2ZUFkbWluOiBTZXJ2ZUFkbWluVHlwZSA9IGFzeW5jICh7IHBheWxvYWQgfSkgPT4ge1xuICByb3V0ZXIudXNlKGhpc3RvcnkoKSlcblxuICByb3V0ZXIuZ2V0KCcqJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgaWYgKHJlcS5wYXRoLnN1YnN0cigtMSkgPT09ICcvJyAmJiByZXEucGF0aC5sZW5ndGggPiAxKSB7XG4gICAgICBjb25zdCBxdWVyeSA9IHJlcS51cmwuc2xpY2UocmVxLnBhdGgubGVuZ3RoKVxuICAgICAgcmVzLnJlZGlyZWN0KDMwMSwgcmVxLnBhdGguc2xpY2UoMCwgLTEpICsgcXVlcnkpXG4gICAgfSBlbHNlIHtcbiAgICAgIG5leHQoKVxuICAgIH1cbiAgfSlcblxuICByb3V0ZXIudXNlKGNvbXByZXNzaW9uKHBheWxvYWQuY29uZmlnLmV4cHJlc3MuY29tcHJlc3Npb24pKVxuICByb3V0ZXIudXNlKFxuICAgIGV4cHJlc3Muc3RhdGljKHBheWxvYWQuY29uZmlnLmFkbWluLmJ1aWxkUGF0aCwge1xuICAgICAgcmVkaXJlY3Q6IGZhbHNlLFxuICAgICAgc2V0SGVhZGVyczogKHJlcywgcGF0aCkgPT4ge1xuICAgICAgICBjb25zdCBzdGF0aWNGaWxlc1JlZ2V4ID0gbmV3IFJlZ0V4cChcbiAgICAgICAgICAnLihzdmd8Y3NzfGpzfGpwKGUpP2d8cG5nfGF2aWZ8d2VicHx3ZWJtfGdpZnxpY298d29mZnx3b2ZmMnx0dGZ8b3RmKSQnLFxuICAgICAgICAgICdpJyxcbiAgICAgICAgKVxuICAgICAgICBpZiAocGF0aC5tYXRjaChzdGF0aWNGaWxlc1JlZ2V4KSkge1xuICAgICAgICAgIHJlcy5zZXQoJ0NhY2hlLUNvbnRyb2wnLCBgcHVibGljLCBtYXgtYWdlPSR7NjAgKiA2MCAqIDI0ICogMzY1fSwgaW1tdXRhYmxlYClcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICB9KSxcbiAgKVxuXG4gIHJldHVybiByb3V0ZXJcbn1cbiJdLCJuYW1lcyI6WyJzZXJ2ZUFkbWluIiwicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBheWxvYWQiLCJ1c2UiLCJoaXN0b3J5IiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInBhdGgiLCJzdWJzdHIiLCJsZW5ndGgiLCJxdWVyeSIsInVybCIsInNsaWNlIiwicmVkaXJlY3QiLCJjb21wcmVzc2lvbiIsImNvbmZpZyIsInN0YXRpYyIsImFkbWluIiwiYnVpbGRQYXRoIiwic2V0SGVhZGVycyIsInN0YXRpY0ZpbGVzUmVnZXgiLCJSZWdFeHAiLCJtYXRjaCIsInNldCJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFXYUE7OztlQUFBQTs7O29FQVJXO2tGQUNKO2dFQUNBOzs7Ozs7QUFFcEIsTUFBTUMsU0FBU0MsZ0JBQU8sQ0FBQ0MsTUFBTTtBQUl0QixNQUFNSCxhQUE2QixPQUFPLEVBQUVJLE9BQU8sRUFBRTtJQUMxREgsT0FBT0ksR0FBRyxDQUFDQyxJQUFBQSxrQ0FBTztJQUVsQkwsT0FBT00sR0FBRyxDQUFDLEtBQUssQ0FBQ0MsS0FBS0MsS0FBS0M7UUFDekIsSUFBSUYsSUFBSUcsSUFBSSxDQUFDQyxNQUFNLENBQUMsQ0FBQyxPQUFPLE9BQU9KLElBQUlHLElBQUksQ0FBQ0UsTUFBTSxHQUFHLEdBQUc7WUFDdEQsTUFBTUMsUUFBUU4sSUFBSU8sR0FBRyxDQUFDQyxLQUFLLENBQUNSLElBQUlHLElBQUksQ0FBQ0UsTUFBTTtZQUMzQ0osSUFBSVEsUUFBUSxDQUFDLEtBQUtULElBQUlHLElBQUksQ0FBQ0ssS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLRjtRQUM1QyxPQUFPO1lBQ0xKO1FBQ0Y7SUFDRjtJQUVBVCxPQUFPSSxHQUFHLENBQUNhLElBQUFBLG9CQUFXLEVBQUNkLFFBQVFlLE1BQU0sQ0FBQ2pCLE9BQU8sQ0FBQ2dCLFdBQVc7SUFDekRqQixPQUFPSSxHQUFHLENBQ1JILGdCQUFPLENBQUNrQixNQUFNLENBQUNoQixRQUFRZSxNQUFNLENBQUNFLEtBQUssQ0FBQ0MsU0FBUyxFQUFFO1FBQzdDTCxVQUFVO1FBQ1ZNLFlBQVksQ0FBQ2QsS0FBS0U7WUFDaEIsTUFBTWEsbUJBQW1CLElBQUlDLE9BQzNCLHdFQUNBO1lBRUYsSUFBSWQsS0FBS2UsS0FBSyxDQUFDRixtQkFBbUI7Z0JBQ2hDZixJQUFJa0IsR0FBRyxDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixFQUFFLEtBQUssS0FBSyxLQUFLLElBQUksV0FBVyxDQUFDO1lBQzdFO1FBQ0Y7SUFDRjtJQUdGLE9BQU8xQjtBQUNUIn0=