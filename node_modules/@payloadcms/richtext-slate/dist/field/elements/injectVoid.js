"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "injectVoidElement", {
    enumerable: true,
    get: function() {
        return injectVoidElement;
    }
});
const _slate = require("slate");
const _isLastSelectedElementEmpty = require("./isLastSelectedElementEmpty");
const injectVoidElement = (editor, element)=>{
    const lastSelectedElementIsEmpty = (0, _isLastSelectedElementEmpty.isLastSelectedElementEmpty)(editor);
    const previous = _slate.Editor.previous(editor);
    if (lastSelectedElementIsEmpty) {
        // If previous node is void
        if (previous?.[0] && _slate.Editor.isVoid(editor, previous[0])) {
            // Insert a blank element between void nodes
            // so user can place cursor between void nodes
            _slate.Transforms.insertNodes(editor, {
                children: [
                    {
                        text: ''
                    }
                ]
            });
            _slate.Transforms.setNodes(editor, element);
        // Otherwise just set the empty node equal to new void
        } else {
            _slate.Transforms.setNodes(editor, element);
        }
    } else {
        _slate.Transforms.insertNodes(editor, element);
    }
    // Add an empty node after the new void
    _slate.Transforms.insertNodes(editor, {
        children: [
            {
                text: ''
            }
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9maWVsZC9lbGVtZW50cy9pbmplY3RWb2lkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgRWxlbWVudCB9IGZyb20gJ3NsYXRlJ1xuXG5pbXBvcnQgeyBFZGl0b3IsIFRyYW5zZm9ybXMgfSBmcm9tICdzbGF0ZSdcblxuaW1wb3J0IHR5cGUgeyBFbGVtZW50Tm9kZSB9IGZyb20gJy4uLy4uL3R5cGVzJ1xuXG5pbXBvcnQgeyBpc0xhc3RTZWxlY3RlZEVsZW1lbnRFbXB0eSB9IGZyb20gJy4vaXNMYXN0U2VsZWN0ZWRFbGVtZW50RW1wdHknXG5cbmV4cG9ydCBjb25zdCBpbmplY3RWb2lkRWxlbWVudCA9IChlZGl0b3I6IEVkaXRvciwgZWxlbWVudDogRWxlbWVudCk6IHZvaWQgPT4ge1xuICBjb25zdCBsYXN0U2VsZWN0ZWRFbGVtZW50SXNFbXB0eSA9IGlzTGFzdFNlbGVjdGVkRWxlbWVudEVtcHR5KGVkaXRvcilcbiAgY29uc3QgcHJldmlvdXMgPSBFZGl0b3IucHJldmlvdXM8RWxlbWVudE5vZGU+KGVkaXRvcilcblxuICBpZiAobGFzdFNlbGVjdGVkRWxlbWVudElzRW1wdHkpIHtcbiAgICAvLyBJZiBwcmV2aW91cyBub2RlIGlzIHZvaWRcbiAgICBpZiAocHJldmlvdXM/LlswXSAmJiBFZGl0b3IuaXNWb2lkKGVkaXRvciwgcHJldmlvdXNbMF0pKSB7XG4gICAgICAvLyBJbnNlcnQgYSBibGFuayBlbGVtZW50IGJldHdlZW4gdm9pZCBub2Rlc1xuICAgICAgLy8gc28gdXNlciBjYW4gcGxhY2UgY3Vyc29yIGJldHdlZW4gdm9pZCBub2Rlc1xuICAgICAgVHJhbnNmb3Jtcy5pbnNlcnROb2RlcyhlZGl0b3IsIHsgY2hpbGRyZW46IFt7IHRleHQ6ICcnIH1dIH0pXG4gICAgICBUcmFuc2Zvcm1zLnNldE5vZGVzKGVkaXRvciwgZWxlbWVudClcbiAgICAgIC8vIE90aGVyd2lzZSBqdXN0IHNldCB0aGUgZW1wdHkgbm9kZSBlcXVhbCB0byBuZXcgdm9pZFxuICAgIH0gZWxzZSB7XG4gICAgICBUcmFuc2Zvcm1zLnNldE5vZGVzKGVkaXRvciwgZWxlbWVudClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgVHJhbnNmb3Jtcy5pbnNlcnROb2RlcyhlZGl0b3IsIGVsZW1lbnQpXG4gIH1cblxuICAvLyBBZGQgYW4gZW1wdHkgbm9kZSBhZnRlciB0aGUgbmV3IHZvaWRcbiAgVHJhbnNmb3Jtcy5pbnNlcnROb2RlcyhlZGl0b3IsIHsgY2hpbGRyZW46IFt7IHRleHQ6ICcnIH1dIH0pXG59XG4iXSwibmFtZXMiOlsiaW5qZWN0Vm9pZEVsZW1lbnQiLCJlZGl0b3IiLCJlbGVtZW50IiwibGFzdFNlbGVjdGVkRWxlbWVudElzRW1wdHkiLCJpc0xhc3RTZWxlY3RlZEVsZW1lbnRFbXB0eSIsInByZXZpb3VzIiwiRWRpdG9yIiwiaXNWb2lkIiwiVHJhbnNmb3JtcyIsImluc2VydE5vZGVzIiwiY2hpbGRyZW4iLCJ0ZXh0Iiwic2V0Tm9kZXMiXSwibWFwcGluZ3MiOiI7Ozs7K0JBUWFBOzs7ZUFBQUE7Ozt1QkFOc0I7NENBSVE7QUFFcEMsTUFBTUEsb0JBQW9CLENBQUNDLFFBQWdCQztJQUNoRCxNQUFNQyw2QkFBNkJDLElBQUFBLHNEQUEwQixFQUFDSDtJQUM5RCxNQUFNSSxXQUFXQyxhQUFNLENBQUNELFFBQVEsQ0FBY0o7SUFFOUMsSUFBSUUsNEJBQTRCO1FBQzlCLDJCQUEyQjtRQUMzQixJQUFJRSxVQUFVLENBQUMsRUFBRSxJQUFJQyxhQUFNLENBQUNDLE1BQU0sQ0FBQ04sUUFBUUksUUFBUSxDQUFDLEVBQUUsR0FBRztZQUN2RCw0Q0FBNEM7WUFDNUMsOENBQThDO1lBQzlDRyxpQkFBVSxDQUFDQyxXQUFXLENBQUNSLFFBQVE7Z0JBQUVTLFVBQVU7b0JBQUM7d0JBQUVDLE1BQU07b0JBQUc7aUJBQUU7WUFBQztZQUMxREgsaUJBQVUsQ0FBQ0ksUUFBUSxDQUFDWCxRQUFRQztRQUM1QixzREFBc0Q7UUFDeEQsT0FBTztZQUNMTSxpQkFBVSxDQUFDSSxRQUFRLENBQUNYLFFBQVFDO1FBQzlCO0lBQ0YsT0FBTztRQUNMTSxpQkFBVSxDQUFDQyxXQUFXLENBQUNSLFFBQVFDO0lBQ2pDO0lBRUEsdUNBQXVDO0lBQ3ZDTSxpQkFBVSxDQUFDQyxXQUFXLENBQUNSLFFBQVE7UUFBRVMsVUFBVTtZQUFDO2dCQUFFQyxNQUFNO1lBQUc7U0FBRTtJQUFDO0FBQzVEIn0=