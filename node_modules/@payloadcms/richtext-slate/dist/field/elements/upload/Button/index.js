'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _elements = require("payload/components/elements");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _slatereact = require("slate-react");
const _Upload = /*#__PURE__*/ _interop_require_default(require("../../../icons/Upload"));
const _Button = /*#__PURE__*/ _interop_require_default(require("../../Button"));
const _EnabledRelationshipsCondition = require("../../EnabledRelationshipsCondition");
const _injectVoid = require("../../injectVoid");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'upload-rich-text-button';
const insertUpload = (editor, { relationTo, value })=>{
    const text = {
        text: ' '
    };
    const upload = {
        children: [
            text
        ],
        relationTo,
        type: 'upload',
        value
    };
    (0, _injectVoid.injectVoidElement)(editor, upload);
    _slatereact.ReactEditor.focus(editor);
};
const UploadButton = ({ enabledCollectionSlugs })=>{
    const { t } = (0, _reacti18next.useTranslation)([
        'upload',
        'general'
    ]);
    const editor = (0, _slatereact.useSlate)();
    const [ListDrawer, ListDrawerToggler, { closeDrawer }] = (0, _elements.useListDrawer)({
        collectionSlugs: enabledCollectionSlugs,
        uploads: true
    });
    const onSelect = (0, _react.useCallback)(({ collectionConfig, docID })=>{
        insertUpload(editor, {
            relationTo: collectionConfig.slug,
            value: {
                id: docID
            }
        });
        closeDrawer();
    }, [
        editor,
        closeDrawer
    ]);
    return /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, /*#__PURE__*/ _react.default.createElement(ListDrawerToggler, null, /*#__PURE__*/ _react.default.createElement(_Button.default, {
        className: baseClass,
        el: "div",
        format: "upload",
        onClick: ()=>{
        // do nothing
        },
        tooltip: t('fields:addUpload')
    }, /*#__PURE__*/ _react.default.createElement(_Upload.default, null))), /*#__PURE__*/ _react.default.createElement(ListDrawer, {
        onSelect: onSelect
    }));
};
const _default = (props)=>{
    return /*#__PURE__*/ _react.default.createElement(_EnabledRelationshipsCondition.EnabledRelationshipsCondition, {
        ...props,
        uploads: true
    }, /*#__PURE__*/ _react.default.createElement(UploadButton, props));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9maWVsZC9lbGVtZW50cy91cGxvYWQvQnV0dG9uL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgdXNlTGlzdERyYXdlciB9IGZyb20gJ3BheWxvYWQvY29tcG9uZW50cy9lbGVtZW50cydcbmltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcbmltcG9ydCB7IFJlYWN0RWRpdG9yLCB1c2VTbGF0ZSB9IGZyb20gJ3NsYXRlLXJlYWN0J1xuXG5pbXBvcnQgVXBsb2FkSWNvbiBmcm9tICcuLi8uLi8uLi9pY29ucy9VcGxvYWQnXG5pbXBvcnQgRWxlbWVudEJ1dHRvbiBmcm9tICcuLi8uLi9CdXR0b24nXG5pbXBvcnQgeyBFbmFibGVkUmVsYXRpb25zaGlwc0NvbmRpdGlvbiB9IGZyb20gJy4uLy4uL0VuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uJ1xuaW1wb3J0IHsgaW5qZWN0Vm9pZEVsZW1lbnQgfSBmcm9tICcuLi8uLi9pbmplY3RWb2lkJ1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnXG5cbmNvbnN0IGJhc2VDbGFzcyA9ICd1cGxvYWQtcmljaC10ZXh0LWJ1dHRvbidcblxuY29uc3QgaW5zZXJ0VXBsb2FkID0gKGVkaXRvciwgeyByZWxhdGlvblRvLCB2YWx1ZSB9KSA9PiB7XG4gIGNvbnN0IHRleHQgPSB7IHRleHQ6ICcgJyB9XG5cbiAgY29uc3QgdXBsb2FkID0ge1xuICAgIGNoaWxkcmVuOiBbdGV4dF0sXG4gICAgcmVsYXRpb25UbyxcbiAgICB0eXBlOiAndXBsb2FkJyxcbiAgICB2YWx1ZSxcbiAgfVxuXG4gIGluamVjdFZvaWRFbGVtZW50KGVkaXRvciwgdXBsb2FkKVxuXG4gIFJlYWN0RWRpdG9yLmZvY3VzKGVkaXRvcilcbn1cblxudHlwZSBCdXR0b25Qcm9wcyA9IHtcbiAgZW5hYmxlZENvbGxlY3Rpb25TbHVnczogc3RyaW5nW11cbiAgcGF0aDogc3RyaW5nXG59XG5cbmNvbnN0IFVwbG9hZEJ1dHRvbjogUmVhY3QuRkM8QnV0dG9uUHJvcHM+ID0gKHsgZW5hYmxlZENvbGxlY3Rpb25TbHVncyB9KSA9PiB7XG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oWyd1cGxvYWQnLCAnZ2VuZXJhbCddKVxuICBjb25zdCBlZGl0b3IgPSB1c2VTbGF0ZSgpXG5cbiAgY29uc3QgW0xpc3REcmF3ZXIsIExpc3REcmF3ZXJUb2dnbGVyLCB7IGNsb3NlRHJhd2VyIH1dID0gdXNlTGlzdERyYXdlcih7XG4gICAgY29sbGVjdGlvblNsdWdzOiBlbmFibGVkQ29sbGVjdGlvblNsdWdzLFxuICAgIHVwbG9hZHM6IHRydWUsXG4gIH0pXG5cbiAgY29uc3Qgb25TZWxlY3QgPSB1c2VDYWxsYmFjayhcbiAgICAoeyBjb2xsZWN0aW9uQ29uZmlnLCBkb2NJRCB9KSA9PiB7XG4gICAgICBpbnNlcnRVcGxvYWQoZWRpdG9yLCB7XG4gICAgICAgIHJlbGF0aW9uVG86IGNvbGxlY3Rpb25Db25maWcuc2x1ZyxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICBpZDogZG9jSUQsXG4gICAgICAgIH0sXG4gICAgICB9KVxuICAgICAgY2xvc2VEcmF3ZXIoKVxuICAgIH0sXG4gICAgW2VkaXRvciwgY2xvc2VEcmF3ZXJdLFxuICApXG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8TGlzdERyYXdlclRvZ2dsZXI+XG4gICAgICAgIDxFbGVtZW50QnV0dG9uXG4gICAgICAgICAgY2xhc3NOYW1lPXtiYXNlQ2xhc3N9XG4gICAgICAgICAgZWw9XCJkaXZcIlxuICAgICAgICAgIGZvcm1hdD1cInVwbG9hZFwiXG4gICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgLy8gZG8gbm90aGluZ1xuICAgICAgICAgIH19XG4gICAgICAgICAgdG9vbHRpcD17dCgnZmllbGRzOmFkZFVwbG9hZCcpfVxuICAgICAgICA+XG4gICAgICAgICAgPFVwbG9hZEljb24gLz5cbiAgICAgICAgPC9FbGVtZW50QnV0dG9uPlxuICAgICAgPC9MaXN0RHJhd2VyVG9nZ2xlcj5cbiAgICAgIDxMaXN0RHJhd2VyIG9uU2VsZWN0PXtvblNlbGVjdH0gLz5cbiAgICA8L0ZyYWdtZW50PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IChwcm9wczogQnV0dG9uUHJvcHMpOiBSZWFjdC5SZWFjdE5vZGUgPT4ge1xuICByZXR1cm4gKFxuICAgIDxFbmFibGVkUmVsYXRpb25zaGlwc0NvbmRpdGlvbiB7Li4ucHJvcHN9IHVwbG9hZHM+XG4gICAgICA8VXBsb2FkQnV0dG9uIHsuLi5wcm9wc30gLz5cbiAgICA8L0VuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uPlxuICApXG59XG4iXSwibmFtZXMiOlsiYmFzZUNsYXNzIiwiaW5zZXJ0VXBsb2FkIiwiZWRpdG9yIiwicmVsYXRpb25UbyIsInZhbHVlIiwidGV4dCIsInVwbG9hZCIsImNoaWxkcmVuIiwidHlwZSIsImluamVjdFZvaWRFbGVtZW50IiwiUmVhY3RFZGl0b3IiLCJmb2N1cyIsIlVwbG9hZEJ1dHRvbiIsImVuYWJsZWRDb2xsZWN0aW9uU2x1Z3MiLCJ0IiwidXNlVHJhbnNsYXRpb24iLCJ1c2VTbGF0ZSIsIkxpc3REcmF3ZXIiLCJMaXN0RHJhd2VyVG9nZ2xlciIsImNsb3NlRHJhd2VyIiwidXNlTGlzdERyYXdlciIsImNvbGxlY3Rpb25TbHVncyIsInVwbG9hZHMiLCJvblNlbGVjdCIsInVzZUNhbGxiYWNrIiwiY29sbGVjdGlvbkNvbmZpZyIsImRvY0lEIiwic2x1ZyIsImlkIiwiRnJhZ21lbnQiLCJFbGVtZW50QnV0dG9uIiwiY2xhc3NOYW1lIiwiZWwiLCJmb3JtYXQiLCJvbkNsaWNrIiwidG9vbHRpcCIsIlVwbG9hZEljb24iLCJwcm9wcyIsIkVuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7K0JBNkVBOzs7ZUFBQTs7OzBCQTNFOEI7K0RBQ2U7OEJBQ2Q7NEJBQ087K0RBRWY7K0RBQ0c7K0NBQ29COzRCQUNaO1FBQzNCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFUCxNQUFNQSxZQUFZO0FBRWxCLE1BQU1DLGVBQWUsQ0FBQ0MsUUFBUSxFQUFFQyxVQUFVLEVBQUVDLEtBQUssRUFBRTtJQUNqRCxNQUFNQyxPQUFPO1FBQUVBLE1BQU07SUFBSTtJQUV6QixNQUFNQyxTQUFTO1FBQ2JDLFVBQVU7WUFBQ0Y7U0FBSztRQUNoQkY7UUFDQUssTUFBTTtRQUNOSjtJQUNGO0lBRUFLLElBQUFBLDZCQUFpQixFQUFDUCxRQUFRSTtJQUUxQkksdUJBQVcsQ0FBQ0MsS0FBSyxDQUFDVDtBQUNwQjtBQU9BLE1BQU1VLGVBQXNDLENBQUMsRUFBRUMsc0JBQXNCLEVBQUU7SUFDckUsTUFBTSxFQUFFQyxDQUFDLEVBQUUsR0FBR0MsSUFBQUEsNEJBQWMsRUFBQztRQUFDO1FBQVU7S0FBVTtJQUNsRCxNQUFNYixTQUFTYyxJQUFBQSxvQkFBUTtJQUV2QixNQUFNLENBQUNDLFlBQVlDLG1CQUFtQixFQUFFQyxXQUFXLEVBQUUsQ0FBQyxHQUFHQyxJQUFBQSx1QkFBYSxFQUFDO1FBQ3JFQyxpQkFBaUJSO1FBQ2pCUyxTQUFTO0lBQ1g7SUFFQSxNQUFNQyxXQUFXQyxJQUFBQSxrQkFBVyxFQUMxQixDQUFDLEVBQUVDLGdCQUFnQixFQUFFQyxLQUFLLEVBQUU7UUFDMUJ6QixhQUFhQyxRQUFRO1lBQ25CQyxZQUFZc0IsaUJBQWlCRSxJQUFJO1lBQ2pDdkIsT0FBTztnQkFDTHdCLElBQUlGO1lBQ047UUFDRjtRQUNBUDtJQUNGLEdBQ0E7UUFBQ2pCO1FBQVFpQjtLQUFZO0lBR3ZCLHFCQUNFLDZCQUFDVSxlQUFRLHNCQUNQLDZCQUFDWCx1Q0FDQyw2QkFBQ1ksZUFBYTtRQUNaQyxXQUFXL0I7UUFDWGdDLElBQUc7UUFDSEMsUUFBTztRQUNQQyxTQUFTO1FBQ1AsYUFBYTtRQUNmO1FBQ0FDLFNBQVNyQixFQUFFO3FCQUVYLDZCQUFDc0IsZUFBVSx5QkFHZiw2QkFBQ25CO1FBQVdNLFVBQVVBOztBQUc1QjtNQUVBLFdBQWUsQ0FBQ2M7SUFDZCxxQkFDRSw2QkFBQ0MsNERBQTZCO1FBQUUsR0FBR0QsS0FBSztRQUFFZixTQUFBQTtxQkFDeEMsNkJBQUNWLGNBQWlCeUI7QUFHeEIifQ==