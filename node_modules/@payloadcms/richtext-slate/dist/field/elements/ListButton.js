"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    baseClass: function() {
        return baseClass;
    },
    default: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _slatereact = require("slate-react");
require("../buttons.scss");
const _isListActive = /*#__PURE__*/ _interop_require_default(require("./isListActive"));
const _toggleList = /*#__PURE__*/ _interop_require_default(require("./toggleList"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'rich-text__button';
const ListButton = ({ children, className, format, onClick })=>{
    const editor = (0, _slatereact.useSlate)();
    const defaultOnClick = (0, _react.useCallback)((event)=>{
        event.preventDefault();
        (0, _toggleList.default)(editor, format);
    }, [
        editor,
        format
    ]);
    return /*#__PURE__*/ _react.default.createElement("button", {
        className: [
            baseClass,
            className,
            (0, _isListActive.default)(editor, format) && `${baseClass}__button--active`
        ].filter(Boolean).join(' '),
        onClick: onClick || defaultOnClick,
        type: "button"
    }, children);
};
const _default = ListButton;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9maWVsZC9lbGVtZW50cy9MaXN0QnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVNsYXRlIH0gZnJvbSAnc2xhdGUtcmVhY3QnXG5cbmltcG9ydCB0eXBlIHsgQnV0dG9uUHJvcHMgfSBmcm9tICcuL3R5cGVzJ1xuXG5pbXBvcnQgJy4uL2J1dHRvbnMuc2NzcydcbmltcG9ydCBpc0xpc3RBY3RpdmUgZnJvbSAnLi9pc0xpc3RBY3RpdmUnXG5pbXBvcnQgdG9nZ2xlTGlzdCBmcm9tICcuL3RvZ2dsZUxpc3QnXG5cbmV4cG9ydCBjb25zdCBiYXNlQ2xhc3MgPSAncmljaC10ZXh0X19idXR0b24nXG5cbmNvbnN0IExpc3RCdXR0b246IFJlYWN0LkZDPEJ1dHRvblByb3BzPiA9ICh7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGZvcm1hdCwgb25DbGljayB9KSA9PiB7XG4gIGNvbnN0IGVkaXRvciA9IHVzZVNsYXRlKClcblxuICBjb25zdCBkZWZhdWx0T25DbGljayA9IHVzZUNhbGxiYWNrKFxuICAgIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgdG9nZ2xlTGlzdChlZGl0b3IsIGZvcm1hdClcbiAgICB9LFxuICAgIFtlZGl0b3IsIGZvcm1hdF0sXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzTmFtZT17W1xuICAgICAgICBiYXNlQ2xhc3MsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgaXNMaXN0QWN0aXZlKGVkaXRvciwgZm9ybWF0KSAmJiBgJHtiYXNlQ2xhc3N9X19idXR0b24tLWFjdGl2ZWAsXG4gICAgICBdXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgLmpvaW4oJyAnKX1cbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2sgfHwgZGVmYXVsdE9uQ2xpY2t9XG4gICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9idXR0b24+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgTGlzdEJ1dHRvblxuIl0sIm5hbWVzIjpbImJhc2VDbGFzcyIsIkxpc3RCdXR0b24iLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsImZvcm1hdCIsIm9uQ2xpY2siLCJlZGl0b3IiLCJ1c2VTbGF0ZSIsImRlZmF1bHRPbkNsaWNrIiwidXNlQ2FsbGJhY2siLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwidG9nZ2xlTGlzdCIsImJ1dHRvbiIsImlzTGlzdEFjdGl2ZSIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFTYUEsU0FBUztlQUFUQTs7SUE4QmIsT0FBeUI7ZUFBekI7OzsrREF2Q21DOzRCQUNWO1FBSWxCO3FFQUNrQjttRUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWhCLE1BQU1BLFlBQVk7QUFFekIsTUFBTUMsYUFBb0MsQ0FBQyxFQUFFQyxRQUFRLEVBQUVDLFNBQVMsRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7SUFDakYsTUFBTUMsU0FBU0MsSUFBQUEsb0JBQVE7SUFFdkIsTUFBTUMsaUJBQWlCQyxJQUFBQSxrQkFBVyxFQUNoQyxDQUFDQztRQUNDQSxNQUFNQyxjQUFjO1FBQ3BCQyxJQUFBQSxtQkFBVSxFQUFDTixRQUFRRjtJQUNyQixHQUNBO1FBQUNFO1FBQVFGO0tBQU87SUFHbEIscUJBQ0UsNkJBQUNTO1FBQ0NWLFdBQVc7WUFDVEg7WUFDQUc7WUFDQVcsSUFBQUEscUJBQVksRUFBQ1IsUUFBUUYsV0FBVyxDQUFDLEVBQUVKLFVBQVUsZ0JBQWdCLENBQUM7U0FDL0QsQ0FDRWUsTUFBTSxDQUFDQyxTQUNQQyxJQUFJLENBQUM7UUFDUlosU0FBU0EsV0FBV0c7UUFDcEJVLE1BQUs7T0FFSmhCO0FBR1A7TUFFQSxXQUFlRCJ9