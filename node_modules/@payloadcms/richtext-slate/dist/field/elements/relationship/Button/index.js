'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _elements = require("payload/components/elements");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _slatereact = require("slate-react");
const _Relationship = /*#__PURE__*/ _interop_require_default(require("../../../icons/Relationship"));
const _Button = /*#__PURE__*/ _interop_require_default(require("../../Button"));
const _EnabledRelationshipsCondition = require("../../EnabledRelationshipsCondition");
const _injectVoid = require("../../injectVoid");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'relationship-rich-text-button';
const insertRelationship = (editor, { relationTo, value })=>{
    const text = {
        text: ' '
    };
    const relationship = {
        children: [
            text
        ],
        relationTo,
        type: 'relationship',
        value
    };
    (0, _injectVoid.injectVoidElement)(editor, relationship);
    _slatereact.ReactEditor.focus(editor);
};
const RelationshipButton = ({ enabledCollectionSlugs })=>{
    const { t } = (0, _reacti18next.useTranslation)('fields');
    const editor = (0, _slatereact.useSlate)();
    const [selectedCollectionSlug, setSelectedCollectionSlug] = (0, _react.useState)(()=>enabledCollectionSlugs[0]);
    const [ListDrawer, ListDrawerToggler, { closeDrawer, isDrawerOpen }] = (0, _elements.useListDrawer)({
        collectionSlugs: enabledCollectionSlugs,
        selectedCollection: selectedCollectionSlug
    });
    const onSelect = (0, _react.useCallback)(({ collectionConfig, docID })=>{
        insertRelationship(editor, {
            relationTo: collectionConfig.slug,
            value: {
                id: docID
            }
        });
        closeDrawer();
    }, [
        editor,
        closeDrawer
    ]);
    (0, _react.useEffect)(()=>{
        // always reset back to first option
        // TODO: this is not working, see the ListDrawer component
        setSelectedCollectionSlug(enabledCollectionSlugs[0]);
    }, [
        isDrawerOpen,
        enabledCollectionSlugs
    ]);
    return /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, /*#__PURE__*/ _react.default.createElement(ListDrawerToggler, null, /*#__PURE__*/ _react.default.createElement(_Button.default, {
        className: baseClass,
        el: "div",
        format: "relationship",
        onClick: ()=>{
        // do nothing
        },
        tooltip: t('addRelationship')
    }, /*#__PURE__*/ _react.default.createElement(_Relationship.default, null))), /*#__PURE__*/ _react.default.createElement(ListDrawer, {
        onSelect: onSelect
    }));
};
const _default = (props)=>{
    return /*#__PURE__*/ _react.default.createElement(_EnabledRelationshipsCondition.EnabledRelationshipsCondition, props, /*#__PURE__*/ _react.default.createElement(RelationshipButton, props));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9maWVsZC9lbGVtZW50cy9yZWxhdGlvbnNoaXAvQnV0dG9uL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgdXNlTGlzdERyYXdlciB9IGZyb20gJ3BheWxvYWQvY29tcG9uZW50cy9lbGVtZW50cydcbmltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCwgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcbmltcG9ydCB7IFJlYWN0RWRpdG9yLCB1c2VTbGF0ZSB9IGZyb20gJ3NsYXRlLXJlYWN0J1xuXG5pbXBvcnQgUmVsYXRpb25zaGlwSWNvbiBmcm9tICcuLi8uLi8uLi9pY29ucy9SZWxhdGlvbnNoaXAnXG5pbXBvcnQgRWxlbWVudEJ1dHRvbiBmcm9tICcuLi8uLi9CdXR0b24nXG5pbXBvcnQgeyBFbmFibGVkUmVsYXRpb25zaGlwc0NvbmRpdGlvbiB9IGZyb20gJy4uLy4uL0VuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uJ1xuaW1wb3J0IHsgaW5qZWN0Vm9pZEVsZW1lbnQgfSBmcm9tICcuLi8uLi9pbmplY3RWb2lkJ1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnXG5cbmNvbnN0IGJhc2VDbGFzcyA9ICdyZWxhdGlvbnNoaXAtcmljaC10ZXh0LWJ1dHRvbidcblxuY29uc3QgaW5zZXJ0UmVsYXRpb25zaGlwID0gKGVkaXRvciwgeyByZWxhdGlvblRvLCB2YWx1ZSB9KSA9PiB7XG4gIGNvbnN0IHRleHQgPSB7IHRleHQ6ICcgJyB9XG5cbiAgY29uc3QgcmVsYXRpb25zaGlwID0ge1xuICAgIGNoaWxkcmVuOiBbdGV4dF0sXG4gICAgcmVsYXRpb25UbyxcbiAgICB0eXBlOiAncmVsYXRpb25zaGlwJyxcbiAgICB2YWx1ZSxcbiAgfVxuXG4gIGluamVjdFZvaWRFbGVtZW50KGVkaXRvciwgcmVsYXRpb25zaGlwKVxuXG4gIFJlYWN0RWRpdG9yLmZvY3VzKGVkaXRvcilcbn1cblxudHlwZSBQcm9wcyA9IHtcbiAgZW5hYmxlZENvbGxlY3Rpb25TbHVnczogc3RyaW5nW11cbiAgcGF0aDogc3RyaW5nXG59XG5jb25zdCBSZWxhdGlvbnNoaXBCdXR0b246IFJlYWN0LkZDPFByb3BzPiA9ICh7IGVuYWJsZWRDb2xsZWN0aW9uU2x1Z3MgfSkgPT4ge1xuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCdmaWVsZHMnKVxuICBjb25zdCBlZGl0b3IgPSB1c2VTbGF0ZSgpXG4gIGNvbnN0IFtzZWxlY3RlZENvbGxlY3Rpb25TbHVnLCBzZXRTZWxlY3RlZENvbGxlY3Rpb25TbHVnXSA9IHVzZVN0YXRlKFxuICAgICgpID0+IGVuYWJsZWRDb2xsZWN0aW9uU2x1Z3NbMF0sXG4gIClcbiAgY29uc3QgW0xpc3REcmF3ZXIsIExpc3REcmF3ZXJUb2dnbGVyLCB7IGNsb3NlRHJhd2VyLCBpc0RyYXdlck9wZW4gfV0gPSB1c2VMaXN0RHJhd2VyKHtcbiAgICBjb2xsZWN0aW9uU2x1Z3M6IGVuYWJsZWRDb2xsZWN0aW9uU2x1Z3MsXG4gICAgc2VsZWN0ZWRDb2xsZWN0aW9uOiBzZWxlY3RlZENvbGxlY3Rpb25TbHVnLFxuICB9KVxuXG4gIGNvbnN0IG9uU2VsZWN0ID0gdXNlQ2FsbGJhY2soXG4gICAgKHsgY29sbGVjdGlvbkNvbmZpZywgZG9jSUQgfSkgPT4ge1xuICAgICAgaW5zZXJ0UmVsYXRpb25zaGlwKGVkaXRvciwge1xuICAgICAgICByZWxhdGlvblRvOiBjb2xsZWN0aW9uQ29uZmlnLnNsdWcsXG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgaWQ6IGRvY0lELFxuICAgICAgICB9LFxuICAgICAgfSlcbiAgICAgIGNsb3NlRHJhd2VyKClcbiAgICB9LFxuICAgIFtlZGl0b3IsIGNsb3NlRHJhd2VyXSxcbiAgKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gYWx3YXlzIHJlc2V0IGJhY2sgdG8gZmlyc3Qgb3B0aW9uXG4gICAgLy8gVE9ETzogdGhpcyBpcyBub3Qgd29ya2luZywgc2VlIHRoZSBMaXN0RHJhd2VyIGNvbXBvbmVudFxuICAgIHNldFNlbGVjdGVkQ29sbGVjdGlvblNsdWcoZW5hYmxlZENvbGxlY3Rpb25TbHVnc1swXSlcbiAgfSwgW2lzRHJhd2VyT3BlbiwgZW5hYmxlZENvbGxlY3Rpb25TbHVnc10pXG5cbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8TGlzdERyYXdlclRvZ2dsZXI+XG4gICAgICAgIDxFbGVtZW50QnV0dG9uXG4gICAgICAgICAgY2xhc3NOYW1lPXtiYXNlQ2xhc3N9XG4gICAgICAgICAgZWw9XCJkaXZcIlxuICAgICAgICAgIGZvcm1hdD1cInJlbGF0aW9uc2hpcFwiXG4gICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgLy8gZG8gbm90aGluZ1xuICAgICAgICAgIH19XG4gICAgICAgICAgdG9vbHRpcD17dCgnYWRkUmVsYXRpb25zaGlwJyl9XG4gICAgICAgID5cbiAgICAgICAgICA8UmVsYXRpb25zaGlwSWNvbiAvPlxuICAgICAgICA8L0VsZW1lbnRCdXR0b24+XG4gICAgICA8L0xpc3REcmF3ZXJUb2dnbGVyPlxuICAgICAgPExpc3REcmF3ZXIgb25TZWxlY3Q9e29uU2VsZWN0fSAvPlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgKHByb3BzOiBQcm9wcyk6IFJlYWN0LlJlYWN0Tm9kZSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEVuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uIHsuLi5wcm9wc30+XG4gICAgICA8UmVsYXRpb25zaGlwQnV0dG9uIHsuLi5wcm9wc30gLz5cbiAgICA8L0VuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uPlxuICApXG59XG4iXSwibmFtZXMiOlsiYmFzZUNsYXNzIiwiaW5zZXJ0UmVsYXRpb25zaGlwIiwiZWRpdG9yIiwicmVsYXRpb25UbyIsInZhbHVlIiwidGV4dCIsInJlbGF0aW9uc2hpcCIsImNoaWxkcmVuIiwidHlwZSIsImluamVjdFZvaWRFbGVtZW50IiwiUmVhY3RFZGl0b3IiLCJmb2N1cyIsIlJlbGF0aW9uc2hpcEJ1dHRvbiIsImVuYWJsZWRDb2xsZWN0aW9uU2x1Z3MiLCJ0IiwidXNlVHJhbnNsYXRpb24iLCJ1c2VTbGF0ZSIsInNlbGVjdGVkQ29sbGVjdGlvblNsdWciLCJzZXRTZWxlY3RlZENvbGxlY3Rpb25TbHVnIiwidXNlU3RhdGUiLCJMaXN0RHJhd2VyIiwiTGlzdERyYXdlclRvZ2dsZXIiLCJjbG9zZURyYXdlciIsImlzRHJhd2VyT3BlbiIsInVzZUxpc3REcmF3ZXIiLCJjb2xsZWN0aW9uU2x1Z3MiLCJzZWxlY3RlZENvbGxlY3Rpb24iLCJvblNlbGVjdCIsInVzZUNhbGxiYWNrIiwiY29sbGVjdGlvbkNvbmZpZyIsImRvY0lEIiwic2x1ZyIsImlkIiwidXNlRWZmZWN0IiwiRnJhZ21lbnQiLCJFbGVtZW50QnV0dG9uIiwiY2xhc3NOYW1lIiwiZWwiLCJmb3JtYXQiLCJvbkNsaWNrIiwidG9vbHRpcCIsIlJlbGF0aW9uc2hpcEljb24iLCJwcm9wcyIsIkVuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7K0JBb0ZBOzs7ZUFBQTs7OzBCQWxGOEI7K0RBQ29DOzhCQUNuQzs0QkFDTztxRUFFVDsrREFDSDsrQ0FDb0I7NEJBQ1o7UUFDM0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVQLE1BQU1BLFlBQVk7QUFFbEIsTUFBTUMscUJBQXFCLENBQUNDLFFBQVEsRUFBRUMsVUFBVSxFQUFFQyxLQUFLLEVBQUU7SUFDdkQsTUFBTUMsT0FBTztRQUFFQSxNQUFNO0lBQUk7SUFFekIsTUFBTUMsZUFBZTtRQUNuQkMsVUFBVTtZQUFDRjtTQUFLO1FBQ2hCRjtRQUNBSyxNQUFNO1FBQ05KO0lBQ0Y7SUFFQUssSUFBQUEsNkJBQWlCLEVBQUNQLFFBQVFJO0lBRTFCSSx1QkFBVyxDQUFDQyxLQUFLLENBQUNUO0FBQ3BCO0FBTUEsTUFBTVUscUJBQXNDLENBQUMsRUFBRUMsc0JBQXNCLEVBQUU7SUFDckUsTUFBTSxFQUFFQyxDQUFDLEVBQUUsR0FBR0MsSUFBQUEsNEJBQWMsRUFBQztJQUM3QixNQUFNYixTQUFTYyxJQUFBQSxvQkFBUTtJQUN2QixNQUFNLENBQUNDLHdCQUF3QkMsMEJBQTBCLEdBQUdDLElBQUFBLGVBQVEsRUFDbEUsSUFBTU4sc0JBQXNCLENBQUMsRUFBRTtJQUVqQyxNQUFNLENBQUNPLFlBQVlDLG1CQUFtQixFQUFFQyxXQUFXLEVBQUVDLFlBQVksRUFBRSxDQUFDLEdBQUdDLElBQUFBLHVCQUFhLEVBQUM7UUFDbkZDLGlCQUFpQlo7UUFDakJhLG9CQUFvQlQ7SUFDdEI7SUFFQSxNQUFNVSxXQUFXQyxJQUFBQSxrQkFBVyxFQUMxQixDQUFDLEVBQUVDLGdCQUFnQixFQUFFQyxLQUFLLEVBQUU7UUFDMUI3QixtQkFBbUJDLFFBQVE7WUFDekJDLFlBQVkwQixpQkFBaUJFLElBQUk7WUFDakMzQixPQUFPO2dCQUNMNEIsSUFBSUY7WUFDTjtRQUNGO1FBQ0FSO0lBQ0YsR0FDQTtRQUFDcEI7UUFBUW9CO0tBQVk7SUFHdkJXLElBQUFBLGdCQUFTLEVBQUM7UUFDUixvQ0FBb0M7UUFDcEMsMERBQTBEO1FBQzFEZiwwQkFBMEJMLHNCQUFzQixDQUFDLEVBQUU7SUFDckQsR0FBRztRQUFDVTtRQUFjVjtLQUF1QjtJQUV6QyxxQkFDRSw2QkFBQ3FCLGVBQVEsc0JBQ1AsNkJBQUNiLHVDQUNDLDZCQUFDYyxlQUFhO1FBQ1pDLFdBQVdwQztRQUNYcUMsSUFBRztRQUNIQyxRQUFPO1FBQ1BDLFNBQVM7UUFDUCxhQUFhO1FBQ2Y7UUFDQUMsU0FBUzFCLEVBQUU7cUJBRVgsNkJBQUMyQixxQkFBZ0IseUJBR3JCLDZCQUFDckI7UUFBV08sVUFBVUE7O0FBRzVCO01BRUEsV0FBZSxDQUFDZTtJQUNkLHFCQUNFLDZCQUFDQyw0REFBNkIsRUFBS0QscUJBQ2pDLDZCQUFDOUIsb0JBQXVCOEI7QUFHOUIifQ==