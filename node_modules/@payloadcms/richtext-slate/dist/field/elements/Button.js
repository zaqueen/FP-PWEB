'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    baseClass: function() {
        return baseClass;
    },
    default: function() {
        return _default;
    }
});
const _components = require("payload/components");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _slatereact = require("slate-react");
require("../buttons.scss");
const _isActive = /*#__PURE__*/ _interop_require_default(require("./isActive"));
const _toggle = /*#__PURE__*/ _interop_require_default(require("./toggle"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'rich-text__button';
const ElementButton = (props)=>{
    const { children, className, el = 'button', format, onClick, tooltip, type = 'type' } = props;
    const editor = (0, _slatereact.useSlate)();
    const [showTooltip, setShowTooltip] = (0, _react.useState)(false);
    const defaultOnClick = (0, _react.useCallback)((event)=>{
        event.preventDefault();
        setShowTooltip(false);
        (0, _toggle.default)(editor, format, type);
    }, [
        editor,
        format,
        type
    ]);
    const Tag = el;
    return /*#__PURE__*/ _react.default.createElement(Tag, {
        ...el === 'button' && {
            type: 'button'
        },
        className: [
            baseClass,
            className,
            (0, _isActive.default)(editor, format, type) && `${baseClass}__button--active`
        ].filter(Boolean).join(' '),
        onClick: onClick || defaultOnClick,
        onMouseEnter: ()=>setShowTooltip(true),
        onMouseLeave: ()=>setShowTooltip(false)
    }, tooltip && /*#__PURE__*/ _react.default.createElement(_components.Tooltip, {
        show: showTooltip
    }, tooltip), children);
};
const _default = ElementButton;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9maWVsZC9lbGVtZW50cy9CdXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuaW1wb3J0IHR5cGUgeyBFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgeyBUb29sdGlwIH0gZnJvbSAncGF5bG9hZC9jb21wb25lbnRzJ1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlU2xhdGUgfSBmcm9tICdzbGF0ZS1yZWFjdCdcblxuaW1wb3J0IHR5cGUgeyBCdXR0b25Qcm9wcyB9IGZyb20gJy4vdHlwZXMnXG5cbmltcG9ydCAnLi4vYnV0dG9ucy5zY3NzJ1xuaW1wb3J0IGlzRWxlbWVudEFjdGl2ZSBmcm9tICcuL2lzQWN0aXZlJ1xuaW1wb3J0IHRvZ2dsZUVsZW1lbnQgZnJvbSAnLi90b2dnbGUnXG5cbmV4cG9ydCBjb25zdCBiYXNlQ2xhc3MgPSAncmljaC10ZXh0X19idXR0b24nXG5cbmNvbnN0IEVsZW1lbnRCdXR0b246IFJlYWN0LkZDPEJ1dHRvblByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuLCBjbGFzc05hbWUsIGVsID0gJ2J1dHRvbicsIGZvcm1hdCwgb25DbGljaywgdG9vbHRpcCwgdHlwZSA9ICd0eXBlJyB9ID0gcHJvcHNcblxuICBjb25zdCBlZGl0b3IgPSB1c2VTbGF0ZSgpXG4gIGNvbnN0IFtzaG93VG9vbHRpcCwgc2V0U2hvd1Rvb2x0aXBdID0gdXNlU3RhdGUoZmFsc2UpXG5cbiAgY29uc3QgZGVmYXVsdE9uQ2xpY2sgPSB1c2VDYWxsYmFjayhcbiAgICAoZXZlbnQpID0+IHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcbiAgICAgIHNldFNob3dUb29sdGlwKGZhbHNlKVxuICAgICAgdG9nZ2xlRWxlbWVudChlZGl0b3IsIGZvcm1hdCwgdHlwZSlcbiAgICB9LFxuICAgIFtlZGl0b3IsIGZvcm1hdCwgdHlwZV0sXG4gIClcblxuICBjb25zdCBUYWc6IEVsZW1lbnRUeXBlID0gZWxcblxuICByZXR1cm4gKFxuICAgIDxUYWdcbiAgICAgIHsuLi4oZWwgPT09ICdidXR0b24nICYmIHsgdHlwZTogJ2J1dHRvbicgfSl9XG4gICAgICBjbGFzc05hbWU9e1tcbiAgICAgICAgYmFzZUNsYXNzLFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIGlzRWxlbWVudEFjdGl2ZShlZGl0b3IsIGZvcm1hdCwgdHlwZSkgJiYgYCR7YmFzZUNsYXNzfV9fYnV0dG9uLS1hY3RpdmVgLFxuICAgICAgXVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgIC5qb2luKCcgJyl9XG4gICAgICBvbkNsaWNrPXtvbkNsaWNrIHx8IGRlZmF1bHRPbkNsaWNrfVxuICAgICAgb25Nb3VzZUVudGVyPXsoKSA9PiBzZXRTaG93VG9vbHRpcCh0cnVlKX1cbiAgICAgIG9uTW91c2VMZWF2ZT17KCkgPT4gc2V0U2hvd1Rvb2x0aXAoZmFsc2UpfVxuICAgID5cbiAgICAgIHt0b29sdGlwICYmIDxUb29sdGlwIHNob3c9e3Nob3dUb29sdGlwfT57dG9vbHRpcH08L1Rvb2x0aXA+fVxuICAgICAge2NoaWxkcmVufVxuICAgIDwvVGFnPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEVsZW1lbnRCdXR0b25cbiJdLCJuYW1lcyI6WyJiYXNlQ2xhc3MiLCJFbGVtZW50QnV0dG9uIiwicHJvcHMiLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsImVsIiwiZm9ybWF0Iiwib25DbGljayIsInRvb2x0aXAiLCJ0eXBlIiwiZWRpdG9yIiwidXNlU2xhdGUiLCJzaG93VG9vbHRpcCIsInNldFNob3dUb29sdGlwIiwidXNlU3RhdGUiLCJkZWZhdWx0T25DbGljayIsInVzZUNhbGxiYWNrIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInRvZ2dsZUVsZW1lbnQiLCJUYWciLCJpc0VsZW1lbnRBY3RpdmUiLCJmaWx0ZXIiLCJCb29sZWFuIiwiam9pbiIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VMZWF2ZSIsIlRvb2x0aXAiLCJzaG93Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0lBYWFBLFNBQVM7ZUFBVEE7O0lBdUNiLE9BQTRCO2VBQTVCOzs7NEJBakR3QjsrREFDcUI7NEJBQ3BCO1FBSWxCO2lFQUNxQjsrREFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRW5CLE1BQU1BLFlBQVk7QUFFekIsTUFBTUMsZ0JBQXVDLENBQUNDO0lBQzVDLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLEtBQUssUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLE1BQU0sRUFBRSxHQUFHUDtJQUV4RixNQUFNUSxTQUFTQyxJQUFBQSxvQkFBUTtJQUN2QixNQUFNLENBQUNDLGFBQWFDLGVBQWUsR0FBR0MsSUFBQUEsZUFBUSxFQUFDO0lBRS9DLE1BQU1DLGlCQUFpQkMsSUFBQUEsa0JBQVcsRUFDaEMsQ0FBQ0M7UUFDQ0EsTUFBTUMsY0FBYztRQUNwQkwsZUFBZTtRQUNmTSxJQUFBQSxlQUFhLEVBQUNULFFBQVFKLFFBQVFHO0lBQ2hDLEdBQ0E7UUFBQ0M7UUFBUUo7UUFBUUc7S0FBSztJQUd4QixNQUFNVyxNQUFtQmY7SUFFekIscUJBQ0UsNkJBQUNlO1FBQ0UsR0FBSWYsT0FBTyxZQUFZO1lBQUVJLE1BQU07UUFBUyxDQUFDO1FBQzFDTCxXQUFXO1lBQ1RKO1lBQ0FJO1lBQ0FpQixJQUFBQSxpQkFBZSxFQUFDWCxRQUFRSixRQUFRRyxTQUFTLENBQUMsRUFBRVQsVUFBVSxnQkFBZ0IsQ0FBQztTQUN4RSxDQUNFc0IsTUFBTSxDQUFDQyxTQUNQQyxJQUFJLENBQUM7UUFDUmpCLFNBQVNBLFdBQVdRO1FBQ3BCVSxjQUFjLElBQU1aLGVBQWU7UUFDbkNhLGNBQWMsSUFBTWIsZUFBZTtPQUVsQ0wseUJBQVcsNkJBQUNtQixtQkFBTztRQUFDQyxNQUFNaEI7T0FBY0osVUFDeENMO0FBR1A7TUFFQSxXQUFlRiJ9