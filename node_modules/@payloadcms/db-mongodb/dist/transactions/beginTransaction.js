// @ts-expect-error // TODO: Fix this import
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "beginTransaction", {
    enumerable: true,
    get: function() {
        return beginTransaction;
    }
});
const _errors = require("payload/errors");
const _uuid = require("uuid");
let transactionsNotAvailable;
const beginTransaction = async function beginTransaction(options = {}) {
    let id = null;
    if (!this.connection) {
        throw new _errors.APIError('beginTransaction called while no connection to the database exists');
    }
    if (transactionsNotAvailable) return id;
    const client = this.connection.getClient();
    if (!client.options.replicaSet) {
        transactionsNotAvailable = true;
    } else {
        id = (0, _uuid.v4)();
        if (!this.sessions[id]) {
            this.sessions[id] = await client.startSession();
        }
        if (this.sessions[id].inTransaction()) {
            this.payload.logger.warn('beginTransaction called while transaction already exists');
        } else {
            await this.sessions[id].startTransaction(options);
        }
    }
    return id;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmFuc2FjdGlvbnMvYmVnaW5UcmFuc2FjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtZXhwZWN0LWVycm9yIC8vIFRPRE86IEZpeCB0aGlzIGltcG9ydFxuaW1wb3J0IHR5cGUgeyBUcmFuc2FjdGlvbk9wdGlvbnMgfSBmcm9tICdtb25nb2RiJ1xuaW1wb3J0IHR5cGUgeyBCZWdpblRyYW5zYWN0aW9uIH0gZnJvbSAncGF5bG9hZC9kYXRhYmFzZSdcblxuaW1wb3J0IHsgQVBJRXJyb3IgfSBmcm9tICdwYXlsb2FkL2Vycm9ycydcbmltcG9ydCB7IHY0IGFzIHV1aWQgfSBmcm9tICd1dWlkJ1xuXG5sZXQgdHJhbnNhY3Rpb25zTm90QXZhaWxhYmxlOiBib29sZWFuXG5leHBvcnQgY29uc3QgYmVnaW5UcmFuc2FjdGlvbjogQmVnaW5UcmFuc2FjdGlvbiA9IGFzeW5jIGZ1bmN0aW9uIGJlZ2luVHJhbnNhY3Rpb24oXG4gIG9wdGlvbnM6IFRyYW5zYWN0aW9uT3B0aW9ucyA9IHt9LFxuKSB7XG4gIGxldCBpZCA9IG51bGxcbiAgaWYgKCF0aGlzLmNvbm5lY3Rpb24pIHtcbiAgICB0aHJvdyBuZXcgQVBJRXJyb3IoJ2JlZ2luVHJhbnNhY3Rpb24gY2FsbGVkIHdoaWxlIG5vIGNvbm5lY3Rpb24gdG8gdGhlIGRhdGFiYXNlIGV4aXN0cycpXG4gIH1cblxuICBpZiAodHJhbnNhY3Rpb25zTm90QXZhaWxhYmxlKSByZXR1cm4gaWRcblxuICBjb25zdCBjbGllbnQgPSB0aGlzLmNvbm5lY3Rpb24uZ2V0Q2xpZW50KClcbiAgaWYgKCFjbGllbnQub3B0aW9ucy5yZXBsaWNhU2V0KSB7XG4gICAgdHJhbnNhY3Rpb25zTm90QXZhaWxhYmxlID0gdHJ1ZVxuICB9IGVsc2Uge1xuICAgIGlkID0gdXVpZCgpXG4gICAgaWYgKCF0aGlzLnNlc3Npb25zW2lkXSkge1xuICAgICAgdGhpcy5zZXNzaW9uc1tpZF0gPSBhd2FpdCBjbGllbnQuc3RhcnRTZXNzaW9uKClcbiAgICB9XG4gICAgaWYgKHRoaXMuc2Vzc2lvbnNbaWRdLmluVHJhbnNhY3Rpb24oKSkge1xuICAgICAgdGhpcy5wYXlsb2FkLmxvZ2dlci53YXJuKCdiZWdpblRyYW5zYWN0aW9uIGNhbGxlZCB3aGlsZSB0cmFuc2FjdGlvbiBhbHJlYWR5IGV4aXN0cycpXG4gICAgfSBlbHNlIHtcbiAgICAgIGF3YWl0IHRoaXMuc2Vzc2lvbnNbaWRdLnN0YXJ0VHJhbnNhY3Rpb24ob3B0aW9ucylcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGlkXG59XG4iXSwibmFtZXMiOlsiYmVnaW5UcmFuc2FjdGlvbiIsInRyYW5zYWN0aW9uc05vdEF2YWlsYWJsZSIsIm9wdGlvbnMiLCJpZCIsImNvbm5lY3Rpb24iLCJBUElFcnJvciIsImNsaWVudCIsImdldENsaWVudCIsInJlcGxpY2FTZXQiLCJ1dWlkIiwic2Vzc2lvbnMiLCJzdGFydFNlc3Npb24iLCJpblRyYW5zYWN0aW9uIiwicGF5bG9hZCIsImxvZ2dlciIsIndhcm4iLCJzdGFydFRyYW5zYWN0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQSw0Q0FBNEM7Ozs7OytCQVEvQkE7OztlQUFBQTs7O3dCQUpZO3NCQUNFO0FBRTNCLElBQUlDO0FBQ0csTUFBTUQsbUJBQXFDLGVBQWVBLGlCQUMvREUsVUFBOEIsQ0FBQyxDQUFDO0lBRWhDLElBQUlDLEtBQUs7SUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDQyxVQUFVLEVBQUU7UUFDcEIsTUFBTSxJQUFJQyxnQkFBUSxDQUFDO0lBQ3JCO0lBRUEsSUFBSUosMEJBQTBCLE9BQU9FO0lBRXJDLE1BQU1HLFNBQVMsSUFBSSxDQUFDRixVQUFVLENBQUNHLFNBQVM7SUFDeEMsSUFBSSxDQUFDRCxPQUFPSixPQUFPLENBQUNNLFVBQVUsRUFBRTtRQUM5QlAsMkJBQTJCO0lBQzdCLE9BQU87UUFDTEUsS0FBS00sSUFBQUEsUUFBSTtRQUNULElBQUksQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQ1AsR0FBRyxFQUFFO1lBQ3RCLElBQUksQ0FBQ08sUUFBUSxDQUFDUCxHQUFHLEdBQUcsTUFBTUcsT0FBT0ssWUFBWTtRQUMvQztRQUNBLElBQUksSUFBSSxDQUFDRCxRQUFRLENBQUNQLEdBQUcsQ0FBQ1MsYUFBYSxJQUFJO1lBQ3JDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQztRQUMzQixPQUFPO1lBQ0wsTUFBTSxJQUFJLENBQUNMLFFBQVEsQ0FBQ1AsR0FBRyxDQUFDYSxnQkFBZ0IsQ0FBQ2Q7UUFDM0M7SUFDRjtJQUNBLE9BQU9DO0FBQ1QifQ==