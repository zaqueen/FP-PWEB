"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "deleteOne", {
    enumerable: true,
    get: function() {
        return deleteOne;
    }
});
const _sanitizeInternalFields = /*#__PURE__*/ _interop_require_default(require("./utilities/sanitizeInternalFields"));
const _withSession = require("./withSession");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const deleteOne = async function deleteOne({ collection, req = {}, where }) {
    const Model = this.collections[collection];
    const options = (0, _withSession.withSession)(this, req.transactionID);
    const query = await Model.buildQuery({
        payload: this.payload,
        where
    });
    const doc = await Model.findOneAndDelete(query, options).lean();
    let result = JSON.parse(JSON.stringify(doc));
    // custom id type reset
    result.id = result._id;
    result = (0, _sanitizeInternalFields.default)(result);
    return result;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZWxldGVPbmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBEZWxldGVPbmUgfSBmcm9tICdwYXlsb2FkL2RhdGFiYXNlJ1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkUmVxdWVzdCB9IGZyb20gJ3BheWxvYWQvdHlwZXMnXG5pbXBvcnQgdHlwZSB7IERvY3VtZW50IH0gZnJvbSAncGF5bG9hZC90eXBlcydcblxuaW1wb3J0IHR5cGUgeyBNb25nb29zZUFkYXB0ZXIgfSBmcm9tICcuJ1xuXG5pbXBvcnQgc2FuaXRpemVJbnRlcm5hbEZpZWxkcyBmcm9tICcuL3V0aWxpdGllcy9zYW5pdGl6ZUludGVybmFsRmllbGRzJ1xuaW1wb3J0IHsgd2l0aFNlc3Npb24gfSBmcm9tICcuL3dpdGhTZXNzaW9uJ1xuXG5leHBvcnQgY29uc3QgZGVsZXRlT25lOiBEZWxldGVPbmUgPSBhc3luYyBmdW5jdGlvbiBkZWxldGVPbmUoXG4gIHRoaXM6IE1vbmdvb3NlQWRhcHRlcixcbiAgeyBjb2xsZWN0aW9uLCByZXEgPSB7fSBhcyBQYXlsb2FkUmVxdWVzdCwgd2hlcmUgfSxcbikge1xuICBjb25zdCBNb2RlbCA9IHRoaXMuY29sbGVjdGlvbnNbY29sbGVjdGlvbl1cbiAgY29uc3Qgb3B0aW9ucyA9IHdpdGhTZXNzaW9uKHRoaXMsIHJlcS50cmFuc2FjdGlvbklEKVxuXG4gIGNvbnN0IHF1ZXJ5ID0gYXdhaXQgTW9kZWwuYnVpbGRRdWVyeSh7XG4gICAgcGF5bG9hZDogdGhpcy5wYXlsb2FkLFxuICAgIHdoZXJlLFxuICB9KVxuXG4gIGNvbnN0IGRvYyA9IGF3YWl0IE1vZGVsLmZpbmRPbmVBbmREZWxldGUocXVlcnksIG9wdGlvbnMpLmxlYW4oKVxuXG4gIGxldCByZXN1bHQ6IERvY3VtZW50ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkb2MpKVxuXG4gIC8vIGN1c3RvbSBpZCB0eXBlIHJlc2V0XG4gIHJlc3VsdC5pZCA9IHJlc3VsdC5faWRcbiAgcmVzdWx0ID0gc2FuaXRpemVJbnRlcm5hbEZpZWxkcyhyZXN1bHQpXG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbImRlbGV0ZU9uZSIsImNvbGxlY3Rpb24iLCJyZXEiLCJ3aGVyZSIsIk1vZGVsIiwiY29sbGVjdGlvbnMiLCJvcHRpb25zIiwid2l0aFNlc3Npb24iLCJ0cmFuc2FjdGlvbklEIiwicXVlcnkiLCJidWlsZFF1ZXJ5IiwicGF5bG9hZCIsImRvYyIsImZpbmRPbmVBbmREZWxldGUiLCJsZWFuIiwicmVzdWx0IiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiaWQiLCJfaWQiLCJzYW5pdGl6ZUludGVybmFsRmllbGRzIl0sIm1hcHBpbmdzIjoiOzs7OytCQVNhQTs7O2VBQUFBOzs7K0VBSHNCOzZCQUNQOzs7Ozs7QUFFckIsTUFBTUEsWUFBdUIsZUFBZUEsVUFFakQsRUFBRUMsVUFBVSxFQUFFQyxNQUFNLENBQUMsQ0FBbUIsRUFBRUMsS0FBSyxFQUFFO0lBRWpELE1BQU1DLFFBQVEsSUFBSSxDQUFDQyxXQUFXLENBQUNKLFdBQVc7SUFDMUMsTUFBTUssVUFBVUMsSUFBQUEsd0JBQVcsRUFBQyxJQUFJLEVBQUVMLElBQUlNLGFBQWE7SUFFbkQsTUFBTUMsUUFBUSxNQUFNTCxNQUFNTSxVQUFVLENBQUM7UUFDbkNDLFNBQVMsSUFBSSxDQUFDQSxPQUFPO1FBQ3JCUjtJQUNGO0lBRUEsTUFBTVMsTUFBTSxNQUFNUixNQUFNUyxnQkFBZ0IsQ0FBQ0osT0FBT0gsU0FBU1EsSUFBSTtJQUU3RCxJQUFJQyxTQUFtQkMsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxTQUFTLENBQUNOO0lBRWpELHVCQUF1QjtJQUN2QkcsT0FBT0ksRUFBRSxHQUFHSixPQUFPSyxHQUFHO0lBQ3RCTCxTQUFTTSxJQUFBQSwrQkFBc0IsRUFBQ047SUFFaEMsT0FBT0E7QUFDVCJ9