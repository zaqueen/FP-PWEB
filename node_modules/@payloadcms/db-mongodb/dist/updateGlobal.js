"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "updateGlobal", {
    enumerable: true,
    get: function() {
        return updateGlobal;
    }
});
const _sanitizeInternalFields = /*#__PURE__*/ _interop_require_default(require("./utilities/sanitizeInternalFields"));
const _withSession = require("./withSession");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const updateGlobal = async function updateGlobal({ data, req = {}, slug }) {
    const Model = this.globals;
    const options = {
        ...(0, _withSession.withSession)(this, req.transactionID),
        lean: true,
        new: true
    };
    let result;
    result = await Model.findOneAndUpdate({
        globalType: slug
    }, data, options);
    result = JSON.parse(JSON.stringify(result));
    // custom id type reset
    result.id = result._id;
    result = (0, _sanitizeInternalFields.default)(result);
    return result;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91cGRhdGVHbG9iYWwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBVcGRhdGVHbG9iYWwgfSBmcm9tICdwYXlsb2FkL2RhdGFiYXNlJ1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkUmVxdWVzdCB9IGZyb20gJ3BheWxvYWQvdHlwZXMnXG5cbmltcG9ydCB0eXBlIHsgTW9uZ29vc2VBZGFwdGVyIH0gZnJvbSAnLidcblxuaW1wb3J0IHNhbml0aXplSW50ZXJuYWxGaWVsZHMgZnJvbSAnLi91dGlsaXRpZXMvc2FuaXRpemVJbnRlcm5hbEZpZWxkcydcbmltcG9ydCB7IHdpdGhTZXNzaW9uIH0gZnJvbSAnLi93aXRoU2Vzc2lvbidcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUdsb2JhbDogVXBkYXRlR2xvYmFsID0gYXN5bmMgZnVuY3Rpb24gdXBkYXRlR2xvYmFsKFxuICB0aGlzOiBNb25nb29zZUFkYXB0ZXIsXG4gIHsgZGF0YSwgcmVxID0ge30gYXMgUGF5bG9hZFJlcXVlc3QsIHNsdWcgfSxcbikge1xuICBjb25zdCBNb2RlbCA9IHRoaXMuZ2xvYmFsc1xuICBjb25zdCBvcHRpb25zID0ge1xuICAgIC4uLndpdGhTZXNzaW9uKHRoaXMsIHJlcS50cmFuc2FjdGlvbklEKSxcbiAgICBsZWFuOiB0cnVlLFxuICAgIG5ldzogdHJ1ZSxcbiAgfVxuXG4gIGxldCByZXN1bHRcbiAgcmVzdWx0ID0gYXdhaXQgTW9kZWwuZmluZE9uZUFuZFVwZGF0ZSh7IGdsb2JhbFR5cGU6IHNsdWcgfSwgZGF0YSwgb3B0aW9ucylcblxuICByZXN1bHQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpXG5cbiAgLy8gY3VzdG9tIGlkIHR5cGUgcmVzZXRcbiAgcmVzdWx0LmlkID0gcmVzdWx0Ll9pZFxuICByZXN1bHQgPSBzYW5pdGl6ZUludGVybmFsRmllbGRzKHJlc3VsdClcblxuICByZXR1cm4gcmVzdWx0XG59XG4iXSwibmFtZXMiOlsidXBkYXRlR2xvYmFsIiwiZGF0YSIsInJlcSIsInNsdWciLCJNb2RlbCIsImdsb2JhbHMiLCJvcHRpb25zIiwid2l0aFNlc3Npb24iLCJ0cmFuc2FjdGlvbklEIiwibGVhbiIsIm5ldyIsInJlc3VsdCIsImZpbmRPbmVBbmRVcGRhdGUiLCJnbG9iYWxUeXBlIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiaWQiLCJfaWQiLCJzYW5pdGl6ZUludGVybmFsRmllbGRzIl0sIm1hcHBpbmdzIjoiOzs7OytCQVFhQTs7O2VBQUFBOzs7K0VBSHNCOzZCQUNQOzs7Ozs7QUFFckIsTUFBTUEsZUFBNkIsZUFBZUEsYUFFdkQsRUFBRUMsSUFBSSxFQUFFQyxNQUFNLENBQUMsQ0FBbUIsRUFBRUMsSUFBSSxFQUFFO0lBRTFDLE1BQU1DLFFBQVEsSUFBSSxDQUFDQyxPQUFPO0lBQzFCLE1BQU1DLFVBQVU7UUFDZCxHQUFHQyxJQUFBQSx3QkFBVyxFQUFDLElBQUksRUFBRUwsSUFBSU0sYUFBYSxDQUFDO1FBQ3ZDQyxNQUFNO1FBQ05DLEtBQUs7SUFDUDtJQUVBLElBQUlDO0lBQ0pBLFNBQVMsTUFBTVAsTUFBTVEsZ0JBQWdCLENBQUM7UUFBRUMsWUFBWVY7SUFBSyxHQUFHRixNQUFNSztJQUVsRUssU0FBU0csS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxTQUFTLENBQUNMO0lBRW5DLHVCQUF1QjtJQUN2QkEsT0FBT00sRUFBRSxHQUFHTixPQUFPTyxHQUFHO0lBQ3RCUCxTQUFTUSxJQUFBQSwrQkFBc0IsRUFBQ1I7SUFFaEMsT0FBT0E7QUFDVCJ9