"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createVersion", {
    enumerable: true,
    get: function() {
        return createVersion;
    }
});
const _withSession = require("./withSession");
const createVersion = async function createVersion({ autosave, collectionSlug, createdAt, parent, req = {}, updatedAt, versionData }) {
    const VersionModel = this.versions[collectionSlug];
    const options = (0, _withSession.withSession)(this, req.transactionID);
    const [doc] = await VersionModel.create([
        {
            autosave,
            createdAt,
            latest: true,
            parent,
            updatedAt,
            version: versionData
        }
    ], options, req);
    await VersionModel.updateMany({
        $and: [
            {
                _id: {
                    $ne: doc._id
                }
            },
            {
                parent: {
                    $eq: parent
                }
            },
            {
                latest: {
                    $eq: true
                }
            }
        ]
    }, {
        $unset: {
            latest: 1
        }
    });
    const result = JSON.parse(JSON.stringify(doc));
    const verificationToken = doc._verificationToken;
    // custom id type reset
    result.id = result._id;
    if (verificationToken) {
        result._verificationToken = verificationToken;
    }
    return result;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVWZXJzaW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQ3JlYXRlVmVyc2lvbiB9IGZyb20gJ3BheWxvYWQvZGF0YWJhc2UnXG5pbXBvcnQgdHlwZSB7IFBheWxvYWRSZXF1ZXN0IH0gZnJvbSAncGF5bG9hZC90eXBlcydcbmltcG9ydCB0eXBlIHsgRG9jdW1lbnQgfSBmcm9tICdwYXlsb2FkL3R5cGVzJ1xuXG5pbXBvcnQgdHlwZSB7IE1vbmdvb3NlQWRhcHRlciB9IGZyb20gJy4nXG5cbmltcG9ydCB7IHdpdGhTZXNzaW9uIH0gZnJvbSAnLi93aXRoU2Vzc2lvbidcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVZlcnNpb246IENyZWF0ZVZlcnNpb24gPSBhc3luYyBmdW5jdGlvbiBjcmVhdGVWZXJzaW9uKFxuICB0aGlzOiBNb25nb29zZUFkYXB0ZXIsXG4gIHtcbiAgICBhdXRvc2F2ZSxcbiAgICBjb2xsZWN0aW9uU2x1ZyxcbiAgICBjcmVhdGVkQXQsXG4gICAgcGFyZW50LFxuICAgIHJlcSA9IHt9IGFzIFBheWxvYWRSZXF1ZXN0LFxuICAgIHVwZGF0ZWRBdCxcbiAgICB2ZXJzaW9uRGF0YSxcbiAgfSxcbikge1xuICBjb25zdCBWZXJzaW9uTW9kZWwgPSB0aGlzLnZlcnNpb25zW2NvbGxlY3Rpb25TbHVnXVxuICBjb25zdCBvcHRpb25zID0gd2l0aFNlc3Npb24odGhpcywgcmVxLnRyYW5zYWN0aW9uSUQpXG5cbiAgY29uc3QgW2RvY10gPSBhd2FpdCBWZXJzaW9uTW9kZWwuY3JlYXRlKFxuICAgIFtcbiAgICAgIHtcbiAgICAgICAgYXV0b3NhdmUsXG4gICAgICAgIGNyZWF0ZWRBdCxcbiAgICAgICAgbGF0ZXN0OiB0cnVlLFxuICAgICAgICBwYXJlbnQsXG4gICAgICAgIHVwZGF0ZWRBdCxcbiAgICAgICAgdmVyc2lvbjogdmVyc2lvbkRhdGEsXG4gICAgICB9LFxuICAgIF0sXG4gICAgb3B0aW9ucyxcbiAgICByZXEsXG4gIClcblxuICBhd2FpdCBWZXJzaW9uTW9kZWwudXBkYXRlTWFueShcbiAgICB7XG4gICAgICAkYW5kOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBfaWQ6IHtcbiAgICAgICAgICAgICRuZTogZG9jLl9pZCxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGFyZW50OiB7XG4gICAgICAgICAgICAkZXE6IHBhcmVudCxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbGF0ZXN0OiB7XG4gICAgICAgICAgICAkZXE6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7ICR1bnNldDogeyBsYXRlc3Q6IDEgfSB9LFxuICApXG5cbiAgY29uc3QgcmVzdWx0OiBEb2N1bWVudCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZG9jKSlcbiAgY29uc3QgdmVyaWZpY2F0aW9uVG9rZW4gPSBkb2MuX3ZlcmlmaWNhdGlvblRva2VuXG5cbiAgLy8gY3VzdG9tIGlkIHR5cGUgcmVzZXRcbiAgcmVzdWx0LmlkID0gcmVzdWx0Ll9pZFxuICBpZiAodmVyaWZpY2F0aW9uVG9rZW4pIHtcbiAgICByZXN1bHQuX3ZlcmlmaWNhdGlvblRva2VuID0gdmVyaWZpY2F0aW9uVG9rZW5cbiAgfVxuICByZXR1cm4gcmVzdWx0XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlVmVyc2lvbiIsImF1dG9zYXZlIiwiY29sbGVjdGlvblNsdWciLCJjcmVhdGVkQXQiLCJwYXJlbnQiLCJyZXEiLCJ1cGRhdGVkQXQiLCJ2ZXJzaW9uRGF0YSIsIlZlcnNpb25Nb2RlbCIsInZlcnNpb25zIiwib3B0aW9ucyIsIndpdGhTZXNzaW9uIiwidHJhbnNhY3Rpb25JRCIsImRvYyIsImNyZWF0ZSIsImxhdGVzdCIsInZlcnNpb24iLCJ1cGRhdGVNYW55IiwiJGFuZCIsIl9pZCIsIiRuZSIsIiRlcSIsIiR1bnNldCIsInJlc3VsdCIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInZlcmlmaWNhdGlvblRva2VuIiwiX3ZlcmlmaWNhdGlvblRva2VuIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7K0JBUWFBOzs7ZUFBQUE7Ozs2QkFGZTtBQUVyQixNQUFNQSxnQkFBK0IsZUFBZUEsY0FFekQsRUFDRUMsUUFBUSxFQUNSQyxjQUFjLEVBQ2RDLFNBQVMsRUFDVEMsTUFBTSxFQUNOQyxNQUFNLENBQUMsQ0FBbUIsRUFDMUJDLFNBQVMsRUFDVEMsV0FBVyxFQUNaO0lBRUQsTUFBTUMsZUFBZSxJQUFJLENBQUNDLFFBQVEsQ0FBQ1AsZUFBZTtJQUNsRCxNQUFNUSxVQUFVQyxJQUFBQSx3QkFBVyxFQUFDLElBQUksRUFBRU4sSUFBSU8sYUFBYTtJQUVuRCxNQUFNLENBQUNDLElBQUksR0FBRyxNQUFNTCxhQUFhTSxNQUFNLENBQ3JDO1FBQ0U7WUFDRWI7WUFDQUU7WUFDQVksUUFBUTtZQUNSWDtZQUNBRTtZQUNBVSxTQUFTVDtRQUNYO0tBQ0QsRUFDREcsU0FDQUw7SUFHRixNQUFNRyxhQUFhUyxVQUFVLENBQzNCO1FBQ0VDLE1BQU07WUFDSjtnQkFDRUMsS0FBSztvQkFDSEMsS0FBS1AsSUFBSU0sR0FBRztnQkFDZDtZQUNGO1lBQ0E7Z0JBQ0VmLFFBQVE7b0JBQ05pQixLQUFLakI7Z0JBQ1A7WUFDRjtZQUNBO2dCQUNFVyxRQUFRO29CQUNOTSxLQUFLO2dCQUNQO1lBQ0Y7U0FDRDtJQUNILEdBQ0E7UUFBRUMsUUFBUTtZQUFFUCxRQUFRO1FBQUU7SUFBRTtJQUcxQixNQUFNUSxTQUFtQkMsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxTQUFTLENBQUNiO0lBQ25ELE1BQU1jLG9CQUFvQmQsSUFBSWUsa0JBQWtCO0lBRWhELHVCQUF1QjtJQUN2QkwsT0FBT00sRUFBRSxHQUFHTixPQUFPSixHQUFHO0lBQ3RCLElBQUlRLG1CQUFtQjtRQUNyQkosT0FBT0ssa0JBQWtCLEdBQUdEO0lBQzlCO0lBQ0EsT0FBT0o7QUFDVCJ9