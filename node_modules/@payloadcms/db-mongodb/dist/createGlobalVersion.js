"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "createGlobalVersion", {
    enumerable: true,
    get: function() {
        return createGlobalVersion;
    }
});
const _withSession = require("./withSession");
const createGlobalVersion = async function createGlobalVersion({ autosave, createdAt, globalSlug, parent, req = {}, updatedAt, versionData }) {
    const VersionModel = this.versions[globalSlug];
    const options = (0, _withSession.withSession)(this, req.transactionID);
    const [doc] = await VersionModel.create([
        {
            autosave,
            createdAt,
            latest: true,
            parent,
            updatedAt,
            version: versionData
        }
    ], options, req);
    await VersionModel.updateMany({
        $and: [
            {
                _id: {
                    $ne: doc._id
                }
            },
            {
                parent: {
                    $eq: parent
                }
            },
            {
                latest: {
                    $eq: true
                }
            }
        ]
    }, {
        $unset: {
            latest: 1
        }
    });
    const result = JSON.parse(JSON.stringify(doc));
    const verificationToken = doc._verificationToken;
    // custom id type reset
    result.id = result._id;
    if (verificationToken) {
        result._verificationToken = verificationToken;
    }
    return result;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVHbG9iYWxWZXJzaW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQ3JlYXRlR2xvYmFsVmVyc2lvbiB9IGZyb20gJ3BheWxvYWQvZGF0YWJhc2UnXG5pbXBvcnQgdHlwZSB7IFBheWxvYWRSZXF1ZXN0IH0gZnJvbSAncGF5bG9hZC90eXBlcydcbmltcG9ydCB0eXBlIHsgRG9jdW1lbnQgfSBmcm9tICdwYXlsb2FkL3R5cGVzJ1xuXG5pbXBvcnQgdHlwZSB7IE1vbmdvb3NlQWRhcHRlciB9IGZyb20gJy4nXG5cbmltcG9ydCB7IHdpdGhTZXNzaW9uIH0gZnJvbSAnLi93aXRoU2Vzc2lvbidcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUdsb2JhbFZlcnNpb246IENyZWF0ZUdsb2JhbFZlcnNpb24gPSBhc3luYyBmdW5jdGlvbiBjcmVhdGVHbG9iYWxWZXJzaW9uKFxuICB0aGlzOiBNb25nb29zZUFkYXB0ZXIsXG4gIHsgYXV0b3NhdmUsIGNyZWF0ZWRBdCwgZ2xvYmFsU2x1ZywgcGFyZW50LCByZXEgPSB7fSBhcyBQYXlsb2FkUmVxdWVzdCwgdXBkYXRlZEF0LCB2ZXJzaW9uRGF0YSB9LFxuKSB7XG4gIGNvbnN0IFZlcnNpb25Nb2RlbCA9IHRoaXMudmVyc2lvbnNbZ2xvYmFsU2x1Z11cbiAgY29uc3Qgb3B0aW9ucyA9IHdpdGhTZXNzaW9uKHRoaXMsIHJlcS50cmFuc2FjdGlvbklEKVxuXG4gIGNvbnN0IFtkb2NdID0gYXdhaXQgVmVyc2lvbk1vZGVsLmNyZWF0ZShcbiAgICBbXG4gICAgICB7XG4gICAgICAgIGF1dG9zYXZlLFxuICAgICAgICBjcmVhdGVkQXQsXG4gICAgICAgIGxhdGVzdDogdHJ1ZSxcbiAgICAgICAgcGFyZW50LFxuICAgICAgICB1cGRhdGVkQXQsXG4gICAgICAgIHZlcnNpb246IHZlcnNpb25EYXRhLFxuICAgICAgfSxcbiAgICBdLFxuICAgIG9wdGlvbnMsXG4gICAgcmVxLFxuICApXG5cbiAgYXdhaXQgVmVyc2lvbk1vZGVsLnVwZGF0ZU1hbnkoXG4gICAge1xuICAgICAgJGFuZDogW1xuICAgICAgICB7XG4gICAgICAgICAgX2lkOiB7XG4gICAgICAgICAgICAkbmU6IGRvYy5faWQsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhcmVudDoge1xuICAgICAgICAgICAgJGVxOiBwYXJlbnQsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGxhdGVzdDoge1xuICAgICAgICAgICAgJGVxOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gICAgeyAkdW5zZXQ6IHsgbGF0ZXN0OiAxIH0gfSxcbiAgKVxuXG4gIGNvbnN0IHJlc3VsdDogRG9jdW1lbnQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRvYykpXG4gIGNvbnN0IHZlcmlmaWNhdGlvblRva2VuID0gZG9jLl92ZXJpZmljYXRpb25Ub2tlblxuXG4gIC8vIGN1c3RvbSBpZCB0eXBlIHJlc2V0XG4gIHJlc3VsdC5pZCA9IHJlc3VsdC5faWRcbiAgaWYgKHZlcmlmaWNhdGlvblRva2VuKSB7XG4gICAgcmVzdWx0Ll92ZXJpZmljYXRpb25Ub2tlbiA9IHZlcmlmaWNhdGlvblRva2VuXG4gIH1cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZUdsb2JhbFZlcnNpb24iLCJhdXRvc2F2ZSIsImNyZWF0ZWRBdCIsImdsb2JhbFNsdWciLCJwYXJlbnQiLCJyZXEiLCJ1cGRhdGVkQXQiLCJ2ZXJzaW9uRGF0YSIsIlZlcnNpb25Nb2RlbCIsInZlcnNpb25zIiwib3B0aW9ucyIsIndpdGhTZXNzaW9uIiwidHJhbnNhY3Rpb25JRCIsImRvYyIsImNyZWF0ZSIsImxhdGVzdCIsInZlcnNpb24iLCJ1cGRhdGVNYW55IiwiJGFuZCIsIl9pZCIsIiRuZSIsIiRlcSIsIiR1bnNldCIsInJlc3VsdCIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInZlcmlmaWNhdGlvblRva2VuIiwiX3ZlcmlmaWNhdGlvblRva2VuIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7K0JBUWFBOzs7ZUFBQUE7Ozs2QkFGZTtBQUVyQixNQUFNQSxzQkFBMkMsZUFBZUEsb0JBRXJFLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxVQUFVLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxDQUFDLENBQW1CLEVBQUVDLFNBQVMsRUFBRUMsV0FBVyxFQUFFO0lBRS9GLE1BQU1DLGVBQWUsSUFBSSxDQUFDQyxRQUFRLENBQUNOLFdBQVc7SUFDOUMsTUFBTU8sVUFBVUMsSUFBQUEsd0JBQVcsRUFBQyxJQUFJLEVBQUVOLElBQUlPLGFBQWE7SUFFbkQsTUFBTSxDQUFDQyxJQUFJLEdBQUcsTUFBTUwsYUFBYU0sTUFBTSxDQUNyQztRQUNFO1lBQ0ViO1lBQ0FDO1lBQ0FhLFFBQVE7WUFDUlg7WUFDQUU7WUFDQVUsU0FBU1Q7UUFDWDtLQUNELEVBQ0RHLFNBQ0FMO0lBR0YsTUFBTUcsYUFBYVMsVUFBVSxDQUMzQjtRQUNFQyxNQUFNO1lBQ0o7Z0JBQ0VDLEtBQUs7b0JBQ0hDLEtBQUtQLElBQUlNLEdBQUc7Z0JBQ2Q7WUFDRjtZQUNBO2dCQUNFZixRQUFRO29CQUNOaUIsS0FBS2pCO2dCQUNQO1lBQ0Y7WUFDQTtnQkFDRVcsUUFBUTtvQkFDTk0sS0FBSztnQkFDUDtZQUNGO1NBQ0Q7SUFDSCxHQUNBO1FBQUVDLFFBQVE7WUFBRVAsUUFBUTtRQUFFO0lBQUU7SUFHMUIsTUFBTVEsU0FBbUJDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsU0FBUyxDQUFDYjtJQUNuRCxNQUFNYyxvQkFBb0JkLElBQUllLGtCQUFrQjtJQUVoRCx1QkFBdUI7SUFDdkJMLE9BQU9NLEVBQUUsR0FBR04sT0FBT0osR0FBRztJQUN0QixJQUFJUSxtQkFBbUI7UUFDckJKLE9BQU9LLGtCQUFrQixHQUFHRDtJQUM5QjtJQUNBLE9BQU9KO0FBQ1QifQ==