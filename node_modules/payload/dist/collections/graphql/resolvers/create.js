/* eslint-disable no-param-reassign */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return createResolver;
    }
});
const _isolateTransactionID = /*#__PURE__*/ _interop_require_default(require("../../../utilities/isolateTransactionID"));
const _create = /*#__PURE__*/ _interop_require_default(require("../../operations/create"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function createResolver(collection) {
    return async function resolver(_, args, context) {
        if (args.locale) {
            context.req.locale = args.locale;
        }
        const options = {
            collection,
            data: args.data,
            depth: 0,
            draft: args.draft,
            req: (0, _isolateTransactionID.default)(context.req)
        };
        const result = await (0, _create.default)(options);
        return result;
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb2xsZWN0aW9ucy9ncmFwaHFsL3Jlc29sdmVycy9jcmVhdGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbmltcG9ydCB0eXBlIHsgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJ1xuaW1wb3J0IHR5cGUgeyBNYXJrT3B0aW9uYWwgfSBmcm9tICd0cy1lc3NlbnRpYWxzJ1xuXG5pbXBvcnQgdHlwZSB7IEdlbmVyYXRlZFR5cGVzIH0gZnJvbSAnLi4vLi4vLi4vJ1xuaW1wb3J0IHR5cGUgeyBQYXlsb2FkUmVxdWVzdCB9IGZyb20gJy4uLy4uLy4uL2V4cHJlc3MvdHlwZXMnXG5pbXBvcnQgdHlwZSB7IENvbGxlY3Rpb24gfSBmcm9tICcuLi8uLi9jb25maWcvdHlwZXMnXG5cbmltcG9ydCBpc29sYXRlVHJhbnNhY3Rpb25JRCBmcm9tICcuLi8uLi8uLi91dGlsaXRpZXMvaXNvbGF0ZVRyYW5zYWN0aW9uSUQnXG5pbXBvcnQgY3JlYXRlIGZyb20gJy4uLy4uL29wZXJhdGlvbnMvY3JlYXRlJ1xuXG5leHBvcnQgdHlwZSBSZXNvbHZlcjxUU2x1ZyBleHRlbmRzIGtleW9mIEdlbmVyYXRlZFR5cGVzWydjb2xsZWN0aW9ucyddPiA9IChcbiAgXzogdW5rbm93bixcbiAgYXJnczoge1xuICAgIGRhdGE6IE1hcmtPcHRpb25hbDxcbiAgICAgIEdlbmVyYXRlZFR5cGVzWydjb2xsZWN0aW9ucyddW1RTbHVnXSxcbiAgICAgICdjcmVhdGVkQXQnIHwgJ2lkJyB8ICdzaXplcycgfCAndXBkYXRlZEF0J1xuICAgID5cbiAgICBkcmFmdDogYm9vbGVhblxuICAgIGxvY2FsZT86IHN0cmluZ1xuICB9LFxuICBjb250ZXh0OiB7XG4gICAgcmVxOiBQYXlsb2FkUmVxdWVzdFxuICAgIHJlczogUmVzcG9uc2VcbiAgfSxcbikgPT4gUHJvbWlzZTxHZW5lcmF0ZWRUeXBlc1snY29sbGVjdGlvbnMnXVtUU2x1Z10+XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVJlc29sdmVyPFRTbHVnIGV4dGVuZHMga2V5b2YgR2VuZXJhdGVkVHlwZXNbJ2NvbGxlY3Rpb25zJ10+KFxuICBjb2xsZWN0aW9uOiBDb2xsZWN0aW9uLFxuKTogUmVzb2x2ZXI8VFNsdWc+IHtcbiAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uIHJlc29sdmVyKF8sIGFyZ3MsIGNvbnRleHQpIHtcbiAgICBpZiAoYXJncy5sb2NhbGUpIHtcbiAgICAgIGNvbnRleHQucmVxLmxvY2FsZSA9IGFyZ3MubG9jYWxlXG4gICAgfVxuXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgIGNvbGxlY3Rpb24sXG4gICAgICBkYXRhOiBhcmdzLmRhdGEsXG4gICAgICBkZXB0aDogMCxcbiAgICAgIGRyYWZ0OiBhcmdzLmRyYWZ0LFxuICAgICAgcmVxOiBpc29sYXRlVHJhbnNhY3Rpb25JRChjb250ZXh0LnJlcSksXG4gICAgfVxuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY3JlYXRlKG9wdGlvbnMpXG5cbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVSZXNvbHZlciIsImNvbGxlY3Rpb24iLCJyZXNvbHZlciIsIl8iLCJhcmdzIiwiY29udGV4dCIsImxvY2FsZSIsInJlcSIsIm9wdGlvbnMiLCJkYXRhIiwiZGVwdGgiLCJkcmFmdCIsImlzb2xhdGVUcmFuc2FjdGlvbklEIiwicmVzdWx0IiwiY3JlYXRlIl0sIm1hcHBpbmdzIjoiQUFBQSxvQ0FBb0M7Ozs7K0JBMkJwQzs7O2VBQXdCQTs7OzZFQW5CUzsrREFDZDs7Ozs7O0FBa0JKLFNBQVNBLGVBQ3RCQyxVQUFzQjtJQUV0QixPQUFPLGVBQWVDLFNBQVNDLENBQUMsRUFBRUMsSUFBSSxFQUFFQyxPQUFPO1FBQzdDLElBQUlELEtBQUtFLE1BQU0sRUFBRTtZQUNmRCxRQUFRRSxHQUFHLENBQUNELE1BQU0sR0FBR0YsS0FBS0UsTUFBTTtRQUNsQztRQUVBLE1BQU1FLFVBQVU7WUFDZFA7WUFDQVEsTUFBTUwsS0FBS0ssSUFBSTtZQUNmQyxPQUFPO1lBQ1BDLE9BQU9QLEtBQUtPLEtBQUs7WUFDakJKLEtBQUtLLElBQUFBLDZCQUFvQixFQUFDUCxRQUFRRSxHQUFHO1FBQ3ZDO1FBRUEsTUFBTU0sU0FBUyxNQUFNQyxJQUFBQSxlQUFNLEVBQUNOO1FBRTVCLE9BQU9LO0lBQ1Q7QUFDRiJ9