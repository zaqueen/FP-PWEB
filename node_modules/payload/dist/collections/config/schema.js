"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _joi = /*#__PURE__*/ _interop_require_default(require("joi"));
const _schema = require("../../config/schema");
const _componentSchema = require("../../config/shared/componentSchema");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const strategyBaseSchema = _joi.default.object().keys({
    logout: _joi.default.boolean(),
    refresh: _joi.default.boolean()
});
const collectionSchema = _joi.default.object().keys({
    access: _joi.default.object({
        admin: _joi.default.func(),
        create: _joi.default.func(),
        delete: _joi.default.func(),
        read: _joi.default.func(),
        readVersions: _joi.default.func(),
        unlock: _joi.default.func(),
        update: _joi.default.func()
    }),
    admin: _joi.default.object({
        components: _joi.default.object({
            AfterList: _joi.default.array().items(_componentSchema.componentSchema),
            AfterListTable: _joi.default.array().items(_componentSchema.componentSchema),
            BeforeList: _joi.default.array().items(_componentSchema.componentSchema),
            BeforeListTable: _joi.default.array().items(_componentSchema.componentSchema),
            edit: _joi.default.object({
                PreviewButton: _componentSchema.componentSchema,
                PublishButton: _componentSchema.componentSchema,
                SaveButton: _componentSchema.componentSchema,
                SaveDraftButton: _componentSchema.componentSchema
            }),
            views: _joi.default.object({
                Edit: _joi.default.alternatives().try(_componentSchema.componentSchema, _joi.default.object({
                    API: _joi.default.alternatives().try(_componentSchema.componentSchema, _componentSchema.customViewSchema),
                    Default: _joi.default.alternatives().try(_componentSchema.componentSchema, _componentSchema.customViewSchema),
                    LivePreview: _joi.default.alternatives().try(_componentSchema.componentSchema, _componentSchema.customViewSchema),
                    Version: _joi.default.alternatives().try(_componentSchema.componentSchema, _componentSchema.customViewSchema),
                    Versions: _joi.default.alternatives().try(_componentSchema.componentSchema, _componentSchema.customViewSchema)
                })),
                List: _componentSchema.componentSchema
            })
        }),
        defaultColumns: _joi.default.array().items(_joi.default.string()),
        description: _joi.default.alternatives().try(_joi.default.string(), _componentSchema.componentSchema),
        disableDuplicate: _joi.default.bool(),
        enableRichTextLink: _joi.default.boolean(),
        enableRichTextRelationship: _joi.default.boolean(),
        group: _joi.default.alternatives().try(_joi.default.string(), _joi.default.object().pattern(_joi.default.string(), [
            _joi.default.string()
        ])),
        hidden: _joi.default.alternatives().try(_joi.default.boolean(), _joi.default.func()),
        hideAPIURL: _joi.default.bool(),
        hooks: _joi.default.object({
            beforeDuplicate: _joi.default.func()
        }),
        listSearchableFields: _joi.default.array().items(_joi.default.string()),
        livePreview: _joi.default.object(_componentSchema.livePreviewSchema),
        pagination: _joi.default.object({
            defaultLimit: _joi.default.number(),
            limits: _joi.default.array().items(_joi.default.number())
        }),
        preview: _joi.default.func(),
        useAsTitle: _joi.default.string()
    }),
    auth: _joi.default.alternatives().try(_joi.default.object({
        cookies: _joi.default.object().keys({
            domain: _joi.default.string(),
            sameSite: _joi.default.string(),
            secure: _joi.default.boolean()
        }),
        depth: _joi.default.number(),
        disableLocalStrategy: _joi.default.boolean().valid(true),
        forgotPassword: _joi.default.object().keys({
            generateEmailHTML: _joi.default.func(),
            generateEmailSubject: _joi.default.func()
        }),
        lockTime: _joi.default.number(),
        maxLoginAttempts: _joi.default.number(),
        removeTokenFromResponses: _joi.default.boolean().valid(true),
        strategies: _joi.default.array().items(_joi.default.alternatives().try(strategyBaseSchema.keys({
            name: _joi.default.string().required(),
            strategy: _joi.default.func().maxArity(1).required()
        }), strategyBaseSchema.keys({
            name: _joi.default.string(),
            strategy: _joi.default.object().required()
        }))),
        tokenExpiration: _joi.default.number(),
        useAPIKey: _joi.default.boolean(),
        verify: _joi.default.alternatives().try(_joi.default.boolean(), _joi.default.object().keys({
            generateEmailHTML: _joi.default.func(),
            generateEmailSubject: _joi.default.func()
        }))
    }), _joi.default.boolean()),
    custom: _joi.default.object().pattern(_joi.default.string(), _joi.default.any()),
    defaultSort: _joi.default.string(),
    endpoints: _schema.endpointsSchema,
    fields: _joi.default.array(),
    graphQL: _joi.default.alternatives().try(_joi.default.object().keys({
        pluralName: _joi.default.string(),
        singularName: _joi.default.string()
    }), _joi.default.boolean()),
    hooks: _joi.default.object({
        afterChange: _joi.default.array().items(_joi.default.func()),
        afterDelete: _joi.default.array().items(_joi.default.func()),
        afterForgotPassword: _joi.default.array().items(_joi.default.func()),
        afterLogin: _joi.default.array().items(_joi.default.func()),
        afterLogout: _joi.default.array().items(_joi.default.func()),
        afterMe: _joi.default.array().items(_joi.default.func()),
        afterOperation: _joi.default.array().items(_joi.default.func()),
        afterRead: _joi.default.array().items(_joi.default.func()),
        afterRefresh: _joi.default.array().items(_joi.default.func()),
        beforeChange: _joi.default.array().items(_joi.default.func()),
        beforeDelete: _joi.default.array().items(_joi.default.func()),
        beforeLogin: _joi.default.array().items(_joi.default.func()),
        beforeOperation: _joi.default.array().items(_joi.default.func()),
        beforeRead: _joi.default.array().items(_joi.default.func()),
        beforeValidate: _joi.default.array().items(_joi.default.func())
    }),
    indexes: _joi.default.array().items(_joi.default.object().keys({
        fields: _joi.default.object().required(),
        options: _joi.default.object()
    })),
    labels: _joi.default.object({
        plural: _joi.default.alternatives().try(_joi.default.string(), _joi.default.object().pattern(_joi.default.string(), [
            _joi.default.string()
        ])),
        singular: _joi.default.alternatives().try(_joi.default.string(), _joi.default.object().pattern(_joi.default.string(), [
            _joi.default.string()
        ]))
    }),
    slug: _joi.default.string().required(),
    timestamps: _joi.default.boolean(),
    typescript: _joi.default.object().keys({
        interface: _joi.default.string()
    }),
    upload: _joi.default.alternatives().try(_joi.default.object({
        adminThumbnail: _joi.default.alternatives().try(_joi.default.string(), _joi.default.func()),
        crop: _joi.default.bool(),
        disableLocalStorage: _joi.default.bool(),
        filesRequiredOnCreate: _joi.default.bool(),
        focalPoint: _joi.default.bool(),
        formatOptions: _joi.default.object().keys({
            format: _joi.default.string(),
            options: _joi.default.object()
        }),
        handlers: _joi.default.array().items(_joi.default.func()),
        imageSizes: _joi.default.array().items(_joi.default.object().keys({
            name: _joi.default.string(),
            crop: _joi.default.string(),
            height: _joi.default.number().integer().allow(null),
            width: _joi.default.number().integer().allow(null)
        }).unknown()),
        mimeTypes: _joi.default.array().items(_joi.default.string()),
        resizeOptions: _joi.default.object().keys({
            background: _joi.default.string(),
            fastShrinkOnLoad: _joi.default.bool(),
            fit: _joi.default.string(),
            height: _joi.default.number().allow(null),
            kernel: _joi.default.string(),
            position: _joi.default.alternatives().try(_joi.default.string(), _joi.default.number()),
            width: _joi.default.number().allow(null),
            withoutEnlargement: _joi.default.bool()
        }).allow(null),
        staticDir: _joi.default.string(),
        staticOptions: _joi.default.object(),
        staticURL: _joi.default.string(),
        tempFileDir: _joi.default.string(),
        trimOptions: _joi.default.alternatives().try(_joi.default.object().keys({
            format: _joi.default.string(),
            options: _joi.default.object()
        }), _joi.default.string(), _joi.default.number()),
        useTempFiles: _joi.default.bool()
    }), _joi.default.boolean()),
    versions: _joi.default.alternatives().try(_joi.default.object({
        drafts: _joi.default.alternatives().try(_joi.default.object({
            autosave: _joi.default.alternatives().try(_joi.default.boolean(), _joi.default.object({
                interval: _joi.default.number()
            }))
        }), _joi.default.boolean()),
        maxPerDoc: _joi.default.number()
    }), _joi.default.boolean())
});
const _default = collectionSchema;

//# sourceMappingURL=data:application/json;base64,