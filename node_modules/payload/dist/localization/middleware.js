"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, /**
 * sets request locale
 *
 * @param localization
 * @returns {Function}
 */ "default", {
    enumerable: true,
    get: function() {
        return localizationMiddleware;
    }
});
function localizationMiddleware(localization) {
    const middleware = (req, res, next)=>{
        if (localization) {
            const validLocales = [
                ...localization.localeCodes,
                'all'
            ];
            const validFallbackLocales = [
                ...localization.localeCodes,
                'null'
            ];
            let requestedLocale = req.query.locale || localization.defaultLocale;
            let requestedFallbackLocale = req.query['fallback-locale'] || localization.defaultLocale;
            if (req.body) {
                if (req.body.locale) requestedLocale = req.body.locale;
                if (req.body['fallback-locale']) {
                    requestedFallbackLocale = req.body['fallback-locale'];
                }
            }
            if (requestedFallbackLocale === 'none') requestedFallbackLocale = 'null';
            if (requestedLocale === '*' || requestedLocale === 'all') {
                requestedLocale = 'all';
            }
            if (validLocales.find((locale)=>locale === requestedLocale)) {
                req.locale = requestedLocale;
            }
            if (validFallbackLocales.find((locale)=>locale === requestedFallbackLocale)) {
                req.fallbackLocale = requestedFallbackLocale;
            }
        }
        return next();
    };
    return middleware;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sb2NhbGl6YXRpb24vbWlkZGxld2FyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFNhbml0aXplZExvY2FsaXphdGlvbkNvbmZpZyB9IGZyb20gJy4uL2NvbmZpZy90eXBlcydcblxuLyoqXG4gKiBzZXRzIHJlcXVlc3QgbG9jYWxlXG4gKlxuICogQHBhcmFtIGxvY2FsaXphdGlvblxuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsb2NhbGl6YXRpb25NaWRkbGV3YXJlKGxvY2FsaXphdGlvbjogU2FuaXRpemVkTG9jYWxpemF0aW9uQ29uZmlnIHwgZmFsc2UpIHtcbiAgY29uc3QgbWlkZGxld2FyZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIGlmIChsb2NhbGl6YXRpb24pIHtcbiAgICAgIGNvbnN0IHZhbGlkTG9jYWxlcyA9IFsuLi5sb2NhbGl6YXRpb24ubG9jYWxlQ29kZXMsICdhbGwnXVxuICAgICAgY29uc3QgdmFsaWRGYWxsYmFja0xvY2FsZXMgPSBbLi4ubG9jYWxpemF0aW9uLmxvY2FsZUNvZGVzLCAnbnVsbCddXG5cbiAgICAgIGxldCByZXF1ZXN0ZWRMb2NhbGUgPSByZXEucXVlcnkubG9jYWxlIHx8IGxvY2FsaXphdGlvbi5kZWZhdWx0TG9jYWxlXG4gICAgICBsZXQgcmVxdWVzdGVkRmFsbGJhY2tMb2NhbGUgPSByZXEucXVlcnlbJ2ZhbGxiYWNrLWxvY2FsZSddIHx8IGxvY2FsaXphdGlvbi5kZWZhdWx0TG9jYWxlXG5cbiAgICAgIGlmIChyZXEuYm9keSkge1xuICAgICAgICBpZiAocmVxLmJvZHkubG9jYWxlKSByZXF1ZXN0ZWRMb2NhbGUgPSByZXEuYm9keS5sb2NhbGVcbiAgICAgICAgaWYgKHJlcS5ib2R5WydmYWxsYmFjay1sb2NhbGUnXSkge1xuICAgICAgICAgIHJlcXVlc3RlZEZhbGxiYWNrTG9jYWxlID0gcmVxLmJvZHlbJ2ZhbGxiYWNrLWxvY2FsZSddXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHJlcXVlc3RlZEZhbGxiYWNrTG9jYWxlID09PSAnbm9uZScpIHJlcXVlc3RlZEZhbGxiYWNrTG9jYWxlID0gJ251bGwnXG4gICAgICBpZiAocmVxdWVzdGVkTG9jYWxlID09PSAnKicgfHwgcmVxdWVzdGVkTG9jYWxlID09PSAnYWxsJykge1xuICAgICAgICByZXF1ZXN0ZWRMb2NhbGUgPSAnYWxsJ1xuICAgICAgfVxuXG4gICAgICBpZiAodmFsaWRMb2NhbGVzLmZpbmQoKGxvY2FsZSkgPT4gbG9jYWxlID09PSByZXF1ZXN0ZWRMb2NhbGUpKSB7XG4gICAgICAgIHJlcS5sb2NhbGUgPSByZXF1ZXN0ZWRMb2NhbGVcbiAgICAgIH1cblxuICAgICAgaWYgKHZhbGlkRmFsbGJhY2tMb2NhbGVzLmZpbmQoKGxvY2FsZSkgPT4gbG9jYWxlID09PSByZXF1ZXN0ZWRGYWxsYmFja0xvY2FsZSkpIHtcbiAgICAgICAgcmVxLmZhbGxiYWNrTG9jYWxlID0gcmVxdWVzdGVkRmFsbGJhY2tMb2NhbGVcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV4dCgpXG4gIH1cblxuICByZXR1cm4gbWlkZGxld2FyZVxufVxuIl0sIm5hbWVzIjpbImxvY2FsaXphdGlvbk1pZGRsZXdhcmUiLCJsb2NhbGl6YXRpb24iLCJtaWRkbGV3YXJlIiwicmVxIiwicmVzIiwibmV4dCIsInZhbGlkTG9jYWxlcyIsImxvY2FsZUNvZGVzIiwidmFsaWRGYWxsYmFja0xvY2FsZXMiLCJyZXF1ZXN0ZWRMb2NhbGUiLCJxdWVyeSIsImxvY2FsZSIsImRlZmF1bHRMb2NhbGUiLCJyZXF1ZXN0ZWRGYWxsYmFja0xvY2FsZSIsImJvZHkiLCJmaW5kIiwiZmFsbGJhY2tMb2NhbGUiXSwibWFwcGluZ3MiOiI7Ozs7K0JBRUE7Ozs7O0NBS0MsR0FDRDs7O2VBQXdCQTs7O0FBQVQsU0FBU0EsdUJBQXVCQyxZQUFpRDtJQUM5RixNQUFNQyxhQUFhLENBQUNDLEtBQUtDLEtBQUtDO1FBQzVCLElBQUlKLGNBQWM7WUFDaEIsTUFBTUssZUFBZTttQkFBSUwsYUFBYU0sV0FBVztnQkFBRTthQUFNO1lBQ3pELE1BQU1DLHVCQUF1QjttQkFBSVAsYUFBYU0sV0FBVztnQkFBRTthQUFPO1lBRWxFLElBQUlFLGtCQUFrQk4sSUFBSU8sS0FBSyxDQUFDQyxNQUFNLElBQUlWLGFBQWFXLGFBQWE7WUFDcEUsSUFBSUMsMEJBQTBCVixJQUFJTyxLQUFLLENBQUMsa0JBQWtCLElBQUlULGFBQWFXLGFBQWE7WUFFeEYsSUFBSVQsSUFBSVcsSUFBSSxFQUFFO2dCQUNaLElBQUlYLElBQUlXLElBQUksQ0FBQ0gsTUFBTSxFQUFFRixrQkFBa0JOLElBQUlXLElBQUksQ0FBQ0gsTUFBTTtnQkFDdEQsSUFBSVIsSUFBSVcsSUFBSSxDQUFDLGtCQUFrQixFQUFFO29CQUMvQkQsMEJBQTBCVixJQUFJVyxJQUFJLENBQUMsa0JBQWtCO2dCQUN2RDtZQUNGO1lBRUEsSUFBSUQsNEJBQTRCLFFBQVFBLDBCQUEwQjtZQUNsRSxJQUFJSixvQkFBb0IsT0FBT0Esb0JBQW9CLE9BQU87Z0JBQ3hEQSxrQkFBa0I7WUFDcEI7WUFFQSxJQUFJSCxhQUFhUyxJQUFJLENBQUMsQ0FBQ0osU0FBV0EsV0FBV0Ysa0JBQWtCO2dCQUM3RE4sSUFBSVEsTUFBTSxHQUFHRjtZQUNmO1lBRUEsSUFBSUQscUJBQXFCTyxJQUFJLENBQUMsQ0FBQ0osU0FBV0EsV0FBV0UsMEJBQTBCO2dCQUM3RVYsSUFBSWEsY0FBYyxHQUFHSDtZQUN2QjtRQUNGO1FBRUEsT0FBT1I7SUFDVDtJQUVBLE9BQU9IO0FBQ1QifQ==