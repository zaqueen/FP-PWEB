"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "LeaveWithoutSaving", {
    enumerable: true,
    get: function() {
        return LeaveWithoutSaving;
    }
});
const _modal = require("@faceless-ui/modal");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _reactrouternavigationprompt = /*#__PURE__*/ _interop_require_default(require("react-router-navigation-prompt"));
const _Button = /*#__PURE__*/ _interop_require_default(require("../../elements/Button"));
const _context = require("../../forms/Form/context");
const _Auth = require("../../utilities/Auth");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const modalSlug = 'leave-without-saving';
const baseClass = 'leave-without-saving';
const Component = ({ isActive, onCancel, onConfirm })=>{
    const { closeModal, openModal } = (0, _modal.useModal)();
    const { t } = (0, _reacti18next.useTranslation)('general');
    (0, _react.useEffect)(()=>{
        if (isActive) openModal(modalSlug);
        else closeModal(modalSlug);
    }, [
        isActive,
        openModal,
        closeModal
    ]);
    return /*#__PURE__*/ _react.default.createElement(_modal.Modal, {
        className: baseClass,
        onClose: onCancel,
        slug: modalSlug
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__wrapper`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__content`
    }, /*#__PURE__*/ _react.default.createElement("h1", null, t('leaveWithoutSaving')), /*#__PURE__*/ _react.default.createElement("p", null, t('changesNotSaved'))), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__controls`
    }, /*#__PURE__*/ _react.default.createElement(_Button.default, {
        buttonStyle: "secondary",
        onClick: onCancel
    }, t('stayOnThisPage')), /*#__PURE__*/ _react.default.createElement(_Button.default, {
        onClick: onConfirm
    }, t('leaveAnyway')))));
};
const LeaveWithoutSaving = ()=>{
    const modified = (0, _context.useFormModified)();
    const { user } = (0, _Auth.useAuth)();
    return /*#__PURE__*/ _react.default.createElement(_reactrouternavigationprompt.default, {
        renderIfNotActive: true,
        when: Boolean(modified && user)
    }, ({ isActive, onCancel, onConfirm })=>/*#__PURE__*/ _react.default.createElement(Component, {
            isActive: isActive,
            onCancel: onCancel,
            onConfirm: onConfirm
        }));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL21vZGFscy9MZWF2ZVdpdGhvdXRTYXZpbmcvaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZGFsLCB1c2VNb2RhbCB9IGZyb20gJ0BmYWNlbGVzcy11aS9tb2RhbCdcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcbmltcG9ydCBOYXZpZ2F0aW9uUHJvbXB0IGZyb20gJ3JlYWN0LXJvdXRlci1uYXZpZ2F0aW9uLXByb21wdCdcblxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi8uLi9lbGVtZW50cy9CdXR0b24nXG5pbXBvcnQgeyB1c2VGb3JtTW9kaWZpZWQgfSBmcm9tICcuLi8uLi9mb3Jtcy9Gb3JtL2NvbnRleHQnXG5pbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL0F1dGgnXG5pbXBvcnQgJy4vaW5kZXguc2NzcydcblxuY29uc3QgbW9kYWxTbHVnID0gJ2xlYXZlLXdpdGhvdXQtc2F2aW5nJ1xuXG5jb25zdCBiYXNlQ2xhc3MgPSAnbGVhdmUtd2l0aG91dC1zYXZpbmcnXG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8e1xuICBpc0FjdGl2ZTogYm9vbGVhblxuICBvbkNhbmNlbDogKCkgPT4gdm9pZFxuICBvbkNvbmZpcm06ICgpID0+IHZvaWRcbn0+ID0gKHsgaXNBY3RpdmUsIG9uQ2FuY2VsLCBvbkNvbmZpcm0gfSkgPT4ge1xuICBjb25zdCB7IGNsb3NlTW9kYWwsIG9wZW5Nb2RhbCB9ID0gdXNlTW9kYWwoKVxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCdnZW5lcmFsJylcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0FjdGl2ZSkgb3Blbk1vZGFsKG1vZGFsU2x1ZylcbiAgICBlbHNlIGNsb3NlTW9kYWwobW9kYWxTbHVnKVxuICB9LCBbaXNBY3RpdmUsIG9wZW5Nb2RhbCwgY2xvc2VNb2RhbF0pXG5cbiAgcmV0dXJuIChcbiAgICA8TW9kYWwgY2xhc3NOYW1lPXtiYXNlQ2xhc3N9IG9uQ2xvc2U9e29uQ2FuY2VsfSBzbHVnPXttb2RhbFNsdWd9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX3dyYXBwZXJgfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX2NvbnRlbnRgfT5cbiAgICAgICAgICA8aDE+e3QoJ2xlYXZlV2l0aG91dFNhdmluZycpfTwvaDE+XG4gICAgICAgICAgPHA+e3QoJ2NoYW5nZXNOb3RTYXZlZCcpfTwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3N9X19jb250cm9sc2B9PlxuICAgICAgICAgIDxCdXR0b24gYnV0dG9uU3R5bGU9XCJzZWNvbmRhcnlcIiBvbkNsaWNrPXtvbkNhbmNlbH0+XG4gICAgICAgICAgICB7dCgnc3RheU9uVGhpc1BhZ2UnKX1cbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9e29uQ29uZmlybX0+e3QoJ2xlYXZlQW55d2F5Jyl9PC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9Nb2RhbD5cbiAgKVxufVxuXG5leHBvcnQgY29uc3QgTGVhdmVXaXRob3V0U2F2aW5nOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgbW9kaWZpZWQgPSB1c2VGb3JtTW9kaWZpZWQoKVxuICBjb25zdCB7IHVzZXIgfSA9IHVzZUF1dGgoKVxuXG4gIHJldHVybiAoXG4gICAgPE5hdmlnYXRpb25Qcm9tcHQgcmVuZGVySWZOb3RBY3RpdmUgd2hlbj17Qm9vbGVhbihtb2RpZmllZCAmJiB1c2VyKX0+XG4gICAgICB7KHsgaXNBY3RpdmUsIG9uQ2FuY2VsLCBvbkNvbmZpcm0gfSkgPT4gKFxuICAgICAgICA8Q29tcG9uZW50IGlzQWN0aXZlPXtpc0FjdGl2ZX0gb25DYW5jZWw9e29uQ2FuY2VsfSBvbkNvbmZpcm09e29uQ29uZmlybX0gLz5cbiAgICAgICl9XG4gICAgPC9OYXZpZ2F0aW9uUHJvbXB0PlxuICApXG59XG4iXSwibmFtZXMiOlsiTGVhdmVXaXRob3V0U2F2aW5nIiwibW9kYWxTbHVnIiwiYmFzZUNsYXNzIiwiQ29tcG9uZW50IiwiaXNBY3RpdmUiLCJvbkNhbmNlbCIsIm9uQ29uZmlybSIsImNsb3NlTW9kYWwiLCJvcGVuTW9kYWwiLCJ1c2VNb2RhbCIsInQiLCJ1c2VUcmFuc2xhdGlvbiIsInVzZUVmZmVjdCIsIk1vZGFsIiwiY2xhc3NOYW1lIiwib25DbG9zZSIsInNsdWciLCJkaXYiLCJoMSIsInAiLCJCdXR0b24iLCJidXR0b25TdHlsZSIsIm9uQ2xpY2siLCJtb2RpZmllZCIsInVzZUZvcm1Nb2RpZmllZCIsInVzZXIiLCJ1c2VBdXRoIiwiTmF2aWdhdGlvblByb21wdCIsInJlbmRlcklmTm90QWN0aXZlIiwid2hlbiIsIkJvb2xlYW4iXSwibWFwcGluZ3MiOiI7Ozs7K0JBNkNhQTs7O2VBQUFBOzs7dUJBN0NtQjsrREFDQzs4QkFDRjtvRkFDRjsrREFFVjt5QkFDYTtzQkFDUjtRQUNqQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRVAsTUFBTUMsWUFBWTtBQUVsQixNQUFNQyxZQUFZO0FBRWxCLE1BQU1DLFlBSUQsQ0FBQyxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFO0lBQ3JDLE1BQU0sRUFBRUMsVUFBVSxFQUFFQyxTQUFTLEVBQUUsR0FBR0MsSUFBQUEsZUFBUTtJQUMxQyxNQUFNLEVBQUVDLENBQUMsRUFBRSxHQUFHQyxJQUFBQSw0QkFBYyxFQUFDO0lBRTdCQyxJQUFBQSxnQkFBUyxFQUFDO1FBQ1IsSUFBSVIsVUFBVUksVUFBVVA7YUFDbkJNLFdBQVdOO0lBQ2xCLEdBQUc7UUFBQ0c7UUFBVUk7UUFBV0Q7S0FBVztJQUVwQyxxQkFDRSw2QkFBQ00sWUFBSztRQUFDQyxXQUFXWjtRQUFXYSxTQUFTVjtRQUFVVyxNQUFNZjtxQkFDcEQsNkJBQUNnQjtRQUFJSCxXQUFXLENBQUMsRUFBRVosVUFBVSxTQUFTLENBQUM7cUJBQ3JDLDZCQUFDZTtRQUFJSCxXQUFXLENBQUMsRUFBRVosVUFBVSxTQUFTLENBQUM7cUJBQ3JDLDZCQUFDZ0IsWUFBSVIsRUFBRSxzQ0FDUCw2QkFBQ1MsV0FBR1QsRUFBRSxvQ0FFUiw2QkFBQ087UUFBSUgsV0FBVyxDQUFDLEVBQUVaLFVBQVUsVUFBVSxDQUFDO3FCQUN0Qyw2QkFBQ2tCLGVBQU07UUFBQ0MsYUFBWTtRQUFZQyxTQUFTakI7T0FDdENLLEVBQUUsa0NBRUwsNkJBQUNVLGVBQU07UUFBQ0UsU0FBU2hCO09BQVlJLEVBQUU7QUFLekM7QUFFTyxNQUFNVixxQkFBK0I7SUFDMUMsTUFBTXVCLFdBQVdDLElBQUFBLHdCQUFlO0lBQ2hDLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEdBQUdDLElBQUFBLGFBQU87SUFFeEIscUJBQ0UsNkJBQUNDLG9DQUFnQjtRQUFDQyxtQkFBQUE7UUFBa0JDLE1BQU1DLFFBQVFQLFlBQVlFO09BQzNELENBQUMsRUFBRXJCLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUUsaUJBQ2pDLDZCQUFDSDtZQUFVQyxVQUFVQTtZQUFVQyxVQUFVQTtZQUFVQyxXQUFXQTs7QUFJdEUifQ==