"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Save", {
    enumerable: true,
    get: function() {
        return Save;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _useHotkey = /*#__PURE__*/ _interop_require_default(require("../../../hooks/useHotkey"));
const _context = require("../../forms/Form/context");
const _Submit = /*#__PURE__*/ _interop_require_default(require("../../forms/Submit"));
const _EditDepth = require("../../utilities/EditDepth");
const _RenderCustomComponent = /*#__PURE__*/ _interop_require_default(require("../../utilities/RenderCustomComponent"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const DefaultSaveButton = ({ label, save })=>{
    const ref = (0, _react.useRef)(null);
    const editDepth = (0, _EditDepth.useEditDepth)();
    (0, _useHotkey.default)({
        cmdCtrlKey: true,
        editDepth,
        keyCodes: [
            's'
        ]
    }, (e)=>{
        e.preventDefault();
        e.stopPropagation();
        if (ref?.current) {
            ref.current.click();
        }
    });
    return /*#__PURE__*/ _react.default.createElement(_Submit.default, {
        buttonId: "action-save",
        onClick: save,
        ref: ref,
        type: "button",
        size: "small"
    }, label);
};
const Save = ({ CustomComponent })=>{
    const { t } = (0, _reacti18next.useTranslation)('general');
    const { submit } = (0, _context.useForm)();
    return /*#__PURE__*/ _react.default.createElement(_RenderCustomComponent.default, {
        CustomComponent: CustomComponent,
        DefaultComponent: DefaultSaveButton,
        componentProps: {
            DefaultButton: DefaultSaveButton,
            label: t('save'),
            save: submit
        }
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2VsZW1lbnRzL1NhdmUvaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcblxuaW1wb3J0IHVzZUhvdGtleSBmcm9tICcuLi8uLi8uLi9ob29rcy91c2VIb3RrZXknXG5pbXBvcnQgeyB1c2VGb3JtIH0gZnJvbSAnLi4vLi4vZm9ybXMvRm9ybS9jb250ZXh0J1xuaW1wb3J0IEZvcm1TdWJtaXQgZnJvbSAnLi4vLi4vZm9ybXMvU3VibWl0J1xuaW1wb3J0IHsgdXNlRWRpdERlcHRoIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL0VkaXREZXB0aCdcbmltcG9ydCBSZW5kZXJDdXN0b21Db21wb25lbnQgZnJvbSAnLi4vLi4vdXRpbGl0aWVzL1JlbmRlckN1c3RvbUNvbXBvbmVudCdcblxuZXhwb3J0IHR5cGUgQ3VzdG9tU2F2ZUJ1dHRvblByb3BzID0gUmVhY3QuQ29tcG9uZW50VHlwZTxcbiAgRGVmYXVsdFNhdmVCdXR0b25Qcm9wcyAmIHtcbiAgICBEZWZhdWx0QnV0dG9uOiBSZWFjdC5Db21wb25lbnRUeXBlPERlZmF1bHRTYXZlQnV0dG9uUHJvcHM+XG4gIH1cbj5cbnR5cGUgRGVmYXVsdFNhdmVCdXR0b25Qcm9wcyA9IHtcbiAgbGFiZWw6IHN0cmluZ1xuICBzYXZlOiAoKSA9PiB2b2lkXG59XG5cbmNvbnN0IERlZmF1bHRTYXZlQnV0dG9uOiBSZWFjdC5GQzxEZWZhdWx0U2F2ZUJ1dHRvblByb3BzPiA9ICh7IGxhYmVsLCBzYXZlIH0pID0+IHtcbiAgY29uc3QgcmVmID0gdXNlUmVmPEhUTUxCdXR0b25FbGVtZW50PihudWxsKVxuICBjb25zdCBlZGl0RGVwdGggPSB1c2VFZGl0RGVwdGgoKVxuXG4gIHVzZUhvdGtleSh7IGNtZEN0cmxLZXk6IHRydWUsIGVkaXREZXB0aCwga2V5Q29kZXM6IFsncyddIH0sIChlKSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgIGlmIChyZWY/LmN1cnJlbnQpIHtcbiAgICAgIHJlZi5jdXJyZW50LmNsaWNrKClcbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8Rm9ybVN1Ym1pdCBidXR0b25JZD1cImFjdGlvbi1zYXZlXCIgb25DbGljaz17c2F2ZX0gcmVmPXtyZWZ9IHR5cGU9XCJidXR0b25cIiBzaXplPVwic21hbGxcIj5cbiAgICAgIHtsYWJlbH1cbiAgICA8L0Zvcm1TdWJtaXQ+XG4gIClcbn1cblxudHlwZSBQcm9wcyA9IHtcbiAgQ3VzdG9tQ29tcG9uZW50PzogQ3VzdG9tU2F2ZUJ1dHRvblByb3BzXG59XG5leHBvcnQgY29uc3QgU2F2ZTogUmVhY3QuRkM8UHJvcHM+ID0gKHsgQ3VzdG9tQ29tcG9uZW50IH0pID0+IHtcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbignZ2VuZXJhbCcpXG4gIGNvbnN0IHsgc3VibWl0IH0gPSB1c2VGb3JtKClcblxuICByZXR1cm4gKFxuICAgIDxSZW5kZXJDdXN0b21Db21wb25lbnRcbiAgICAgIEN1c3RvbUNvbXBvbmVudD17Q3VzdG9tQ29tcG9uZW50fVxuICAgICAgRGVmYXVsdENvbXBvbmVudD17RGVmYXVsdFNhdmVCdXR0b259XG4gICAgICBjb21wb25lbnRQcm9wcz17e1xuICAgICAgICBEZWZhdWx0QnV0dG9uOiBEZWZhdWx0U2F2ZUJ1dHRvbixcbiAgICAgICAgbGFiZWw6IHQoJ3NhdmUnKSxcbiAgICAgICAgc2F2ZTogc3VibWl0LFxuICAgICAgfX1cbiAgICAvPlxuICApXG59XG4iXSwibmFtZXMiOlsiU2F2ZSIsIkRlZmF1bHRTYXZlQnV0dG9uIiwibGFiZWwiLCJzYXZlIiwicmVmIiwidXNlUmVmIiwiZWRpdERlcHRoIiwidXNlRWRpdERlcHRoIiwidXNlSG90a2V5IiwiY21kQ3RybEtleSIsImtleUNvZGVzIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY3VycmVudCIsImNsaWNrIiwiRm9ybVN1Ym1pdCIsImJ1dHRvbklkIiwib25DbGljayIsInR5cGUiLCJzaXplIiwiQ3VzdG9tQ29tcG9uZW50IiwidCIsInVzZVRyYW5zbGF0aW9uIiwic3VibWl0IiwidXNlRm9ybSIsIlJlbmRlckN1c3RvbUNvbXBvbmVudCIsIkRlZmF1bHRDb21wb25lbnQiLCJjb21wb25lbnRQcm9wcyIsIkRlZmF1bHRCdXR0b24iXSwibWFwcGluZ3MiOiI7Ozs7K0JBeUNhQTs7O2VBQUFBOzs7K0RBekNpQjs4QkFDQztrRUFFVDt5QkFDRTsrREFDRDsyQkFDTTs4RUFDSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBWWxDLE1BQU1DLG9CQUFzRCxDQUFDLEVBQUVDLEtBQUssRUFBRUMsSUFBSSxFQUFFO0lBQzFFLE1BQU1DLE1BQU1DLElBQUFBLGFBQU0sRUFBb0I7SUFDdEMsTUFBTUMsWUFBWUMsSUFBQUEsdUJBQVk7SUFFOUJDLElBQUFBLGtCQUFTLEVBQUM7UUFBRUMsWUFBWTtRQUFNSDtRQUFXSSxVQUFVO1lBQUM7U0FBSTtJQUFDLEdBQUcsQ0FBQ0M7UUFDM0RBLEVBQUVDLGNBQWM7UUFDaEJELEVBQUVFLGVBQWU7UUFDakIsSUFBSVQsS0FBS1UsU0FBUztZQUNoQlYsSUFBSVUsT0FBTyxDQUFDQyxLQUFLO1FBQ25CO0lBQ0Y7SUFFQSxxQkFDRSw2QkFBQ0MsZUFBVTtRQUFDQyxVQUFTO1FBQWNDLFNBQVNmO1FBQU1DLEtBQUtBO1FBQUtlLE1BQUs7UUFBU0MsTUFBSztPQUM1RWxCO0FBR1A7QUFLTyxNQUFNRixPQUF3QixDQUFDLEVBQUVxQixlQUFlLEVBQUU7SUFDdkQsTUFBTSxFQUFFQyxDQUFDLEVBQUUsR0FBR0MsSUFBQUEsNEJBQWMsRUFBQztJQUM3QixNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHQyxJQUFBQSxnQkFBTztJQUUxQixxQkFDRSw2QkFBQ0MsOEJBQXFCO1FBQ3BCTCxpQkFBaUJBO1FBQ2pCTSxrQkFBa0IxQjtRQUNsQjJCLGdCQUFnQjtZQUNkQyxlQUFlNUI7WUFDZkMsT0FBT29CLEVBQUU7WUFDVG5CLE1BQU1xQjtRQUNSOztBQUdOIn0=