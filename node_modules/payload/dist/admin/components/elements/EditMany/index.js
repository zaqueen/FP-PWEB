"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _modal = require("@faceless-ui/modal");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _getTranslation = require("../../../../utilities/getTranslation");
const _Form = /*#__PURE__*/ _interop_require_default(require("../../forms/Form"));
const _context = require("../../forms/Form/context");
const _RenderFields = /*#__PURE__*/ _interop_require_default(require("../../forms/RenderFields"));
const _Submit = /*#__PURE__*/ _interop_require_default(require("../../forms/Submit"));
const _fieldtypes = require("../../forms/field-types");
const _X = /*#__PURE__*/ _interop_require_default(require("../../icons/X"));
const _Auth = require("../../utilities/Auth");
const _Config = require("../../utilities/Config");
const _OperationProvider = require("../../utilities/OperationProvider");
const _SelectionProvider = require("../../views/collections/List/SelectionProvider");
const _Drawer = require("../Drawer");
const _FieldSelect = require("../FieldSelect");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'edit-many';
const Submit = ({ action, disabled })=>{
    const { submit } = (0, _context.useForm)();
    const { t } = (0, _reacti18next.useTranslation)('general');
    const save = (0, _react.useCallback)(()=>{
        submit({
            action,
            method: 'PATCH',
            skipValidation: true
        });
    }, [
        action,
        submit
    ]);
    return /*#__PURE__*/ _react.default.createElement(_Submit.default, {
        className: `${baseClass}__save`,
        disabled: disabled,
        onClick: save
    }, t('save'));
};
const Publish = ({ action, disabled })=>{
    const { submit } = (0, _context.useForm)();
    const { t } = (0, _reacti18next.useTranslation)('version');
    const save = (0, _react.useCallback)(()=>{
        submit({
            action,
            method: 'PATCH',
            overrides: {
                _status: 'published'
            },
            skipValidation: true
        });
    }, [
        action,
        submit
    ]);
    return /*#__PURE__*/ _react.default.createElement(_Submit.default, {
        className: `${baseClass}__publish`,
        disabled: disabled,
        onClick: save
    }, t('publishChanges'));
};
const SaveDraft = ({ action, disabled })=>{
    const { submit } = (0, _context.useForm)();
    const { t } = (0, _reacti18next.useTranslation)('version');
    const save = (0, _react.useCallback)(()=>{
        submit({
            action,
            method: 'PATCH',
            overrides: {
                _status: 'draft'
            },
            skipValidation: true
        });
    }, [
        action,
        submit
    ]);
    return /*#__PURE__*/ _react.default.createElement(_Submit.default, {
        className: `${baseClass}__draft`,
        disabled: disabled,
        onClick: save
    }, t('saveDraft'));
};
const EditMany = (props)=>{
    const { collection: { fields, labels: { plural }, slug } = {}, collection, resetParams } = props;
    const { permissions } = (0, _Auth.useAuth)();
    const { closeModal } = (0, _modal.useModal)();
    const { routes: { api }, serverURL } = (0, _Config.useConfig)();
    const { count, getQueryParams, selectAll } = (0, _SelectionProvider.useSelection)();
    const { i18n, t } = (0, _reacti18next.useTranslation)('general');
    const [selected, setSelected] = (0, _react.useState)([]);
    const collectionPermissions = permissions?.collections?.[slug];
    const hasUpdatePermission = collectionPermissions?.update?.permission;
    const drawerSlug = `edit-${slug}`;
    if (selectAll === _SelectionProvider.SelectAllStatus.None || !hasUpdatePermission) {
        return null;
    }
    const onSuccess = ()=>{
        resetParams({
            page: selectAll === _SelectionProvider.SelectAllStatus.AllAvailable ? 1 : undefined
        });
    };
    return /*#__PURE__*/ _react.default.createElement("div", {
        className: baseClass
    }, /*#__PURE__*/ _react.default.createElement(_Drawer.DrawerToggler, {
        "aria-label": t('edit'),
        className: `${baseClass}__toggle`,
        onClick: ()=>{
            setSelected([]);
        },
        slug: drawerSlug
    }, t('edit')), /*#__PURE__*/ _react.default.createElement(_Drawer.Drawer, {
        header: null,
        slug: drawerSlug
    }, /*#__PURE__*/ _react.default.createElement(_OperationProvider.OperationContext.Provider, {
        value: "update"
    }, /*#__PURE__*/ _react.default.createElement(_Form.default, {
        className: `${baseClass}__form`,
        onSuccess: onSuccess
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__main`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__header`
    }, /*#__PURE__*/ _react.default.createElement("h2", {
        className: `${baseClass}__header__title`
    }, t('editingLabel', {
        count,
        label: (0, _getTranslation.getTranslation)(plural, i18n)
    })), /*#__PURE__*/ _react.default.createElement("button", {
        "aria-label": t('close'),
        className: `${baseClass}__header__close`,
        id: `close-drawer__${drawerSlug}`,
        onClick: ()=>closeModal(drawerSlug),
        type: "button"
    }, /*#__PURE__*/ _react.default.createElement(_X.default, null))), /*#__PURE__*/ _react.default.createElement(_FieldSelect.FieldSelect, {
        fields: fields,
        setSelected: setSelected
    }), /*#__PURE__*/ _react.default.createElement(_RenderFields.default, {
        fieldSchema: selected,
        fieldTypes: _fieldtypes.fieldTypes
    }), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__sidebar-wrap`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__sidebar`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__sidebar-sticky-wrap`
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__document-actions`
    }, collection.versions ? /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(Publish, {
        action: `${serverURL}${api}/${slug}${getQueryParams()}`,
        disabled: selected.length === 0
    }), /*#__PURE__*/ _react.default.createElement(SaveDraft, {
        action: `${serverURL}${api}/${slug}${getQueryParams()}`,
        disabled: selected.length === 0
    })) : /*#__PURE__*/ _react.default.createElement(Submit, {
        action: `${serverURL}${api}/${slug}${getQueryParams()}`,
        disabled: selected.length === 0
    }))))))))));
};
const _default = EditMany;

//# sourceMappingURL=data:application/json;base64,