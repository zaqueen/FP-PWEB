"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _Hamburger = require("../../elements/Hamburger");
const _Header = require("../../elements/Header");
const _Nav = require("../../elements/Nav");
const _NavToggler = require("../../elements/Nav/NavToggler");
const _context = require("../../elements/Nav/context");
const _Config = require("../../utilities/Config");
const _Meta = /*#__PURE__*/ _interop_require_default(require("../../utilities/Meta"));
const _RenderCustomComponent = /*#__PURE__*/ _interop_require_default(require("../../utilities/RenderCustomComponent"));
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'template-default';
const Default = ({ children, className })=>{
    const { admin: { components: { Nav: CustomNav } = {
        Nav: undefined
    } } = {} } = (0, _Config.useConfig)();
    const { t } = (0, _reacti18next.useTranslation)('general');
    const { navOpen } = (0, _context.useNav)();
    return /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, /*#__PURE__*/ _react.default.createElement(_Meta.default, {
        description: `${t('dashboard')} Payload`,
        keywords: `${t('dashboard')}, Payload`,
        title: t('dashboard')
    }), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__nav-toggler-wrapper`,
        id: "nav-toggler"
    }, /*#__PURE__*/ _react.default.createElement(_NavToggler.NavToggler, {
        className: `${baseClass}__nav-toggler`
    }, /*#__PURE__*/ _react.default.createElement(_Hamburger.Hamburger, {
        closeIcon: "collapse",
        isActive: navOpen
    }))), /*#__PURE__*/ _react.default.createElement("div", {
        className: [
            baseClass,
            className,
            navOpen && `${baseClass}--nav-open`
        ].filter(Boolean).join(' ')
    }, /*#__PURE__*/ _react.default.createElement(_RenderCustomComponent.default, {
        CustomComponent: CustomNav,
        DefaultComponent: _Nav.Nav
    }), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__wrap`
    }, /*#__PURE__*/ _react.default.createElement(_Header.AppHeader, null), children)));
};
const _default = Default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL3RlbXBsYXRlcy9EZWZhdWx0L2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcblxuaW1wb3J0IHR5cGUgeyBQcm9wcyB9IGZyb20gJy4vdHlwZXMnXG5cbmltcG9ydCB7IEhhbWJ1cmdlciB9IGZyb20gJy4uLy4uL2VsZW1lbnRzL0hhbWJ1cmdlcidcbmltcG9ydCB7IEFwcEhlYWRlciB9IGZyb20gJy4uLy4uL2VsZW1lbnRzL0hlYWRlcidcbmltcG9ydCB7IE5hdiBhcyBEZWZhdWx0TmF2IH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvTmF2J1xuaW1wb3J0IHsgTmF2VG9nZ2xlciB9IGZyb20gJy4uLy4uL2VsZW1lbnRzL05hdi9OYXZUb2dnbGVyJ1xuaW1wb3J0IHsgdXNlTmF2IH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvTmF2L2NvbnRleHQnXG5pbXBvcnQgeyB1c2VDb25maWcgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvQ29uZmlnJ1xuaW1wb3J0IE1ldGEgZnJvbSAnLi4vLi4vdXRpbGl0aWVzL01ldGEnXG5pbXBvcnQgUmVuZGVyQ3VzdG9tQ29tcG9uZW50IGZyb20gJy4uLy4uL3V0aWxpdGllcy9SZW5kZXJDdXN0b21Db21wb25lbnQnXG5pbXBvcnQgJy4vaW5kZXguc2NzcydcblxuY29uc3QgYmFzZUNsYXNzID0gJ3RlbXBsYXRlLWRlZmF1bHQnXG5cbmNvbnN0IERlZmF1bHQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IGNoaWxkcmVuLCBjbGFzc05hbWUgfSkgPT4ge1xuICBjb25zdCB7XG4gICAgYWRtaW46IHtcbiAgICAgIGNvbXBvbmVudHM6IHsgTmF2OiBDdXN0b21OYXYgfSA9IHtcbiAgICAgICAgTmF2OiB1bmRlZmluZWQsXG4gICAgICB9LFxuICAgIH0gPSB7fSxcbiAgfSA9IHVzZUNvbmZpZygpXG5cbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbignZ2VuZXJhbCcpXG5cbiAgY29uc3QgeyBuYXZPcGVuIH0gPSB1c2VOYXYoKVxuXG4gIHJldHVybiAoXG4gICAgPEZyYWdtZW50PlxuICAgICAgPE1ldGFcbiAgICAgICAgZGVzY3JpcHRpb249e2Ake3QoJ2Rhc2hib2FyZCcpfSBQYXlsb2FkYH1cbiAgICAgICAga2V5d29yZHM9e2Ake3QoJ2Rhc2hib2FyZCcpfSwgUGF5bG9hZGB9XG4gICAgICAgIHRpdGxlPXt0KCdkYXNoYm9hcmQnKX1cbiAgICAgIC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fbmF2LXRvZ2dsZXItd3JhcHBlcmB9IGlkPVwibmF2LXRvZ2dsZXJcIj5cbiAgICAgICAgPE5hdlRvZ2dsZXIgY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3N9X19uYXYtdG9nZ2xlcmB9PlxuICAgICAgICAgIDxIYW1idXJnZXIgY2xvc2VJY29uPVwiY29sbGFwc2VcIiBpc0FjdGl2ZT17bmF2T3Blbn0gLz5cbiAgICAgICAgPC9OYXZUb2dnbGVyPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzTmFtZT17W2Jhc2VDbGFzcywgY2xhc3NOYW1lLCBuYXZPcGVuICYmIGAke2Jhc2VDbGFzc30tLW5hdi1vcGVuYF1cbiAgICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgICAgLmpvaW4oJyAnKX1cbiAgICAgID5cbiAgICAgICAgPFJlbmRlckN1c3RvbUNvbXBvbmVudCBDdXN0b21Db21wb25lbnQ9e0N1c3RvbU5hdn0gRGVmYXVsdENvbXBvbmVudD17RGVmYXVsdE5hdn0gLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX3dyYXBgfT5cbiAgICAgICAgICA8QXBwSGVhZGVyIC8+XG4gICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgRGVmYXVsdFxuIl0sIm5hbWVzIjpbImJhc2VDbGFzcyIsIkRlZmF1bHQiLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsImFkbWluIiwiY29tcG9uZW50cyIsIk5hdiIsIkN1c3RvbU5hdiIsInVuZGVmaW5lZCIsInVzZUNvbmZpZyIsInQiLCJ1c2VUcmFuc2xhdGlvbiIsIm5hdk9wZW4iLCJ1c2VOYXYiLCJGcmFnbWVudCIsIk1ldGEiLCJkZXNjcmlwdGlvbiIsImtleXdvcmRzIiwidGl0bGUiLCJkaXYiLCJpZCIsIk5hdlRvZ2dsZXIiLCJIYW1idXJnZXIiLCJjbG9zZUljb24iLCJpc0FjdGl2ZSIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwiUmVuZGVyQ3VzdG9tQ29tcG9uZW50IiwiQ3VzdG9tQ29tcG9uZW50IiwiRGVmYXVsdENvbXBvbmVudCIsIkRlZmF1bHROYXYiLCJBcHBIZWFkZXIiXSwibWFwcGluZ3MiOiI7Ozs7K0JBeURBOzs7ZUFBQTs7OytEQXpEZ0M7OEJBQ0Q7MkJBSUw7d0JBQ0E7cUJBQ1E7NEJBQ1A7eUJBQ0o7d0JBQ0c7NkRBQ1Q7OEVBQ2lCO1FBQzNCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFUCxNQUFNQSxZQUFZO0FBRWxCLE1BQU1DLFVBQTJCLENBQUMsRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUU7SUFDdkQsTUFBTSxFQUNKQyxPQUFPLEVBQ0xDLFlBQVksRUFBRUMsS0FBS0MsU0FBUyxFQUFFLEdBQUc7UUFDL0JELEtBQUtFO0lBQ1AsQ0FBQyxFQUNGLEdBQUcsQ0FBQyxDQUFDLEVBQ1AsR0FBR0MsSUFBQUEsaUJBQVM7SUFFYixNQUFNLEVBQUVDLENBQUMsRUFBRSxHQUFHQyxJQUFBQSw0QkFBYyxFQUFDO0lBRTdCLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdDLElBQUFBLGVBQU07SUFFMUIscUJBQ0UsNkJBQUNDLGVBQVEsc0JBQ1AsNkJBQUNDLGFBQUk7UUFDSEMsYUFBYSxDQUFDLEVBQUVOLEVBQUUsYUFBYSxRQUFRLENBQUM7UUFDeENPLFVBQVUsQ0FBQyxFQUFFUCxFQUFFLGFBQWEsU0FBUyxDQUFDO1FBQ3RDUSxPQUFPUixFQUFFO3NCQUVYLDZCQUFDUztRQUFJaEIsV0FBVyxDQUFDLEVBQUVILFVBQVUscUJBQXFCLENBQUM7UUFBRW9CLElBQUc7cUJBQ3RELDZCQUFDQyxzQkFBVTtRQUFDbEIsV0FBVyxDQUFDLEVBQUVILFVBQVUsYUFBYSxDQUFDO3FCQUNoRCw2QkFBQ3NCLG9CQUFTO1FBQUNDLFdBQVU7UUFBV0MsVUFBVVo7d0JBRzlDLDZCQUFDTztRQUNDaEIsV0FBVztZQUFDSDtZQUFXRztZQUFXUyxXQUFXLENBQUMsRUFBRVosVUFBVSxVQUFVLENBQUM7U0FBQyxDQUNuRXlCLE1BQU0sQ0FBQ0MsU0FDUEMsSUFBSSxDQUFDO3FCQUVSLDZCQUFDQyw4QkFBcUI7UUFBQ0MsaUJBQWlCdEI7UUFBV3VCLGtCQUFrQkMsUUFBVTtzQkFDL0UsNkJBQUNaO1FBQUloQixXQUFXLENBQUMsRUFBRUgsVUFBVSxNQUFNLENBQUM7cUJBQ2xDLDZCQUFDZ0MsaUJBQVMsU0FDVDlCO0FBS1g7TUFFQSxXQUFlRCJ9