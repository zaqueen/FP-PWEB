"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Routes", {
    enumerable: true,
    get: function() {
        return Routes;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _reactrouterdom = require("react-router-dom");
const _api = require("../../../api");
const _Loading = require("../../elements/Loading");
const _StayLoggedIn = /*#__PURE__*/ _interop_require_default(require("../../modals/StayLoggedIn"));
const _Default = /*#__PURE__*/ _interop_require_default(require("../../templates/Default"));
const _Auth = require("../../utilities/Auth");
const _Config = require("../../utilities/Config");
const _DocumentInfo = require("../../utilities/DocumentInfo");
const _Locale = require("../../utilities/Locale");
const _NotFound = /*#__PURE__*/ _interop_require_default(require("../NotFound"));
const _Unauthorized = /*#__PURE__*/ _interop_require_default(require("../Unauthorized"));
const _collections = require("./collections");
const _custom = require("./custom");
const _globals = require("./globals");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// @ts-expect-error Just TypeScript being broken // TODO: Open TypeScript issue
const Dashboard = /*#__PURE__*/ (0, _react.lazy)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../Dashboard"))));
// @ts-expect-error Just TypeScript being broken // TODO: Open TypeScript issue
const ForgotPassword = /*#__PURE__*/ (0, _react.lazy)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../ForgotPassword"))));
// @ts-expect-error Just TypeScript being broken // TODO: Open TypeScript issue
const Login = /*#__PURE__*/ (0, _react.lazy)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../Login"))));
// @ts-expect-error Just TypeScript being broken // TODO: Open TypeScript issue
const Logout = /*#__PURE__*/ (0, _react.lazy)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../Logout"))));
// @ts-expect-error Just TypeScript being broken // TODO: Open TypeScript issue
const Verify = /*#__PURE__*/ (0, _react.lazy)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../Verify"))));
// @ts-expect-error Just TypeScript being broken // TODO: Open TypeScript issue
const CreateFirstUser = /*#__PURE__*/ (0, _react.lazy)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../CreateFirstUser"))));
// @ts-expect-error Just TypeScript being broken // TODO: Open TypeScript issue
const ResetPassword = /*#__PURE__*/ (0, _react.lazy)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../ResetPassword"))));
// @ts-expect-error Just TypeScript being broken // TODO: Open TypeScript issue
const Account = /*#__PURE__*/ (0, _react.lazy)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../Account"))));
const Routes = ()=>{
    const [initialized, setInitialized] = (0, _react.useState)(null);
    const { permissions, refreshCookie, user } = (0, _Auth.useAuth)();
    const { i18n } = (0, _reacti18next.useTranslation)();
    const { code: locale } = (0, _Locale.useLocale)();
    const canAccessAdmin = permissions?.canAccessAdmin;
    const config = (0, _Config.useConfig)();
    const { admin: { inactivityRoute: logoutInactivityRoute, logoutRoute, user: userSlug }, collections, globals, routes } = config;
    const isLoadingUser = Boolean(typeof user === 'undefined' || user && typeof canAccessAdmin === 'undefined');
    const userCollection = collections.find(({ slug })=>slug === userSlug);
    (0, _react.useEffect)(()=>{
        if (userCollection && !userCollection?.auth?.disableLocalStrategy) {
            const { slug } = userCollection;
            _api.requests.get(`${routes.api}/${slug}/init`, {
                headers: {
                    'Accept-Language': i18n.language
                }
            }).then((res)=>res.json().then((data)=>{
                    if (data && 'initialized' in data) {
                        setInitialized(data.initialized);
                    }
                }));
        } else {
            setInitialized(true);
        }
    }, [
        i18n.language,
        routes,
        userCollection
    ]);
    return /*#__PURE__*/ _react.default.createElement(_react.Suspense, {
        fallback: /*#__PURE__*/ _react.default.createElement(_Loading.LoadingOverlayToggle, {
            name: "route-suspense",
            show: true
        })
    }, /*#__PURE__*/ _react.default.createElement(_Loading.LoadingOverlayToggle, {
        name: "route-loader",
        show: isLoadingUser
    }), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
        path: routes.admin,
        render: ({ match })=>{
            if (initialized === false) {
                return /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Switch, null, /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}/create-first-user`
                }, /*#__PURE__*/ _react.default.createElement(CreateFirstUser, {
                    setInitialized: setInitialized
                })), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, null, /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Redirect, {
                    to: `${match.url}/create-first-user`
                })));
            }
            if (initialized === true && !isLoadingUser) {
                return /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Switch, null, /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}/create-first-user`
                }, /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Redirect, {
                    to: `${match.url}/`
                })), (0, _custom.customRoutes)({
                    canAccessAdmin,
                    config,
                    match,
                    user
                }), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}/login`
                }, /*#__PURE__*/ _react.default.createElement(Login, null)), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}${logoutRoute}`
                }, /*#__PURE__*/ _react.default.createElement(Logout, null)), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}${logoutInactivityRoute}`
                }, /*#__PURE__*/ _react.default.createElement(Logout, {
                    inactivity: true
                })), !userCollection?.auth?.disableLocalStrategy && /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}/forgot`
                }, /*#__PURE__*/ _react.default.createElement(ForgotPassword, null)), !userCollection?.auth?.disableLocalStrategy && /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}/reset/:token`
                }, /*#__PURE__*/ _react.default.createElement(ResetPassword, null)), collections.map((collection)=>{
                    if (collection?.auth?.verify && !collection.auth.disableLocalStrategy) {
                        return /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                            exact: true,
                            key: `${collection.slug}-verify`,
                            path: `${match.url}/${collection.slug}/verify/:token`
                        }, /*#__PURE__*/ _react.default.createElement(Verify, {
                            collection: collection
                        }));
                    }
                    return null;
                }), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, null, user ? /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, canAccessAdmin && /*#__PURE__*/ _react.default.createElement(_Default.default, null, /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Switch, null, /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    exact: true,
                    path: `${match.url}/`
                }, /*#__PURE__*/ _react.default.createElement(Dashboard, null)), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}/account`
                }, /*#__PURE__*/ _react.default.createElement(_DocumentInfo.DocumentInfoProvider, {
                    collection: collections.find(({ slug })=>slug === userSlug),
                    id: user.id
                }, /*#__PURE__*/ _react.default.createElement(Account, null))), (0, _collections.collectionRoutes)({
                    collections,
                    match,
                    permissions,
                    user
                }), (0, _globals.globalRoutes)({
                    globals,
                    locale,
                    match,
                    permissions,
                    user
                }), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}*`
                }, /*#__PURE__*/ _react.default.createElement(_NotFound.default, null)))), canAccessAdmin === false && /*#__PURE__*/ _react.default.createElement(_Unauthorized.default, null)) : /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Redirect, {
                    to: `${match.url}/login${window.location.pathname.startsWith(routes.admin) ? `?redirect=${encodeURIComponent(window.location.pathname.replace(routes.admin, ''))}` : ''}`
                })), /*#__PURE__*/ _react.default.createElement(_reactrouterdom.Route, {
                    path: `${match.url}*`
                }, /*#__PURE__*/ _react.default.createElement(_NotFound.default, null)));
            }
            return null;
        }
    }), /*#__PURE__*/ _react.default.createElement(_StayLoggedIn.default, {
        refreshCookie: refreshCookie
    }));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL3ZpZXdzL1JvdXRlcy9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCBTdXNwZW5zZSwgbGF6eSwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0J1xuaW1wb3J0IHsgUmVkaXJlY3QsIFJvdXRlLCBTd2l0Y2ggfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuXG5pbXBvcnQgeyByZXF1ZXN0cyB9IGZyb20gJy4uLy4uLy4uL2FwaSdcbmltcG9ydCB7IExvYWRpbmdPdmVybGF5VG9nZ2xlIH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvTG9hZGluZydcbmltcG9ydCBTdGF5TG9nZ2VkSW4gZnJvbSAnLi4vLi4vbW9kYWxzL1N0YXlMb2dnZWRJbidcbmltcG9ydCBEZWZhdWx0VGVtcGxhdGUgZnJvbSAnLi4vLi4vdGVtcGxhdGVzL0RlZmF1bHQnXG5pbXBvcnQgeyB1c2VBdXRoIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL0F1dGgnXG5pbXBvcnQgeyB1c2VDb25maWcgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvQ29uZmlnJ1xuaW1wb3J0IHsgRG9jdW1lbnRJbmZvUHJvdmlkZXIgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvRG9jdW1lbnRJbmZvJ1xuaW1wb3J0IHsgdXNlTG9jYWxlIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL0xvY2FsZSdcbmltcG9ydCBOb3RGb3VuZCBmcm9tICcuLi9Ob3RGb3VuZCdcbmltcG9ydCBVbmF1dGhvcml6ZWQgZnJvbSAnLi4vVW5hdXRob3JpemVkJ1xuaW1wb3J0IHsgY29sbGVjdGlvblJvdXRlcyB9IGZyb20gJy4vY29sbGVjdGlvbnMnXG5pbXBvcnQgeyBjdXN0b21Sb3V0ZXMgfSBmcm9tICcuL2N1c3RvbSdcbmltcG9ydCB7IGdsb2JhbFJvdXRlcyB9IGZyb20gJy4vZ2xvYmFscydcblxuLy8gQHRzLWV4cGVjdC1lcnJvciBKdXN0IFR5cGVTY3JpcHQgYmVpbmcgYnJva2VuIC8vIFRPRE86IE9wZW4gVHlwZVNjcmlwdCBpc3N1ZVxuY29uc3QgRGFzaGJvYXJkID0gbGF6eSgoKSA9PiBpbXBvcnQoJy4uL0Rhc2hib2FyZCcpKVxuLy8gQHRzLWV4cGVjdC1lcnJvciBKdXN0IFR5cGVTY3JpcHQgYmVpbmcgYnJva2VuIC8vIFRPRE86IE9wZW4gVHlwZVNjcmlwdCBpc3N1ZVxuY29uc3QgRm9yZ290UGFzc3dvcmQgPSBsYXp5KCgpID0+IGltcG9ydCgnLi4vRm9yZ290UGFzc3dvcmQnKSlcbi8vIEB0cy1leHBlY3QtZXJyb3IgSnVzdCBUeXBlU2NyaXB0IGJlaW5nIGJyb2tlbiAvLyBUT0RPOiBPcGVuIFR5cGVTY3JpcHQgaXNzdWVcbmNvbnN0IExvZ2luID0gbGF6eSgoKSA9PiBpbXBvcnQoJy4uL0xvZ2luJykpXG4vLyBAdHMtZXhwZWN0LWVycm9yIEp1c3QgVHlwZVNjcmlwdCBiZWluZyBicm9rZW4gLy8gVE9ETzogT3BlbiBUeXBlU2NyaXB0IGlzc3VlXG5jb25zdCBMb2dvdXQgPSBsYXp5KCgpID0+IGltcG9ydCgnLi4vTG9nb3V0JykpXG4vLyBAdHMtZXhwZWN0LWVycm9yIEp1c3QgVHlwZVNjcmlwdCBiZWluZyBicm9rZW4gLy8gVE9ETzogT3BlbiBUeXBlU2NyaXB0IGlzc3VlXG5jb25zdCBWZXJpZnkgPSBsYXp5KCgpID0+IGltcG9ydCgnLi4vVmVyaWZ5JykpXG4vLyBAdHMtZXhwZWN0LWVycm9yIEp1c3QgVHlwZVNjcmlwdCBiZWluZyBicm9rZW4gLy8gVE9ETzogT3BlbiBUeXBlU2NyaXB0IGlzc3VlXG5jb25zdCBDcmVhdGVGaXJzdFVzZXIgPSBsYXp5KCgpID0+IGltcG9ydCgnLi4vQ3JlYXRlRmlyc3RVc2VyJykpXG4vLyBAdHMtZXhwZWN0LWVycm9yIEp1c3QgVHlwZVNjcmlwdCBiZWluZyBicm9rZW4gLy8gVE9ETzogT3BlbiBUeXBlU2NyaXB0IGlzc3VlXG5jb25zdCBSZXNldFBhc3N3b3JkID0gbGF6eSgoKSA9PiBpbXBvcnQoJy4uL1Jlc2V0UGFzc3dvcmQnKSlcbi8vIEB0cy1leHBlY3QtZXJyb3IgSnVzdCBUeXBlU2NyaXB0IGJlaW5nIGJyb2tlbiAvLyBUT0RPOiBPcGVuIFR5cGVTY3JpcHQgaXNzdWVcbmNvbnN0IEFjY291bnQgPSBsYXp5KCgpID0+IGltcG9ydCgnLi4vQWNjb3VudCcpKVxuXG5leHBvcnQgY29uc3QgUm91dGVzOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgW2luaXRpYWxpemVkLCBzZXRJbml0aWFsaXplZF0gPSB1c2VTdGF0ZTxib29sZWFuIHwgbnVsbD4obnVsbClcbiAgY29uc3QgeyBwZXJtaXNzaW9ucywgcmVmcmVzaENvb2tpZSwgdXNlciB9ID0gdXNlQXV0aCgpXG4gIGNvbnN0IHsgaTE4biB9ID0gdXNlVHJhbnNsYXRpb24oKVxuICBjb25zdCB7IGNvZGU6IGxvY2FsZSB9ID0gdXNlTG9jYWxlKClcblxuICBjb25zdCBjYW5BY2Nlc3NBZG1pbiA9IHBlcm1pc3Npb25zPy5jYW5BY2Nlc3NBZG1pblxuXG4gIGNvbnN0IGNvbmZpZyA9IHVzZUNvbmZpZygpXG5cbiAgY29uc3Qge1xuICAgIGFkbWluOiB7IGluYWN0aXZpdHlSb3V0ZTogbG9nb3V0SW5hY3Rpdml0eVJvdXRlLCBsb2dvdXRSb3V0ZSwgdXNlcjogdXNlclNsdWcgfSxcbiAgICBjb2xsZWN0aW9ucyxcbiAgICBnbG9iYWxzLFxuICAgIHJvdXRlcyxcbiAgfSA9IGNvbmZpZ1xuXG4gIGNvbnN0IGlzTG9hZGluZ1VzZXIgPSBCb29sZWFuKFxuICAgIHR5cGVvZiB1c2VyID09PSAndW5kZWZpbmVkJyB8fCAodXNlciAmJiB0eXBlb2YgY2FuQWNjZXNzQWRtaW4gPT09ICd1bmRlZmluZWQnKSxcbiAgKVxuXG4gIGNvbnN0IHVzZXJDb2xsZWN0aW9uID0gY29sbGVjdGlvbnMuZmluZCgoeyBzbHVnIH0pID0+IHNsdWcgPT09IHVzZXJTbHVnKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHVzZXJDb2xsZWN0aW9uICYmICF1c2VyQ29sbGVjdGlvbj8uYXV0aD8uZGlzYWJsZUxvY2FsU3RyYXRlZ3kpIHtcbiAgICAgIGNvbnN0IHsgc2x1ZyB9ID0gdXNlckNvbGxlY3Rpb25cblxuICAgICAgcmVxdWVzdHNcbiAgICAgICAgLmdldChgJHtyb3V0ZXMuYXBpfS8ke3NsdWd9L2luaXRgLCB7XG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0FjY2VwdC1MYW5ndWFnZSc6IGkxOG4ubGFuZ3VhZ2UsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT5cbiAgICAgICAgICByZXMuanNvbigpLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgIGlmIChkYXRhICYmICdpbml0aWFsaXplZCcgaW4gZGF0YSkge1xuICAgICAgICAgICAgICBzZXRJbml0aWFsaXplZChkYXRhLmluaXRpYWxpemVkKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pLFxuICAgICAgICApXG4gICAgfSBlbHNlIHtcbiAgICAgIHNldEluaXRpYWxpemVkKHRydWUpXG4gICAgfVxuICB9LCBbaTE4bi5sYW5ndWFnZSwgcm91dGVzLCB1c2VyQ29sbGVjdGlvbl0pXG5cbiAgcmV0dXJuIChcbiAgICA8U3VzcGVuc2UgZmFsbGJhY2s9ezxMb2FkaW5nT3ZlcmxheVRvZ2dsZSBuYW1lPVwicm91dGUtc3VzcGVuc2VcIiBzaG93IC8+fT5cbiAgICAgIDxMb2FkaW5nT3ZlcmxheVRvZ2dsZSBuYW1lPVwicm91dGUtbG9hZGVyXCIgc2hvdz17aXNMb2FkaW5nVXNlcn0gLz5cbiAgICAgIDxSb3V0ZVxuICAgICAgICBwYXRoPXtyb3V0ZXMuYWRtaW59XG4gICAgICAgIHJlbmRlcj17KHsgbWF0Y2ggfSkgPT4ge1xuICAgICAgICAgIGlmIChpbml0aWFsaXplZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9e2Ake21hdGNoLnVybH0vY3JlYXRlLWZpcnN0LXVzZXJgfT5cbiAgICAgICAgICAgICAgICAgIDxDcmVhdGVGaXJzdFVzZXIgc2V0SW5pdGlhbGl6ZWQ9e3NldEluaXRpYWxpemVkfSAvPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgPFJvdXRlPlxuICAgICAgICAgICAgICAgICAgPFJlZGlyZWN0IHRvPXtgJHttYXRjaC51cmx9L2NyZWF0ZS1maXJzdC11c2VyYH0gLz5cbiAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICA8L1N3aXRjaD5cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoaW5pdGlhbGl6ZWQgPT09IHRydWUgJiYgIWlzTG9hZGluZ1VzZXIpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9e2Ake21hdGNoLnVybH0vY3JlYXRlLWZpcnN0LXVzZXJgfT5cbiAgICAgICAgICAgICAgICAgIDxSZWRpcmVjdCB0bz17YCR7bWF0Y2gudXJsfS9gfSAvPlxuICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAge2N1c3RvbVJvdXRlcyh7XG4gICAgICAgICAgICAgICAgICBjYW5BY2Nlc3NBZG1pbixcbiAgICAgICAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgICAgICAgIG1hdGNoLFxuICAgICAgICAgICAgICAgICAgdXNlcixcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD17YCR7bWF0Y2gudXJsfS9sb2dpbmB9PlxuICAgICAgICAgICAgICAgICAgPExvZ2luIC8+XG4gICAgICAgICAgICAgICAgPC9Sb3V0ZT5cbiAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD17YCR7bWF0Y2gudXJsfSR7bG9nb3V0Um91dGV9YH0+XG4gICAgICAgICAgICAgICAgICA8TG9nb3V0IC8+XG4gICAgICAgICAgICAgICAgPC9Sb3V0ZT5cbiAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD17YCR7bWF0Y2gudXJsfSR7bG9nb3V0SW5hY3Rpdml0eVJvdXRlfWB9PlxuICAgICAgICAgICAgICAgICAgPExvZ291dCBpbmFjdGl2aXR5IC8+XG4gICAgICAgICAgICAgICAgPC9Sb3V0ZT5cbiAgICAgICAgICAgICAgICB7IXVzZXJDb2xsZWN0aW9uPy5hdXRoPy5kaXNhYmxlTG9jYWxTdHJhdGVneSAmJiAoXG4gICAgICAgICAgICAgICAgICA8Um91dGUgcGF0aD17YCR7bWF0Y2gudXJsfS9mb3Jnb3RgfT5cbiAgICAgICAgICAgICAgICAgICAgPEZvcmdvdFBhc3N3b3JkIC8+XG4gICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgeyF1c2VyQ29sbGVjdGlvbj8uYXV0aD8uZGlzYWJsZUxvY2FsU3RyYXRlZ3kgJiYgKFxuICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9e2Ake21hdGNoLnVybH0vcmVzZXQvOnRva2VuYH0+XG4gICAgICAgICAgICAgICAgICAgIDxSZXNldFBhc3N3b3JkIC8+XG4gICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAge2NvbGxlY3Rpb25zLm1hcCgoY29sbGVjdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKGNvbGxlY3Rpb24/LmF1dGg/LnZlcmlmeSAmJiAhY29sbGVjdGlvbi5hdXRoLmRpc2FibGVMb2NhbFN0cmF0ZWd5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgPFJvdXRlXG4gICAgICAgICAgICAgICAgICAgICAgICBleGFjdFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtgJHtjb2xsZWN0aW9uLnNsdWd9LXZlcmlmeWB9XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRoPXtgJHttYXRjaC51cmx9LyR7Y29sbGVjdGlvbi5zbHVnfS92ZXJpZnkvOnRva2VuYH1cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VmVyaWZ5IGNvbGxlY3Rpb249e2NvbGxlY3Rpb259IC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9Sb3V0ZT5cbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8Um91dGU+XG4gICAgICAgICAgICAgICAgICB7dXNlciA/IChcbiAgICAgICAgICAgICAgICAgICAgPEZyYWdtZW50PlxuICAgICAgICAgICAgICAgICAgICAgIHtjYW5BY2Nlc3NBZG1pbiAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8RGVmYXVsdFRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8U3dpdGNoPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBleGFjdCBwYXRoPXtgJHttYXRjaC51cmx9L2B9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPERhc2hib2FyZCAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUm91dGU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9e2Ake21hdGNoLnVybH0vYWNjb3VudGB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPERvY3VtZW50SW5mb1Byb3ZpZGVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb249e2NvbGxlY3Rpb25zLmZpbmQoKHsgc2x1ZyB9KSA9PiBzbHVnID09PSB1c2VyU2x1Zyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXt1c2VyLmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QWNjb3VudCAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Eb2N1bWVudEluZm9Qcm92aWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjb2xsZWN0aW9uUm91dGVzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2gsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJtaXNzaW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2dsb2JhbFJvdXRlcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnbG9iYWxzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2gsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJtaXNzaW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9e2Ake21hdGNoLnVybH0qYH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Tm90Rm91bmQgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L1N3aXRjaD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvRGVmYXVsdFRlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAge2NhbkFjY2Vzc0FkbWluID09PSBmYWxzZSAmJiA8VW5hdXRob3JpemVkIC8+fVxuICAgICAgICAgICAgICAgICAgICA8L0ZyYWdtZW50PlxuICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgPFJlZGlyZWN0XG4gICAgICAgICAgICAgICAgICAgICAgdG89e2Ake21hdGNoLnVybH0vbG9naW4ke1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnN0YXJ0c1dpdGgocm91dGVzLmFkbWluKVxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IGA/cmVkaXJlY3Q9JHtlbmNvZGVVUklDb21wb25lbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZShyb3V0ZXMuYWRtaW4sICcnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApfWBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnJ1xuICAgICAgICAgICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8L1JvdXRlPlxuICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPXtgJHttYXRjaC51cmx9KmB9PlxuICAgICAgICAgICAgICAgICAgPE5vdEZvdW5kIC8+XG4gICAgICAgICAgICAgICAgPC9Sb3V0ZT5cbiAgICAgICAgICAgICAgPC9Td2l0Y2g+XG4gICAgICAgICAgICApXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgICA8U3RheUxvZ2dlZEluIHJlZnJlc2hDb29raWU9e3JlZnJlc2hDb29raWV9IC8+XG4gICAgPC9TdXNwZW5zZT5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIlJvdXRlcyIsIkRhc2hib2FyZCIsImxhenkiLCJGb3Jnb3RQYXNzd29yZCIsIkxvZ2luIiwiTG9nb3V0IiwiVmVyaWZ5IiwiQ3JlYXRlRmlyc3RVc2VyIiwiUmVzZXRQYXNzd29yZCIsIkFjY291bnQiLCJpbml0aWFsaXplZCIsInNldEluaXRpYWxpemVkIiwidXNlU3RhdGUiLCJwZXJtaXNzaW9ucyIsInJlZnJlc2hDb29raWUiLCJ1c2VyIiwidXNlQXV0aCIsImkxOG4iLCJ1c2VUcmFuc2xhdGlvbiIsImNvZGUiLCJsb2NhbGUiLCJ1c2VMb2NhbGUiLCJjYW5BY2Nlc3NBZG1pbiIsImNvbmZpZyIsInVzZUNvbmZpZyIsImFkbWluIiwiaW5hY3Rpdml0eVJvdXRlIiwibG9nb3V0SW5hY3Rpdml0eVJvdXRlIiwibG9nb3V0Um91dGUiLCJ1c2VyU2x1ZyIsImNvbGxlY3Rpb25zIiwiZ2xvYmFscyIsInJvdXRlcyIsImlzTG9hZGluZ1VzZXIiLCJCb29sZWFuIiwidXNlckNvbGxlY3Rpb24iLCJmaW5kIiwic2x1ZyIsInVzZUVmZmVjdCIsImF1dGgiLCJkaXNhYmxlTG9jYWxTdHJhdGVneSIsInJlcXVlc3RzIiwiZ2V0IiwiYXBpIiwiaGVhZGVycyIsImxhbmd1YWdlIiwidGhlbiIsInJlcyIsImpzb24iLCJkYXRhIiwiU3VzcGVuc2UiLCJmYWxsYmFjayIsIkxvYWRpbmdPdmVybGF5VG9nZ2xlIiwibmFtZSIsInNob3ciLCJSb3V0ZSIsInBhdGgiLCJyZW5kZXIiLCJtYXRjaCIsIlN3aXRjaCIsInVybCIsIlJlZGlyZWN0IiwidG8iLCJjdXN0b21Sb3V0ZXMiLCJpbmFjdGl2aXR5IiwibWFwIiwiY29sbGVjdGlvbiIsInZlcmlmeSIsImV4YWN0Iiwia2V5IiwiRnJhZ21lbnQiLCJEZWZhdWx0VGVtcGxhdGUiLCJEb2N1bWVudEluZm9Qcm92aWRlciIsImlkIiwiY29sbGVjdGlvblJvdXRlcyIsImdsb2JhbFJvdXRlcyIsIk5vdEZvdW5kIiwiVW5hdXRob3JpemVkIiwid2luZG93IiwibG9jYXRpb24iLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiLCJlbmNvZGVVUklDb21wb25lbnQiLCJyZXBsYWNlIiwiU3RheUxvZ2dlZEluIl0sIm1hcHBpbmdzIjoiOzs7OytCQW1DYUE7OztlQUFBQTs7OytEQW5Dd0Q7OEJBQ3RDO2dDQUNTO3FCQUVmO3lCQUNZO3FFQUNaO2dFQUNHO3NCQUNKO3dCQUNFOzhCQUNXO3dCQUNYO2lFQUNMO3FFQUNJOzZCQUNRO3dCQUNKO3lCQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFN0IsK0VBQStFO0FBQy9FLE1BQU1DLDBCQUFZQyxJQUFBQSxXQUFJLEVBQUMsSUFBTSxtRUFBQSxRQUFPO0FBQ3BDLCtFQUErRTtBQUMvRSxNQUFNQywrQkFBaUJELElBQUFBLFdBQUksRUFBQyxJQUFNLG1FQUFBLFFBQU87QUFDekMsK0VBQStFO0FBQy9FLE1BQU1FLHNCQUFRRixJQUFBQSxXQUFJLEVBQUMsSUFBTSxtRUFBQSxRQUFPO0FBQ2hDLCtFQUErRTtBQUMvRSxNQUFNRyx1QkFBU0gsSUFBQUEsV0FBSSxFQUFDLElBQU0sbUVBQUEsUUFBTztBQUNqQywrRUFBK0U7QUFDL0UsTUFBTUksdUJBQVNKLElBQUFBLFdBQUksRUFBQyxJQUFNLG1FQUFBLFFBQU87QUFDakMsK0VBQStFO0FBQy9FLE1BQU1LLGdDQUFrQkwsSUFBQUEsV0FBSSxFQUFDLElBQU0sbUVBQUEsUUFBTztBQUMxQywrRUFBK0U7QUFDL0UsTUFBTU0sOEJBQWdCTixJQUFBQSxXQUFJLEVBQUMsSUFBTSxtRUFBQSxRQUFPO0FBQ3hDLCtFQUErRTtBQUMvRSxNQUFNTyx3QkFBVVAsSUFBQUEsV0FBSSxFQUFDLElBQU0sbUVBQUEsUUFBTztBQUUz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