"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "DefaultVersionsView", {
    enumerable: true,
    get: function() {
        return DefaultVersionsView;
    }
});
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _reacti18next = require("react-i18next");
const _Gutter = require("../../elements/Gutter");
const _Loading = require("../../elements/Loading");
const _Paginator = /*#__PURE__*/ _interop_require_default(require("../../elements/Paginator"));
const _PerPage = /*#__PURE__*/ _interop_require_default(require("../../elements/PerPage"));
const _Table = require("../../elements/Table");
const _Meta = /*#__PURE__*/ _interop_require_default(require("../../utilities/Meta"));
const _SearchParams = require("../../utilities/SearchParams");
const _SetStepNav = require("../collections/Edit/SetStepNav");
const _columns = require("./columns");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const baseClass = 'versions';
const DefaultVersionsView = (props)=>{
    const { id, collection, data, entityLabel, global, isLoadingVersions, versionsData } = props;
    const { t } = (0, _reacti18next.useTranslation)('version');
    const { limit } = (0, _SearchParams.useSearchParams)();
    const useAsTitle = collection?.admin?.useAsTitle || 'id';
    let metaDesc;
    let metaTitle;
    if (collection) {
        metaTitle = `${t('versions')} - ${data[useAsTitle]} - ${entityLabel}`;
        metaDesc = t('viewingVersions', {
            documentTitle: data[useAsTitle],
            entityLabel
        });
    }
    if (global) {
        metaTitle = `${t('versions')} - ${entityLabel}`;
        metaDesc = t('viewingVersionsGlobal', {
            entityLabel
        });
    }
    const versionCount = versionsData?.totalDocs || 0;
    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(_SetStepNav.SetStepNav, {
        collection: collection,
        global: global,
        id: id,
        isEditing: true,
        view: t('versions')
    }), /*#__PURE__*/ _react.default.createElement(_Loading.LoadingOverlayToggle, {
        name: "versions",
        show: isLoadingVersions
    }), /*#__PURE__*/ _react.default.createElement("main", {
        className: baseClass
    }, /*#__PURE__*/ _react.default.createElement(_Meta.default, {
        description: metaDesc,
        title: metaTitle
    }), /*#__PURE__*/ _react.default.createElement(_Gutter.Gutter, {
        className: `${baseClass}__wrap`
    }, versionCount === 0 && /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__no-versions`
    }, t('noFurtherVersionsFound')), versionCount > 0 && /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(_Table.Table, {
        columns: (0, _columns.buildVersionColumns)(collection, global, t),
        data: versionsData?.docs
    }), /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__page-controls`
    }, /*#__PURE__*/ _react.default.createElement(_Paginator.default, {
        hasNextPage: versionsData.hasNextPage,
        hasPrevPage: versionsData.hasPrevPage,
        limit: versionsData.limit,
        nextPage: versionsData.nextPage,
        numberOfNeighbors: 1,
        page: versionsData.page,
        prevPage: versionsData.prevPage,
        totalPages: versionsData.totalPages
    }), versionsData?.totalDocs > 0 && /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__page-info`
    }, versionsData.page * versionsData.limit - (versionsData.limit - 1), "-", versionsData.totalPages > 1 && versionsData.totalPages !== versionsData.page ? versionsData.limit * versionsData.page : versionsData.totalDocs, ' ', t('of'), " ", versionsData.totalDocs), /*#__PURE__*/ _react.default.createElement(_PerPage.default, {
        limit: limit ? Number(limit) : 10,
        limits: collection?.admin?.pagination?.limits
    })))))));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL3ZpZXdzL1ZlcnNpb25zL0RlZmF1bHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcblxuaW1wb3J0IHR5cGUgeyBQcm9wcyB9IGZyb20gJy4vdHlwZXMnXG5cbmltcG9ydCB7IEd1dHRlciB9IGZyb20gJy4uLy4uL2VsZW1lbnRzL0d1dHRlcidcbmltcG9ydCB7IExvYWRpbmdPdmVybGF5VG9nZ2xlIH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvTG9hZGluZydcbmltcG9ydCBQYWdpbmF0b3IgZnJvbSAnLi4vLi4vZWxlbWVudHMvUGFnaW5hdG9yJ1xuaW1wb3J0IFBlclBhZ2UgZnJvbSAnLi4vLi4vZWxlbWVudHMvUGVyUGFnZSdcbmltcG9ydCB7IFRhYmxlIH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvVGFibGUnXG5pbXBvcnQgTWV0YSBmcm9tICcuLi8uLi91dGlsaXRpZXMvTWV0YSdcbmltcG9ydCB7IHVzZVNlYXJjaFBhcmFtcyB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9TZWFyY2hQYXJhbXMnXG5pbXBvcnQgeyBTZXRTdGVwTmF2IH0gZnJvbSAnLi4vY29sbGVjdGlvbnMvRWRpdC9TZXRTdGVwTmF2J1xuaW1wb3J0IHsgYnVpbGRWZXJzaW9uQ29sdW1ucyB9IGZyb20gJy4vY29sdW1ucydcbmltcG9ydCAnLi9pbmRleC5zY3NzJ1xuXG5jb25zdCBiYXNlQ2xhc3MgPSAndmVyc2lvbnMnXG5cbmV4cG9ydCBjb25zdCBEZWZhdWx0VmVyc2lvbnNWaWV3OiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgeyBpZCwgY29sbGVjdGlvbiwgZGF0YSwgZW50aXR5TGFiZWwsIGdsb2JhbCwgaXNMb2FkaW5nVmVyc2lvbnMsIHZlcnNpb25zRGF0YSB9ID0gcHJvcHNcblxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCd2ZXJzaW9uJylcblxuICBjb25zdCB7IGxpbWl0IH0gPSB1c2VTZWFyY2hQYXJhbXMoKVxuXG4gIGNvbnN0IHVzZUFzVGl0bGUgPSBjb2xsZWN0aW9uPy5hZG1pbj8udXNlQXNUaXRsZSB8fCAnaWQnXG5cbiAgbGV0IG1ldGFEZXNjOiBzdHJpbmdcbiAgbGV0IG1ldGFUaXRsZTogc3RyaW5nXG5cbiAgaWYgKGNvbGxlY3Rpb24pIHtcbiAgICBtZXRhVGl0bGUgPSBgJHt0KCd2ZXJzaW9ucycpfSAtICR7ZGF0YVt1c2VBc1RpdGxlXX0gLSAke2VudGl0eUxhYmVsfWBcbiAgICBtZXRhRGVzYyA9IHQoJ3ZpZXdpbmdWZXJzaW9ucycsIHsgZG9jdW1lbnRUaXRsZTogZGF0YVt1c2VBc1RpdGxlXSwgZW50aXR5TGFiZWwgfSlcbiAgfVxuXG4gIGlmIChnbG9iYWwpIHtcbiAgICBtZXRhVGl0bGUgPSBgJHt0KCd2ZXJzaW9ucycpfSAtICR7ZW50aXR5TGFiZWx9YFxuICAgIG1ldGFEZXNjID0gdCgndmlld2luZ1ZlcnNpb25zR2xvYmFsJywgeyBlbnRpdHlMYWJlbCB9KVxuICB9XG5cbiAgY29uc3QgdmVyc2lvbkNvdW50ID0gdmVyc2lvbnNEYXRhPy50b3RhbERvY3MgfHwgMFxuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPFNldFN0ZXBOYXYgY29sbGVjdGlvbj17Y29sbGVjdGlvbn0gZ2xvYmFsPXtnbG9iYWx9IGlkPXtpZH0gaXNFZGl0aW5nIHZpZXc9e3QoJ3ZlcnNpb25zJyl9IC8+XG4gICAgICA8TG9hZGluZ092ZXJsYXlUb2dnbGUgbmFtZT1cInZlcnNpb25zXCIgc2hvdz17aXNMb2FkaW5nVmVyc2lvbnN9IC8+XG4gICAgICA8bWFpbiBjbGFzc05hbWU9e2Jhc2VDbGFzc30+XG4gICAgICAgIDxNZXRhIGRlc2NyaXB0aW9uPXttZXRhRGVzY30gdGl0bGU9e21ldGFUaXRsZX0gLz5cbiAgICAgICAgPEd1dHRlciBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX3dyYXBgfT5cbiAgICAgICAgICB7dmVyc2lvbkNvdW50ID09PSAwICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgJHtiYXNlQ2xhc3N9X19uby12ZXJzaW9uc2B9Pnt0KCdub0Z1cnRoZXJWZXJzaW9uc0ZvdW5kJyl9PC9kaXY+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7dmVyc2lvbkNvdW50ID4gMCAmJiAoXG4gICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgIHsvKiA8ZGl2IGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fdmVyc2lvbi1jb3VudGB9PlxuICAgICAgICAgICAgICAgIHt0KHZlcnNpb25Db3VudCA9PT0gMSA/ICd2ZXJzaW9uQ291bnRfb25lJyA6ICd2ZXJzaW9uQ291bnRfbWFueScsIHtcbiAgICAgICAgICAgICAgICAgIGNvdW50OiB2ZXJzaW9uQ291bnQsXG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgIDwvZGl2PiAqL31cbiAgICAgICAgICAgICAgPFRhYmxlXG4gICAgICAgICAgICAgICAgY29sdW1ucz17YnVpbGRWZXJzaW9uQ29sdW1ucyhjb2xsZWN0aW9uLCBnbG9iYWwsIHQpfVxuICAgICAgICAgICAgICAgIGRhdGE9e3ZlcnNpb25zRGF0YT8uZG9jc31cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX3BhZ2UtY29udHJvbHNgfT5cbiAgICAgICAgICAgICAgICA8UGFnaW5hdG9yXG4gICAgICAgICAgICAgICAgICBoYXNOZXh0UGFnZT17dmVyc2lvbnNEYXRhLmhhc05leHRQYWdlfVxuICAgICAgICAgICAgICAgICAgaGFzUHJldlBhZ2U9e3ZlcnNpb25zRGF0YS5oYXNQcmV2UGFnZX1cbiAgICAgICAgICAgICAgICAgIGxpbWl0PXt2ZXJzaW9uc0RhdGEubGltaXR9XG4gICAgICAgICAgICAgICAgICBuZXh0UGFnZT17dmVyc2lvbnNEYXRhLm5leHRQYWdlfVxuICAgICAgICAgICAgICAgICAgbnVtYmVyT2ZOZWlnaGJvcnM9ezF9XG4gICAgICAgICAgICAgICAgICBwYWdlPXt2ZXJzaW9uc0RhdGEucGFnZX1cbiAgICAgICAgICAgICAgICAgIHByZXZQYWdlPXt2ZXJzaW9uc0RhdGEucHJldlBhZ2V9XG4gICAgICAgICAgICAgICAgICB0b3RhbFBhZ2VzPXt2ZXJzaW9uc0RhdGEudG90YWxQYWdlc31cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIHt2ZXJzaW9uc0RhdGE/LnRvdGFsRG9jcyA+IDAgJiYgKFxuICAgICAgICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YCR7YmFzZUNsYXNzfV9fcGFnZS1pbmZvYH0+XG4gICAgICAgICAgICAgICAgICAgICAge3ZlcnNpb25zRGF0YS5wYWdlICogdmVyc2lvbnNEYXRhLmxpbWl0IC0gKHZlcnNpb25zRGF0YS5saW1pdCAtIDEpfS1cbiAgICAgICAgICAgICAgICAgICAgICB7dmVyc2lvbnNEYXRhLnRvdGFsUGFnZXMgPiAxICYmIHZlcnNpb25zRGF0YS50b3RhbFBhZ2VzICE9PSB2ZXJzaW9uc0RhdGEucGFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgPyB2ZXJzaW9uc0RhdGEubGltaXQgKiB2ZXJzaW9uc0RhdGEucGFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgOiB2ZXJzaW9uc0RhdGEudG90YWxEb2NzfXsnICd9XG4gICAgICAgICAgICAgICAgICAgICAge3QoJ29mJyl9IHt2ZXJzaW9uc0RhdGEudG90YWxEb2NzfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPFBlclBhZ2VcbiAgICAgICAgICAgICAgICAgICAgICBsaW1pdD17bGltaXQgPyBOdW1iZXIobGltaXQpIDogMTB9XG4gICAgICAgICAgICAgICAgICAgICAgbGltaXRzPXtjb2xsZWN0aW9uPy5hZG1pbj8ucGFnaW5hdGlvbj8ubGltaXRzfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9HdXR0ZXI+XG4gICAgICA8L21haW4+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKVxufVxuIl0sIm5hbWVzIjpbIkRlZmF1bHRWZXJzaW9uc1ZpZXciLCJiYXNlQ2xhc3MiLCJwcm9wcyIsImlkIiwiY29sbGVjdGlvbiIsImRhdGEiLCJlbnRpdHlMYWJlbCIsImdsb2JhbCIsImlzTG9hZGluZ1ZlcnNpb25zIiwidmVyc2lvbnNEYXRhIiwidCIsInVzZVRyYW5zbGF0aW9uIiwibGltaXQiLCJ1c2VTZWFyY2hQYXJhbXMiLCJ1c2VBc1RpdGxlIiwiYWRtaW4iLCJtZXRhRGVzYyIsIm1ldGFUaXRsZSIsImRvY3VtZW50VGl0bGUiLCJ2ZXJzaW9uQ291bnQiLCJ0b3RhbERvY3MiLCJSZWFjdCIsIkZyYWdtZW50IiwiU2V0U3RlcE5hdiIsImlzRWRpdGluZyIsInZpZXciLCJMb2FkaW5nT3ZlcmxheVRvZ2dsZSIsIm5hbWUiLCJzaG93IiwibWFpbiIsImNsYXNzTmFtZSIsIk1ldGEiLCJkZXNjcmlwdGlvbiIsInRpdGxlIiwiR3V0dGVyIiwiZGl2IiwiVGFibGUiLCJjb2x1bW5zIiwiYnVpbGRWZXJzaW9uQ29sdW1ucyIsImRvY3MiLCJQYWdpbmF0b3IiLCJoYXNOZXh0UGFnZSIsImhhc1ByZXZQYWdlIiwibmV4dFBhZ2UiLCJudW1iZXJPZk5laWdoYm9ycyIsInBhZ2UiLCJwcmV2UGFnZSIsInRvdGFsUGFnZXMiLCJQZXJQYWdlIiwiTnVtYmVyIiwibGltaXRzIiwicGFnaW5h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