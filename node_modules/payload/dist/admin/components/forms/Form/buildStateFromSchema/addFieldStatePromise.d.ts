import type { TFunction } from 'i18next';
import type { User } from '../../../../../auth';
import type { SanitizedConfig } from '../../../../../config/types';
import type { NonPresentationalField } from '../../../../../fields/config/types';
import type { Data, Fields } from '../types';
type Args = {
    config: SanitizedConfig;
    data: Data;
    field: NonPresentationalField;
    fullData: Data;
    id: number | string;
    locale: string;
    operation: 'create' | 'update';
    passesCondition: boolean;
    path: string;
    preferences: {
        [key: string]: unknown;
    };
    state: Fields;
    t: TFunction;
    user: User;
};
export declare const addFieldStatePromise: ({ id, config, data, field, fullData, locale, operation, passesCondition, path, preferences, state, t, user, }: Args) => Promise<void>;
export {};
//# sourceMappingURL=addFieldStatePromise.d.ts.map