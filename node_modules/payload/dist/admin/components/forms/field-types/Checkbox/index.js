"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _validations = require("../../../../../fields/validations");
const _getTranslation = require("../../../../../utilities/getTranslation");
const _Error = /*#__PURE__*/ _interop_require_default(require("../../Error"));
const _FieldDescription = /*#__PURE__*/ _interop_require_default(require("../../FieldDescription"));
const _useField = /*#__PURE__*/ _interop_require_default(require("../../useField"));
const _withCondition = /*#__PURE__*/ _interop_require_default(require("../../withCondition"));
const _shared = require("../shared");
const _Input = require("./Input");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'checkbox';
const Checkbox = (props)=>{
    const { name, admin: { className, components: { Error, Label, afterInput, beforeInput } = {}, condition, description, readOnly, style, width } = {}, disableFormData, label, onChange, path: pathFromProps, required, validate = _validations.checkbox } = props;
    const ErrorComp = Error || _Error.default;
    const { i18n } = (0, _reacti18next.useTranslation)();
    const path = pathFromProps || name;
    const memoizedValidate = (0, _react.useCallback)((value, options)=>{
        return validate(value, {
            ...options,
            required
        });
    }, [
        validate,
        required
    ]);
    const { errorMessage, setValue, showError, value } = (0, _useField.default)({
        condition,
        disableFormData,
        path,
        validate: memoizedValidate
    });
    const onToggle = (0, _react.useCallback)(()=>{
        if (!readOnly) {
            setValue(!value);
            if (typeof onChange === 'function') onChange(!value);
        }
    }, [
        onChange,
        readOnly,
        setValue,
        value
    ]);
    const fieldID = `field-${path.replace(/\./g, '__')}`;
    return /*#__PURE__*/ _react.default.createElement("div", {
        className: [
            _shared.fieldBaseClass,
            baseClass,
            showError && 'error',
            className,
            value && `${baseClass}--checked`,
            readOnly && `${baseClass}--read-only`
        ].filter(Boolean).join(' '),
        style: {
            ...style,
            width
        }
    }, /*#__PURE__*/ _react.default.createElement("div", {
        className: `${baseClass}__error-wrap`
    }, /*#__PURE__*/ _react.default.createElement(ErrorComp, {
        alignCaret: "left",
        message: errorMessage,
        showError: showError
    })), /*#__PURE__*/ _react.default.createElement(_Input.CheckboxInput, {
        Label: Label,
        afterInput: afterInput,
        beforeInput: beforeInput,
        checked: Boolean(value),
        id: fieldID,
        label: (0, _getTranslation.getTranslation)(label || name, i18n),
        name: path,
        onToggle: onToggle,
        readOnly: readOnly,
        required: required
    }), /*#__PURE__*/ _react.default.createElement(_FieldDescription.default, {
        description: description,
        value: value
    }));
};
const _default = (0, _withCondition.default)(Checkbox);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hZG1pbi9jb21wb25lbnRzL2Zvcm1zL2ZpZWxkLXR5cGVzL0NoZWNrYm94L2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCdcblxuaW1wb3J0IHR5cGUgeyBQcm9wcyB9IGZyb20gJy4vdHlwZXMnXG5cbmltcG9ydCB7IGNoZWNrYm94IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vZmllbGRzL3ZhbGlkYXRpb25zJ1xuaW1wb3J0IHsgZ2V0VHJhbnNsYXRpb24gfSBmcm9tICcuLi8uLi8uLi8uLi8uLi91dGlsaXRpZXMvZ2V0VHJhbnNsYXRpb24nXG5pbXBvcnQgRGVmYXVsdEVycm9yIGZyb20gJy4uLy4uL0Vycm9yJ1xuaW1wb3J0IEZpZWxkRGVzY3JpcHRpb24gZnJvbSAnLi4vLi4vRmllbGREZXNjcmlwdGlvbidcbmltcG9ydCB1c2VGaWVsZCBmcm9tICcuLi8uLi91c2VGaWVsZCdcbmltcG9ydCB3aXRoQ29uZGl0aW9uIGZyb20gJy4uLy4uL3dpdGhDb25kaXRpb24nXG5pbXBvcnQgeyBmaWVsZEJhc2VDbGFzcyB9IGZyb20gJy4uL3NoYXJlZCdcbmltcG9ydCB7IENoZWNrYm94SW5wdXQgfSBmcm9tICcuL0lucHV0J1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnXG5cbmNvbnN0IGJhc2VDbGFzcyA9ICdjaGVja2JveCdcblxuY29uc3QgQ2hlY2tib3g6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCB7XG4gICAgbmFtZSxcbiAgICBhZG1pbjoge1xuICAgICAgY2xhc3NOYW1lLFxuICAgICAgY29tcG9uZW50czogeyBFcnJvciwgTGFiZWwsIGFmdGVySW5wdXQsIGJlZm9yZUlucHV0IH0gPSB7fSxcbiAgICAgIGNvbmRpdGlvbixcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgcmVhZE9ubHksXG4gICAgICBzdHlsZSxcbiAgICAgIHdpZHRoLFxuICAgIH0gPSB7fSxcbiAgICBkaXNhYmxlRm9ybURhdGEsXG4gICAgbGFiZWwsXG4gICAgb25DaGFuZ2UsXG4gICAgcGF0aDogcGF0aEZyb21Qcm9wcyxcbiAgICByZXF1aXJlZCxcbiAgICB2YWxpZGF0ZSA9IGNoZWNrYm94LFxuICB9ID0gcHJvcHNcblxuICBjb25zdCBFcnJvckNvbXAgPSBFcnJvciB8fCBEZWZhdWx0RXJyb3JcblxuICBjb25zdCB7IGkxOG4gfSA9IHVzZVRyYW5zbGF0aW9uKClcblxuICBjb25zdCBwYXRoID0gcGF0aEZyb21Qcm9wcyB8fCBuYW1lXG5cbiAgY29uc3QgbWVtb2l6ZWRWYWxpZGF0ZSA9IHVzZUNhbGxiYWNrKFxuICAgICh2YWx1ZSwgb3B0aW9ucykgPT4ge1xuICAgICAgcmV0dXJuIHZhbGlkYXRlKHZhbHVlLCB7IC4uLm9wdGlvbnMsIHJlcXVpcmVkIH0pXG4gICAgfSxcbiAgICBbdmFsaWRhdGUsIHJlcXVpcmVkXSxcbiAgKVxuXG4gIGNvbnN0IHsgZXJyb3JNZXNzYWdlLCBzZXRWYWx1ZSwgc2hvd0Vycm9yLCB2YWx1ZSB9ID0gdXNlRmllbGQoe1xuICAgIGNvbmRpdGlvbixcbiAgICBkaXNhYmxlRm9ybURhdGEsXG4gICAgcGF0aCxcbiAgICB2YWxpZGF0ZTogbWVtb2l6ZWRWYWxpZGF0ZSxcbiAgfSlcblxuICBjb25zdCBvblRvZ2dsZSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoIXJlYWRPbmx5KSB7XG4gICAgICBzZXRWYWx1ZSghdmFsdWUpXG4gICAgICBpZiAodHlwZW9mIG9uQ2hhbmdlID09PSAnZnVuY3Rpb24nKSBvbkNoYW5nZSghdmFsdWUpXG4gICAgfVxuICB9LCBbb25DaGFuZ2UsIHJlYWRPbmx5LCBzZXRWYWx1ZSwgdmFsdWVdKVxuXG4gIGNvbnN0IGZpZWxkSUQgPSBgZmllbGQtJHtwYXRoLnJlcGxhY2UoL1xcLi9nLCAnX18nKX1gXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e1tcbiAgICAgICAgZmllbGRCYXNlQ2xhc3MsXG4gICAgICAgIGJhc2VDbGFzcyxcbiAgICAgICAgc2hvd0Vycm9yICYmICdlcnJvcicsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgdmFsdWUgJiYgYCR7YmFzZUNsYXNzfS0tY2hlY2tlZGAsXG4gICAgICAgIHJlYWRPbmx5ICYmIGAke2Jhc2VDbGFzc30tLXJlYWQtb25seWAsXG4gICAgICBdXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbilcbiAgICAgICAgLmpvaW4oJyAnKX1cbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIC4uLnN0eWxlLFxuICAgICAgICB3aWR0aCxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2Ake2Jhc2VDbGFzc31fX2Vycm9yLXdyYXBgfT5cbiAgICAgICAgPEVycm9yQ29tcCBhbGlnbkNhcmV0PVwibGVmdFwiIG1lc3NhZ2U9e2Vycm9yTWVzc2FnZX0gc2hvd0Vycm9yPXtzaG93RXJyb3J9IC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxDaGVja2JveElucHV0XG4gICAgICAgIExhYmVsPXtMYWJlbH1cbiAgICAgICAgYWZ0ZXJJbnB1dD17YWZ0ZXJJbnB1dH1cbiAgICAgICAgYmVmb3JlSW5wdXQ9e2JlZm9yZUlucHV0fVxuICAgICAgICBjaGVja2VkPXtCb29sZWFuKHZhbHVlKX1cbiAgICAgICAgaWQ9e2ZpZWxkSUR9XG4gICAgICAgIGxhYmVsPXtnZXRUcmFuc2xhdGlvbihsYWJlbCB8fCBuYW1lLCBpMThuKX1cbiAgICAgICAgbmFtZT17cGF0aH1cbiAgICAgICAgb25Ub2dnbGU9e29uVG9nZ2xlfVxuICAgICAgICByZWFkT25seT17cmVhZE9ubHl9XG4gICAgICAgIHJlcXVpcmVkPXtyZXF1aXJlZH1cbiAgICAgIC8+XG4gICAgICA8RmllbGREZXNjcmlwdGlvbiBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259IHZhbHVlPXt2YWx1ZX0gLz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoQ29uZGl0aW9uKENoZWNrYm94KVxuIl0sIm5hbWVzIjpbImJhc2VDbGFzcyIsIkNoZWNrYm94IiwicHJvcHMiLCJuYW1lIiwiYWRtaW4iLCJjbGFzc05hbWUiLCJjb21wb25lbnRzIiwiRXJyb3IiLCJMYWJlbCIsImFmdGVySW5wdXQiLCJiZWZvcmVJbnB1dCIsImNvbmRpdGlvbiIsImRlc2NyaXB0aW9uIiwicmVhZE9ubHkiLCJzdHlsZSIsIndpZHRoIiwiZGlzYWJsZUZvcm1EYXRhIiwibGFiZWwiLCJvbkNoYW5nZSIsInBhdGgiLCJwYXRoRnJvbVByb3BzIiwicmVxdWlyZWQiLCJ2YWxpZGF0ZSIsImNoZWNrYm94IiwiRXJyb3JDb21wIiwiRGVmYXVsdEVycm9yIiwiaTE4biIsInVzZVRyYW5zbGF0aW9uIiwibWVtb2l6ZWRWYWxpZGF0ZSIsInVzZUNhbGxiYWNrIiwidmFsdWUiLCJvcHRpb25zIiwiZXJyb3JNZXNzYWdlIiwic2V0VmFsdWUiLCJzaG93RXJyb3IiLCJ1c2VGaWVsZCIsIm9uVG9nZ2xlIiwiZmllbGRJRCIsInJlcGxhY2UiLCJkaXYiLCJmaWVsZEJhc2VDbGFzcyIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwiYWxpZ25DYXJldCIsIm1lc3NhZ2UiLCJDaGVja2JveElucHV0IiwiY2hlY2tlZCIsImlkIiwiZ2V0VHJhbnNsYXRpb24iLCJGaWVsZERlc2NyaXB0aW9uIiwid2l0aENvbmRpdGlvbiJdLCJtYXBwaW5ncyI6Ijs7OzsrQkF1R0E7OztlQUFBOzs7K0RBdkdtQzs4QkFDSjs2QkFJTjtnQ0FDTTs4REFDTjt5RUFDSTtpRUFDUjtzRUFDSzt3QkFDSzt1QkFDRDtRQUN2Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRVAsTUFBTUEsWUFBWTtBQUVsQixNQUFNQyxXQUE0QixDQUFDQztJQUNqQyxNQUFNLEVBQ0pDLElBQUksRUFDSkMsT0FBTyxFQUNMQyxTQUFTLEVBQ1RDLFlBQVksRUFBRUMsS0FBSyxFQUFFQyxLQUFLLEVBQUVDLFVBQVUsRUFBRUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQzFEQyxTQUFTLEVBQ1RDLFdBQVcsRUFDWEMsUUFBUSxFQUNSQyxLQUFLLEVBQ0xDLEtBQUssRUFDTixHQUFHLENBQUMsQ0FBQyxFQUNOQyxlQUFlLEVBQ2ZDLEtBQUssRUFDTEMsUUFBUSxFQUNSQyxNQUFNQyxhQUFhLEVBQ25CQyxRQUFRLEVBQ1JDLFdBQVdDLHFCQUFRLEVBQ3BCLEdBQUdyQjtJQUVKLE1BQU1zQixZQUFZakIsU0FBU2tCLGNBQVk7SUFFdkMsTUFBTSxFQUFFQyxJQUFJLEVBQUUsR0FBR0MsSUFBQUEsNEJBQWM7SUFFL0IsTUFBTVIsT0FBT0MsaUJBQWlCakI7SUFFOUIsTUFBTXlCLG1CQUFtQkMsSUFBQUEsa0JBQVcsRUFDbEMsQ0FBQ0MsT0FBT0M7UUFDTixPQUFPVCxTQUFTUSxPQUFPO1lBQUUsR0FBR0MsT0FBTztZQUFFVjtRQUFTO0lBQ2hELEdBQ0E7UUFBQ0M7UUFBVUQ7S0FBUztJQUd0QixNQUFNLEVBQUVXLFlBQVksRUFBRUMsUUFBUSxFQUFFQyxTQUFTLEVBQUVKLEtBQUssRUFBRSxHQUFHSyxJQUFBQSxpQkFBUSxFQUFDO1FBQzVEeEI7UUFDQUs7UUFDQUc7UUFDQUcsVUFBVU07SUFDWjtJQUVBLE1BQU1RLFdBQVdQLElBQUFBLGtCQUFXLEVBQUM7UUFDM0IsSUFBSSxDQUFDaEIsVUFBVTtZQUNib0IsU0FBUyxDQUFDSDtZQUNWLElBQUksT0FBT1osYUFBYSxZQUFZQSxTQUFTLENBQUNZO1FBQ2hEO0lBQ0YsR0FBRztRQUFDWjtRQUFVTDtRQUFVb0I7UUFBVUg7S0FBTTtJQUV4QyxNQUFNTyxVQUFVLENBQUMsTUFBTSxFQUFFbEIsS0FBS21CLE9BQU8sQ0FBQyxPQUFPLE1BQU0sQ0FBQztJQUVwRCxxQkFDRSw2QkFBQ0M7UUFDQ2xDLFdBQVc7WUFDVG1DLHNCQUFjO1lBQ2R4QztZQUNBa0MsYUFBYTtZQUNiN0I7WUFDQXlCLFNBQVMsQ0FBQyxFQUFFOUIsVUFBVSxTQUFTLENBQUM7WUFDaENhLFlBQVksQ0FBQyxFQUFFYixVQUFVLFdBQVcsQ0FBQztTQUN0QyxDQUNFeUMsTUFBTSxDQUFDQyxTQUNQQyxJQUFJLENBQUM7UUFDUjdCLE9BQU87WUFDTCxHQUFHQSxLQUFLO1lBQ1JDO1FBQ0Y7cUJBRUEsNkJBQUN3QjtRQUFJbEMsV0FBVyxDQUFDLEVBQUVMLFVBQVUsWUFBWSxDQUFDO3FCQUN4Qyw2QkFBQ3dCO1FBQVVvQixZQUFXO1FBQU9DLFNBQVNiO1FBQWNFLFdBQVdBO3VCQUVqRSw2QkFBQ1ksb0JBQWE7UUFDWnRDLE9BQU9BO1FBQ1BDLFlBQVlBO1FBQ1pDLGFBQWFBO1FBQ2JxQyxTQUFTTCxRQUFRWjtRQUNqQmtCLElBQUlYO1FBQ0pwQixPQUFPZ0MsSUFBQUEsOEJBQWMsRUFBQ2hDLFNBQVNkLE1BQU11QjtRQUNyQ3ZCLE1BQU1nQjtRQUNOaUIsVUFBVUE7UUFDVnZCLFVBQVVBO1FBQ1ZRLFVBQVVBO3NCQUVaLDZCQUFDNkIseUJBQWdCO1FBQUN0QyxhQUFhQTtRQUFha0IsT0FBT0E7O0FBR3pEO01BRUEsV0FBZXFCLElBQUFBLHNCQUFhLEVBQUNsRCJ9